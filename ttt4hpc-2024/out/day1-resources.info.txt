1.3 Resources - Tuesday tools and techniques for HPC

How do you know how many resources to request on the cluster? This is a good question, but the answer usually isn't obvious (and is usually hand-waved at the start).  The answer is somehow "measure and test" - and that's what you will learn how to do here.

Learning goals:

- We understand what the Slurm job scheduler tries to do.

- We understand the dimensions of a Slurm job and how to specify them.

- Understand that job parameters affect not only resource use but also how long it will queue.

- Get a visual understanding of what the Slurm job scheduler does.

- Being able to reduce the system size to a small enough size to be able to test the scaling of a code.

- Timing a series of runs with increasing number of cores.

- How to measure and choose the right amount of memory

- Reading files is a common bottleneck

- One large file is usually faster than many small files

- Local hard disks and ramdisks can be much faster



Materials:

1. https://coderefinery.github.io/TTT4HPC_resource_management/scheduling/

2. https://coderefinery.github.io/TTT4HPC_resource_management/num-cores/

3. https://coderefinery.github.io/TTT4HPC_resource_management/memory/

04:10 1. Job scheduling and Slurm basics
25:38 2. How to choose the number of cores
39:57 3. Choosing the right amount of memory

-----

Do you use supercomputers in your research work? Are you curious about making your computing faster and more efficient? Join us for TTT4HPC: four self-contained episodes on best practices in High Performance Computing. This is a great chance to enhance your computational skills. What you will learn is also used a lot outside academia whenever large scale computations are needed.

Improve your cluster workflows! You've had a basic course on working with a cluster - but what do people actually do? This course shows practical examples and tips which may help you, but aren't usually covered in either basic or advanced courses.

We won't go so deep into each topic that you know everything about it, but you learn what is possible, see some examples, and know where to follow up on the tools that are right for you. The format is designed to be "fireside chat with experts", a combination of demos, type-along, and independent exercises. You can engage at different levels, depending on your interest.

Links:

- Playlist: https://www.youtube.com/playlist?list=PLpLblYHCzJABy4epFn-rqsfDbUZ1ff5Pl

- Course material: todo

- Workshop webpage: https://scicomp.aalto.fi/training/scip/ttt4hpc-2024/

- CodeRefinery: https://coderefinery.org