4.1 Parallelization without parallelization - Tuesday tools and techniques for HPC

Much is said about parallization of code: but often it focuses on MPI, OpenMP, GPUs (real parallization).  But far more often for typical people is embarrassingly parallel problems: things where you can basically run multiple things separately and combine the results later.  This can be handled at the level of the job scheduler, without extensive code modifications needed.  This is "High Throughput Computing" or HTC.  This lesson is about embarrassingly parallel problems.

We start with general discussion, and work our way from a Jupyter script to a Snakemake file which can be used for embarrassingly parallel problems.  To get there, we convert Jupyter to a script, then show how it can be submitted multiple times, then show how it can be turned into a batch job, and then how it can be managed with Snakemake.

Material: https://coderefinery.github.io/TTT4HPC_parallel_workflows/

00:11 § Motivation
09:37 § Concepts
13:45 § Pitfalls (concurrency issues)
21:05 § Pitfalls (hardware/server limitations)
23:36 Q&A
26:10 Summary of the rest of the lesson
31:17 § Jupyter notebook to a Python script
48:34 § Parallelize using scripting
59:33 Q&A
1:01:45 § Parallelize using Slurm array jobs
1:07:52 § Parallelize using a workflow manager
1:37:55 Final discussion about workflow managers
1:39:36 Conclusions about workflow managers
1:42:58 Wrap-up of the day

-----

Do you use supercomputers in your research work? Are you curious about making your computing faster and more efficient? Join us for TTT4HPC: four self-contained episodes on best practices in High Performance Computing. This is a great chance to enhance your computational skills. What you will learn is also used a lot outside academia whenever large scale computations are needed.

Improve your cluster workflows! You've had a basic course on working with a cluster - but what do people actually do? This course shows practical examples and tips which may help you, but aren't usually covered in either basic or advanced courses.

We won't go so deep into each topic that you know everything about it, but you learn what is possible, see some examples, and know where to follow up on the tools that are right for you. The format is designed to be "fireside chat with experts", a combination of demos, type-along, and independent exercises. You can engage at different levels, depending on your interest.

Links:

- Playlist: https://www.youtube.com/playlist?list=PLpLblYHCzJABy4epFn-rqsfDbUZ1ff5Pl

- Workshop webpage: https://scicomp.aalto.fi/training/scip/ttt4hpc-2024/

- CodeRefinery: https://coderefinery.org