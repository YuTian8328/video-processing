3.4 Parallel - Python for Scientific Computing 2022


Parallel programming: doing more than one thing at a time.  It is often needed when you need more computer power, and there are a variety of ways to do it.  We don't go much into depth, but we do tell the basics.

https://aaltoscicomp.github.io/python-for-scicomp/parallel/
00:27 Modes of parallelism
01:54 Parallel paradigms (embarrassingly, shared memory, message passing)
07:17 Python's global interpreter lock (GIL)
10:37 Python's multiprocessing module
14:30 Exercise introduction (multiprocessing)
16:28 Exercise discussion
17:42 MPI (discussion + example)
29:23 Dask
31:56 Summary of Parallel
32:29 Day 3 feedback/wrap-up
-----

Python for Scientific Computing is a bridge between basic Python courses and scientific work with Python.  This is a basic to intermediate course in Python tools such as NumPy, SciPy, Matplotlib, and Pandas.  It also covers some more advanced tools, such as Binder, releasing software, data formats, etc.  It is suitable for people who have a basic understanding of Python and want to know some internals and important libraries for science.  We don't cover anything in too much depth, but we do introduce you to all of the main tools you will need.



This course was put on as a collaboration between partners in Finland, Norway, and Sweden, coordinated by Aalto Scientific Computing.



Links:

- Playlist: https://www.youtube.com/playlist?list=PLZLVmS9rf3nOm3xkYuInBWPUvS93sAUlk

- Course material: https://aaltoscicomp.github.io/python-for-scicomp/

- Workshop webpage: https://scicomp.aalto.fi/training/scip/python-for-scicomp-2022/

- Aalto Scientific Computing: https://scicomp.aalto.fi/

- CodeRefinery: https://coderefinery.org

