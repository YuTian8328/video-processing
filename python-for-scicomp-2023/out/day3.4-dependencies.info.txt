3.4 Dependencies - Python for Scientific Computing 2023

Dependency management with environments and requirement files in Python.

When you have projects that depend on other libraries, you need some way of recording and managing these.  Here, we learn of the basic concepts, how to record dependencies (requirements.txt, environment.yml), and how to use the virtual environments/conda environments.

https://aaltoscicomp.github.io/python-for-scicomp/dependencies/

00:00 About dependency management
01:04 Python Package Index and Anaconda, pip vs conda, and more.
14:07 Creating isolated environments
18:13 Recording dependencies (requirements.txt and environment.yml)
26:29 Exercise 4 (as demo): freezing an environment
38:42 mamba (since previous attempt was slow)
40:05 Activating environments
46:41 Q&A

-----

Python for Scientific Computing is a bridge between basic Python courses and scientific work with Python.  This is a basic to intermediate course in Python tools such as NumPy, SciPy, Matplotlib, and Pandas.  It also covers some more advanced tools, such as Binder, releasing software, data formats, etc.  It is suitable for people who have a basic understanding of Python and want to know some internals and important libraries for science.  We don't cover anything in too much depth, but we do introduce you to all of the main tools you will need.

This course was put on as a collaboration between partners in Finland, Norway, and Sweden, coordinated by Aalto Scientific Computing.

Links:

- Playlist: https://www.youtube.com/playlist?list=PLZLVmS9rf3nNI3oQEqSJW6yXltOAZnkpa

- Course material: https://aaltoscicomp.github.io/python-for-scicomp/

- Workshop webpage: https://scicomp.aalto.fi/training/scip/python-for-scicomp-2023/

- Aalto Scientific Computing: https://scicomp.aalto.fi/

- CodeRefinery: https://coderefinery.org