1
00:00:00,000 --> 00:00:02,000
CodeRefinery.org

2
00:00:30,000 --> 00:00:32,060
you

3
00:01:00,000 --> 00:01:02,060
you

4
00:01:30,000 --> 00:01:32,060
you

5
00:02:00,000 --> 00:02:02,060
you

6
00:02:30,000 --> 00:02:32,060
you

7
00:03:00,000 --> 00:03:02,060
you

8
00:03:30,000 --> 00:03:32,060
you

9
00:04:00,000 --> 00:04:02,060
you

10
00:04:30,000 --> 00:04:32,060
you

11
00:05:00,000 --> 00:05:02,060
you

12
00:05:30,000 --> 00:05:32,060
you

13
00:06:00,000 --> 00:06:02,060
you

14
00:06:30,000 --> 00:06:54,880
Hello, can everyone hear us?

15
00:06:54,880 --> 00:07:00,960
Can someone give a reaction, if you can?

16
00:07:00,960 --> 00:07:04,480
Hello, hello.

17
00:07:04,480 --> 00:07:15,600
So if you can, we are here.

18
00:07:15,600 --> 00:07:18,900
What I've shared here is our notes.

19
00:07:18,900 --> 00:07:22,800
If you've registered, you should have it as a link.

20
00:07:22,800 --> 00:07:31,000
We can scroll down to this icebreaker and begin talking a little bit while I try to

21
00:07:31,000 --> 00:07:34,760
stop my cat from destroying something on my desk.

22
00:07:34,760 --> 00:07:38,920
How come the cat is very active?

23
00:07:38,920 --> 00:07:41,280
It's just 11.50.

24
00:07:41,280 --> 00:07:49,360
I guess it just, well, I don't know, like sometimes it comes earlier in the day.

25
00:07:49,360 --> 00:07:57,300
So for anyone new here, my cat often visits during courses, especially later in the day

26
00:07:57,300 --> 00:08:01,040
as it approaches 4 o'clock when it's its feeding time.

27
00:08:01,040 --> 00:08:05,880
So that's the motivation for staying through the whole time.

28
00:08:05,880 --> 00:08:12,320
So if you leave early, you lose cat observation possibilities.

29
00:08:12,320 --> 00:08:15,760
Anyway, yeah.

30
00:08:15,760 --> 00:08:18,960
So hi everyone.

31
00:08:18,960 --> 00:08:23,360
gotten any indication of audio yet?

32
00:08:24,000 --> 00:08:27,600
I checked the stream and it it seemed to

33
00:08:27,600 --> 00:08:34,080
work at least. Okay, good. But if others want to respond to the

34
00:08:34,080 --> 00:08:40,640
notes that's of course a good idea. Yeah, so the next question is

35
00:08:40,640 --> 00:08:44,080
is our audio balanced?

36
00:08:44,080 --> 00:08:47,120
Should we do the standard test?

37
00:08:47,120 --> 00:08:48,120
Yep.

38
00:08:48,120 --> 00:08:49,120
Okay.

39
00:08:49,120 --> 00:08:50,120
Me, [name], [name].

40
00:08:50,120 --> 00:08:51,120
One.

41
00:08:51,120 --> 00:08:52,120
Two.

42
00:08:52,120 --> 00:08:53,120
Three.

43
00:08:53,120 --> 00:08:54,120
Four.

44
00:08:54,120 --> 00:08:55,120
Five.

45
00:08:55,120 --> 00:08:56,120
Six.

46
00:08:56,120 --> 00:08:57,120
Okay.

47
00:08:57,120 --> 00:09:01,560
Let us know who might be quieter.

48
00:09:01,560 --> 00:09:04,640
How can people let us know?

49
00:09:04,640 --> 00:09:07,480
Well, at least the channel people could.

50
00:09:07,480 --> 00:09:08,480
Yeah.

51
00:09:08,480 --> 00:09:11,320
So you can write it in the notes here.

52
00:09:11,320 --> 00:09:21,400
me open that up. Oh yeah, actually, someone is writing. I'm the loudest. Okay. Yeah,

53
00:09:21,400 --> 00:09:25,320
I'll turn myself a bit up or just shout a bit louder. Okay.

54
00:09:28,840 --> 00:09:34,440
So anyway, some people have already figured out how Notes and Stuff works. So basically,

55
00:09:34,440 --> 00:09:40,520
we have this document everyone can write. And as we're talking at any time, you can write questions

56
00:09:40,520 --> 00:09:46,560
answer comments. One of the co-instructors might see it, but we also have a whole bunch

57
00:09:46,560 --> 00:09:52,040
of people in the background who will be reading and answering during the course. So, you can

58
00:09:52,040 --> 00:09:59,160
ask as many questions as you want, and usually we get most of them answered.

59
00:09:59,160 --> 00:10:08,340
And as a practice, we have icebreakers here. So, please open it up if you're registered.

60
00:10:08,340 --> 00:10:14,380
If not registering, we'll get you the link automatically emailed to you.

61
00:10:14,380 --> 00:10:22,440
And then scroll down to these sections.

62
00:10:22,440 --> 00:10:23,900
So what's your position?

63
00:10:23,900 --> 00:10:26,620
Use this O symbol to vote.

64
00:10:26,620 --> 00:10:30,700
So as you see, people are adding different votes here.

65
00:10:30,700 --> 00:10:34,020
It's like a dynamically generated bar graph that's a poll.

66
00:10:34,020 --> 00:10:40,060
So yeah, add in your votes there.

67
00:10:43,620 --> 00:10:51,660
Then you can also add in where you are now,

68
00:10:51,660 --> 00:10:56,340
so as in what city or country you're in.

69
00:10:56,340 --> 00:10:59,380
Or you can try to be more clever if you want to.

70
00:11:04,020 --> 00:11:10,020
What's the biggest computer you've used so far?

71
00:11:10,020 --> 00:11:15,020
Yeah, I mean it could be your own computer or some workstation.

72
00:11:15,020 --> 00:11:24,020
And then what do you work on?

73
00:11:24,020 --> 00:11:31,020
Yeah, so like what kind of scientific work or other work, basically, while you're here?

74
00:11:31,020 --> 00:11:36,660
here. So we want to know a little bit about you. And maybe we can start by telling about

75
00:11:36,660 --> 00:11:45,580
us some. So I'm [name]. I'm a, well HR considers me a staff scientist at Aalto

76
00:11:45,580 --> 00:11:54,660
University. I work in the computing, the high-performance computing team at Aalto. And we also do a

77
00:11:54,660 --> 00:12:02,660
lot of teaching, and then a lot of research software engineer support. So basically going

78
00:12:02,660 --> 00:12:09,540
and helping you with your very code. And I'm really glad to be here. So this is one of our

79
00:12:10,340 --> 00:12:15,780
best and most important courses of the year, and we're glad that we have several hundred

80
00:12:15,780 --> 00:12:21,300
registrations here. [name], do you want to tell a little bit about you?

81
00:12:21,300 --> 00:12:29,300
Yes, so my name is [name]. I'm a Research Software Engineer in Aalto Scientific Computing.

82
00:12:29,300 --> 00:12:35,300
Previously worked on the HPC side of the team as well.

83
00:12:35,300 --> 00:12:45,300
Yeah, I've been teaching this course for many years now in conjunction with other people and yeah, I think it's very good.

84
00:12:45,300 --> 00:12:52,740
we try to make this course as palatable for people that are new to HPC so that they don't get scared

85
00:12:52,740 --> 00:12:59,700
and people can can do their research in the best way possible. So I'm very happy to be here and

86
00:13:00,260 --> 00:13:09,380
see what we can achieve together during the few days. Yeah okay and [name]. And then it's me

87
00:13:09,380 --> 00:13:17,220
which most likely you've seen my name in your mailbox. So I've been coordinating this

88
00:13:17,860 --> 00:13:24,100
adventure as well as many other that we have had and we will have in the in the future. So in

89
00:13:24,100 --> 00:13:28,740
general we are organizing these type of open courses. I don't know if this is the first time

90
00:13:28,740 --> 00:13:34,900
that you attend a course on Twitch TV. For us it's always exciting even though we've been doing this

91
00:13:34,900 --> 00:13:40,500
for what, two years now? Two years. Or is it three years? Yeah, maybe three years.

92
00:13:40,500 --> 00:13:46,580
Or is it 2021 January? Yeah, anyway. And we hope even actually that this way of

93
00:13:46,580 --> 00:13:54,340
teaching is inspiring in a way that maybe next time you want to join us for some broadcasting

94
00:13:54,340 --> 00:14:00,100
together to talk about your research or how you solve some problems that could be helpful

95
00:14:00,100 --> 00:14:08,580
for others too. So I would want to quickly mention that we mentioned Twitch. One

96
00:14:09,300 --> 00:14:15,700
quality of life thing for the Twitch stream. I would highly recommend that everybody goes

97
00:14:15,700 --> 00:14:21,620
in the Twitch stream and then checks the gear icon on the bottom right and sets it instead of auto

98
00:14:21,620 --> 00:14:25,620
into the best possible resolution.

99
00:14:25,620 --> 00:14:29,620
Because Twitch tries to modify the bandwidth

100
00:14:29,620 --> 00:14:33,620
or which compression it uses in the stream.

101
00:14:33,620 --> 00:14:37,620
So if you want to see the crisp clear text that we are streaming

102
00:14:37,620 --> 00:14:41,620
then setting it to the best possible resolution is a good idea.

103
00:14:45,620 --> 00:14:49,620
Is this new? So I thought at one point

104
00:14:49,620 --> 00:14:55,300
point Twitch didn't do transcoding for free streams.

105
00:14:58,620 --> 00:15:02,900
I think it does for all streams.

106
00:15:02,900 --> 00:15:06,140
Yeah, it does like less time with performance.

107
00:15:06,140 --> 00:15:06,820
Yeah, exactly.

108
00:15:09,820 --> 00:15:11,980
So from the gear icon on the settings,

109
00:15:11,980 --> 00:15:13,100
you can check the quality.

110
00:15:13,100 --> 00:15:15,420
And if you set it to be the source quality,

111
00:15:15,420 --> 00:15:20,460
you will get the best view of the material.

112
00:15:20,460 --> 00:15:21,300
Yeah.

113
00:15:21,300 --> 00:15:23,660
OK.

114
00:15:23,660 --> 00:15:27,100
So my next question, what's the coolest thing about today

115
00:15:27,100 --> 00:15:30,220
that people should look forward to?

116
00:15:30,220 --> 00:15:31,180
Let's go backwards.

117
00:15:31,180 --> 00:15:32,420
[name].

118
00:15:32,420 --> 00:15:37,340
Well, I'm going to briefly talk about Code Refinery, which

119
00:15:37,340 --> 00:15:40,300
is a six-day workshop, but I will

120
00:15:40,300 --> 00:15:42,900
try to compress it in 20 minutes just

121
00:15:42,900 --> 00:15:48,580
give them motivation for people to take it next time we run it. So at least that's the most exciting

122
00:15:49,860 --> 00:15:53,060
thing that I will talk about today. But what about you [name]?

123
00:15:55,940 --> 00:16:03,140
Well I would say the most interesting part for me is like new demos that we have planned for this

124
00:16:03,140 --> 00:16:11,380
year. So new demos on how to run new software for softwares in the cluster and hopefully they will

125
00:16:11,380 --> 00:16:17,460
demonstrate what sort of capabilities the computing cluster can have. But also I would

126
00:16:17,460 --> 00:16:24,980
say that I always enjoy listening to our guest talk and the guest people who come and discuss

127
00:16:24,980 --> 00:16:31,940
about how they how they do their SPC work and how they ended up in the computer like

128
00:16:31,940 --> 00:16:37,220
in the field of doing computations with well scientific computations.

129
00:16:37,220 --> 00:16:41,540
Yeah. Because that's something new every year for me.

130
00:16:42,180 --> 00:16:49,220
Yeah. And same for me. I mean, it's easy to get courses and read about technical things,

131
00:16:49,220 --> 00:16:55,780
but the way we've added this interview with how people actually find their careers in these fields,

132
00:16:55,780 --> 00:17:03,060
I think, is a story that is really often not told. But with that being said,

133
00:17:03,060 --> 00:17:08,020
it's almost time to get started. Should I switch to my screen for the intro?

134
00:17:09,620 --> 00:17:18,420
Yep. Okay, so we've got 10 minutes. Here we go. This is the

135
00:17:20,260 --> 00:17:29,460
main page. You should have this in your info. If we scroll down to the schedule,

136
00:17:29,460 --> 00:17:34,460
we have this Keycomp kickstart intro.

137
00:17:34,460 --> 00:17:39,460
So, really quick.

138
00:17:39,460 --> 00:17:44,460
Who are we? So, well, we just basically introduced that. We are a team at

139
00:17:44,460 --> 00:17:49,460
Alta University, but this course is not just about our cluster. It's about many

140
00:17:49,460 --> 00:17:54,460
clusters, and we have many partners here who are helping us, although we wish we had more.

141
00:17:54,460 --> 00:17:58,620
So if you're watching, please be a partner next year.

142
00:18:01,340 --> 00:18:02,540
What's in this course?

143
00:18:03,420 --> 00:18:06,540
So day one is sort of general big picture things.

144
00:18:06,540 --> 00:18:11,580
So about data, reproducibility, computing, and also a little bit of connecting

145
00:18:12,140 --> 00:18:13,980
to prepare for day two.

146
00:18:13,980 --> 00:18:20,060
But it's quite generic and stuff that almost anyone could be or should be watching

147
00:18:20,060 --> 00:18:21,580
that's doing anything about computing.

148
00:18:22,140 --> 00:18:24,060
Day two and three get more specialized.

149
00:18:24,060 --> 00:18:28,700
This is the part where we're actually talking about how to use the cluster.

150
00:18:29,500 --> 00:18:34,220
And, well, not everyone needs to do that yet, but more people do.

151
00:18:35,740 --> 00:18:37,260
But some people do.

152
00:18:39,100 --> 00:18:40,140
So who's attending?

153
00:18:40,140 --> 00:18:43,500
So we have multiple universities, as I said.

154
00:18:43,500 --> 00:18:46,700
Our demos are based on our own universities cluster,

155
00:18:46,700 --> 00:18:49,980
so some of the examples may need adapting to other sites.

156
00:18:49,980 --> 00:18:55,780
we will carefully explain what these differences might be and give you time

157
00:18:55,780 --> 00:18:59,780
to figure it out for yourself. But the big picture, we're trying to make this

158
00:18:59,780 --> 00:19:04,800
useful for everyone. You can ask questions about other universities. They

159
00:19:04,800 --> 00:19:08,300
might have people watching the notes or they might have their own breakout rooms

160
00:19:08,300 --> 00:19:14,320
or things like that. You have to talk to your own local people. Practicalities.

161
00:19:14,320 --> 00:19:19,780
How it works. So unlike most courses we can reach hundreds of people. Right now

162
00:19:19,780 --> 00:19:28,740
we have 100 people watching right now. So we are a live stream broadcast. Anyone can watch,

163
00:19:28,740 --> 00:19:33,300
and we have these different pauses, sort of like commercial breaks, for you to work on exercises

164
00:19:33,300 --> 00:19:39,700
or for normal breaks. There is a Zoom for some people, and if you're there, you can work on

165
00:19:39,700 --> 00:19:46,900
exercises when you're there. There's many different parts. So there's talking and demos,

166
00:19:46,900 --> 00:19:52,260
which is on the live stream. There's type along where we're typing and you should also be typing

167
00:19:52,260 --> 00:19:57,780
at the same time. There's exercises where we tell you what to do and then you have time to do it

168
00:19:57,780 --> 00:20:03,060
yourself. And we have breaks at least 10 minutes every hour, usually towards the top of the hour.

169
00:20:05,940 --> 00:20:13,540
For chat and communication. So we've already gone over the notes here. So the idea is you

170
00:20:13,540 --> 00:20:18,100
you register, you get this link, you can switch to edit mode, and you ask questions in bullet

171
00:20:18,100 --> 00:20:23,700
points, and you make answers. Or other people make answers. We have a whole bunch of people

172
00:20:23,700 --> 00:20:31,900
who are here to do this. So just ask whatever you want, whatever.

173
00:20:31,900 --> 00:20:36,620
So the biggest problem that you might experience is that there's too many questions, and you

174
00:20:36,620 --> 00:20:42,860
can't follow them all. In that case, just don't. I mean, ask your question, come back

175
00:20:42,860 --> 00:20:47,420
later, come read it later, search for what you need, but there's definitely going to

176
00:20:47,420 --> 00:20:51,100
be too many questions asked for you to follow them all.

177
00:20:51,100 --> 00:20:57,220
So don't let that trip you up.

178
00:20:57,220 --> 00:21:00,820
I guess people have figured out the view and edit modes.

179
00:21:00,820 --> 00:21:06,420
So the notes are public, so don't include any names there or other identifying information,

180
00:21:06,420 --> 00:21:07,420
please.

181
00:21:07,420 --> 00:21:09,260
We will remove that right away.

182
00:21:09,260 --> 00:21:15,500
also try to remove it before archival, but better to just do it right now. So can everyone go to

183
00:21:15,500 --> 00:21:21,260
the notes now and try to answer the icebreaker if you haven't done it already? So that is

184
00:21:22,060 --> 00:21:23,980
this here that I was sharing before.

185
00:21:27,900 --> 00:21:33,740
Okay, so where do you focus? So yeah, there's so much there. So the first priority should be the

186
00:21:33,740 --> 00:21:39,580
screen share and what we're talking. If you have time, then your own type along.

187
00:21:41,980 --> 00:21:46,860
Then if you're bored or have a bunch of extra mental capacity, you can start browsing the

188
00:21:46,860 --> 00:21:53,740
notes and seeing what else is there, what other questions. And then the lesson webpage,

189
00:21:53,740 --> 00:21:59,900
if that's relevant to what we're talking about. So we have this really unique vertical screen share.

190
00:21:59,900 --> 00:22:06,620
the idea is to make it big and it takes half your screen and the other half is for you.

191
00:22:08,860 --> 00:22:12,060
After you've experienced this, you'll wonder why other courses don't

192
00:22:12,060 --> 00:22:19,740
do this because it just makes so much sense. As [name] had said, you can go to Twitch and

193
00:22:20,300 --> 00:22:25,580
make sure it's on source resolution and not auto to keep it as high as possible.

194
00:22:25,580 --> 00:22:33,500
So we want to be accessible to many learning styles, and not everyone has to take the same

195
00:22:33,500 --> 00:22:35,060
path.

196
00:22:35,060 --> 00:22:41,420
So some people may prefer to watch passively and do the exercises and self-study later.

197
00:22:41,420 --> 00:22:44,500
Some people might be active in all the exercises.

198
00:22:44,500 --> 00:22:48,100
You might leave this on in the background while you do other things.

199
00:22:48,100 --> 00:22:52,200
You might miss a part and want to review videos later in the evening.

200
00:22:52,200 --> 00:22:58,840
answer the Twitch chat question. Yes, this is being recorded. Twitch will have it right away,

201
00:22:59,400 --> 00:23:03,400
and we'll have process videos on YouTube by this evening.

202
00:23:07,000 --> 00:23:11,640
Yeah, so please be nice to all the community and be respectful to each other.

203
00:23:12,280 --> 00:23:18,040
So, teaching is a pretty difficult thing to do, and there's many things going on.

204
00:23:18,040 --> 00:23:23,480
This is a live course, so yeah, things will go wrong. It's okay. Please follow along with us

205
00:23:23,480 --> 00:23:28,520
anyway. Everyone's at different skill levels. That's okay. Please help each other. Everyone

206
00:23:28,520 --> 00:23:32,760
is somehow both a teacher and a learner. We learn from you, and you learn from us.

207
00:23:34,120 --> 00:23:39,240
If you're in any small groups or whatever, take the time to check in and ask,

208
00:23:41,480 --> 00:23:46,920
how's it going? Does anyone need help? Things like that. We try to do that often with feedback.

209
00:23:46,920 --> 00:23:50,120
And once something isn't right, then speak up very quickly.

210
00:23:50,840 --> 00:23:53,800
Especially if you can't see something you need to see,

211
00:23:53,800 --> 00:23:57,240
or you can't hear something, like our audio is bad.

212
00:23:57,240 --> 00:24:00,360
Just tell us, hey, we're not following, please do something.

213
00:24:01,160 --> 00:24:02,760
And we'll fix that right away.

214
00:24:03,720 --> 00:24:07,080
Okay, what can and most certainly will go wrong.

215
00:24:07,080 --> 00:24:10,280
So as I said, you can get overloaded with information.

216
00:24:10,280 --> 00:24:11,720
This is definitely going to happen.

217
00:24:11,720 --> 00:24:16,760
And as we said, take a step back and be more passive.

218
00:24:16,760 --> 00:24:23,080
and realize you can come back to it later. The notes, this should say notes and not HackMD,

219
00:24:23,080 --> 00:24:27,720
it's too fast to follow, so then don't follow it. It's published for future reference, so

220
00:24:27,720 --> 00:24:36,680
just hide it and remove it as a distraction. If the notes lag and you can't edit, that sometimes

221
00:24:36,680 --> 00:24:43,480
happens, so we try to keep it short but then switch to view mode and wait a little bit for it to

222
00:24:43,480 --> 00:24:51,760
calm down some. There's an archive that's posted and a link should be at the top

223
00:24:51,760 --> 00:24:59,360
and use that for the stuff that has been removed. If we don't have time to cover

224
00:24:59,360 --> 00:25:03,880
everything, well that's just a fact. We won't. There's far more that we can cover

225
00:25:03,880 --> 00:25:08,960
than we have time to. So we aim to give a big summary and to start you on your

226
00:25:08,960 --> 00:25:14,080
learning path but all the materials there for you to review and come back to

227
00:25:14,080 --> 00:25:19,200
later. We deviate from the schedule. We'll try to stay on track but it's

228
00:25:19,200 --> 00:25:24,400
gonna happen sometimes. We'll adapt to what people are interested in. If there's

229
00:25:24,400 --> 00:25:27,720
major accessibility problems like the audio quality is bad, the screen isn't

230
00:25:27,720 --> 00:25:32,840
visible, you need a break but we're not doing it, our explanation is completely

231
00:25:32,840 --> 00:25:37,400
unintelligible, write the problem right away and say hey I don't understand this

232
00:25:37,400 --> 00:25:41,880
we have this problem. Our instructors will see this and we will do something.

233
00:25:45,080 --> 00:25:51,240
Let's see. If the stream suddenly dies, that means my computer has crashed. In that case,

234
00:25:51,240 --> 00:25:57,960
wait a few minutes and it will come back. If you're missing something important for the course,

235
00:25:57,960 --> 00:26:04,360
well, sorry, that's okay. Wait and come back the next day and work on it. If you can't attend

236
00:26:04,360 --> 00:26:10,760
every day, that's okay. If a cat visits us, well, that's the opposite of a problem, and I'll make

237
00:26:10,760 --> 00:26:16,600
sure to turn on my video so everyone can see it. Expect it later in the day, some. If you want to

238
00:26:16,600 --> 00:26:22,040
know more, ask around. So as final notes, the course is recorded, everything will be put on

239
00:26:22,040 --> 00:26:28,760
YouTube. You cannot possibly be in the video because of the way we're doing it as livestream,

240
00:26:28,760 --> 00:26:33,240
that's the whole point here. But don't add names to notes or anything like that. Anything you

241
00:26:33,240 --> 00:26:38,680
write in the notes will be published with a CC license, so everyone that follows you will be able

242
00:26:38,680 --> 00:26:46,440
to follow up on it. Do we assign credits for this course right now? No, we don't. Okay, yeah.

243
00:26:47,960 --> 00:26:54,200
And please join us for future courses or things like that. You can join our chat,

244
00:26:54,200 --> 00:27:02,680
join Code Refinery, and take part next time. Okay, that's my part. Is there anything in the notes

245
00:27:03,240 --> 00:27:11,920
for the intro now no nothing special but please people feel free to add whatever

246
00:27:11,920 --> 00:27:18,920
questions you might have okay so that's the intro so who's next for the screen

247
00:27:18,920 --> 00:27:26,000
yeah I could I'm ready sharing if you wanna okay I'll send it to you and [name]

248
00:27:26,000 --> 00:27:30,000
and head off now. Bye.

249
00:27:30,000 --> 00:27:32,000
Bye.

250
00:27:32,000 --> 00:27:35,000
So now it's 11 past 12.

251
00:27:35,000 --> 00:27:39,000
So we are almost perfect with the timings.

252
00:27:39,000 --> 00:27:41,000
As you see in the schedule here,

253
00:27:41,000 --> 00:27:43,000
there's going to be me and [name] now

254
00:27:43,000 --> 00:27:46,000
talking about from data storage to your science.

255
00:27:46,000 --> 00:27:50,000
It's, you know, very generic talk,

256
00:27:50,000 --> 00:27:52,000
but it's good in my opinion to set the basics.

257
00:27:52,000 --> 00:27:53,000
We've been doing it.

258
00:27:53,000 --> 00:28:02,640
We've been doing this type of basic things over the years and it's good to start with

259
00:28:02,640 --> 00:28:10,000
some definition of what people mean with computing and of course, it's always good to cite some

260
00:28:10,000 --> 00:28:19,280
XKCD cartoon and this is very, very representative of the average picture of a researcher in academia

261
00:28:19,280 --> 00:28:25,040
but also in industry. Honestly, the picture is the same. So the one guy is asking, this is your

262
00:28:25,040 --> 00:28:30,160
machine learning system. Yep. You put the data into this big pile of linear algebra and then

263
00:28:30,160 --> 00:28:36,880
collect the answers on the other side. And what if the answers are wrong? You just steer the,

264
00:28:36,880 --> 00:28:43,920
you know, steer the pile until they spit, until they start looking right. So in general,

265
00:28:43,920 --> 00:28:50,240
scientific computing is about getting some data in doing some magic with the data and getting

266
00:28:50,240 --> 00:28:56,160
something out but of course in between it's not just a black box there's so many things to take

267
00:28:56,160 --> 00:29:02,080
into account which resources do you need and i'm really talking about physical you know hardware

268
00:29:02,080 --> 00:29:07,760
hardware resources or maybe what you need to be careful with the code with the environment

269
00:29:07,760 --> 00:29:10,960
so that you can, for example, reproduce what you do.

270
00:29:12,080 --> 00:29:16,560
So here we have a common scientific computing flow chart,

271
00:29:16,560 --> 00:29:19,680
which is basically what the cartoon was saying earlier.

272
00:29:19,680 --> 00:29:21,040
You get some data.

273
00:29:21,040 --> 00:29:25,360
You get some models that might come from other sources.

274
00:29:26,240 --> 00:29:31,360
You have hypotheses from the literature or whatever you learn from the literature.

275
00:29:32,400 --> 00:29:36,880
And then everything gets gathered into this process block.

276
00:29:37,760 --> 00:29:44,800
And so given the data, the models and whatever else you need to gather together, you generate

277
00:29:44,800 --> 00:29:49,840
the outputs, which could be these derivatives, so-called derivatives file, they can be figures,

278
00:29:49,840 --> 00:29:55,280
they can be tables. And then you write your papers, your posters and so on.

279
00:29:56,000 --> 00:30:02,000
So what actually happens in practice, and I know this is super basic, maybe most of you have done

280
00:30:02,000 --> 00:30:10,880
this in high school, but it's always good to set the dictionary for everyone. So there's this type

281
00:30:10,880 --> 00:30:17,200
of user layer, which is where we are right now. And as a user, you might work with some applications.

282
00:30:17,200 --> 00:30:23,920
You might use R, Matlab, Python, and so on. The applications are on top of a so-called

283
00:30:23,920 --> 00:30:30,000
operating system. It can be Linux, it can be Windows, it can be Mac, whatever. And on top

284
00:30:30,000 --> 00:30:36,960
of the operating system we have the actual hardware, the CPU central processing units where

285
00:30:36,960 --> 00:30:44,320
the actual math happens, the memory random access memory which is where you want to store your

286
00:30:44,320 --> 00:30:52,960
variables or your code for the time that the CPUs can access it, this SSD which is basically the

287
00:30:53,520 --> 00:30:59,760
a little bit slower and bigger storage for storing the data or the code or whatever else

288
00:31:00,000 --> 00:31:01,920
you need to store.

289
00:31:01,920 --> 00:31:04,920
In some hardwares, we also have the GPUs,

290
00:31:04,920 --> 00:31:08,100
which are like CPUs, but many of them

291
00:31:08,100 --> 00:31:10,120
compressed together so that things can be

292
00:31:10,120 --> 00:31:12,400
done much faster in parallel.

293
00:31:12,400 --> 00:31:16,040
And we will talk about this in the day two and three.

294
00:31:16,040 --> 00:31:18,840
But then, of course, you have connectivity,

295
00:31:18,840 --> 00:31:22,400
because sometimes you need to download data

296
00:31:22,400 --> 00:31:25,440
from external sources to your laptop,

297
00:31:25,440 --> 00:31:27,400
or maybe you're not even on your laptop,

298
00:31:27,400 --> 00:31:29,000
like we will show tomorrow.

299
00:31:29,000 --> 00:31:32,720
and the day after, because your laptop doesn't have GPUs,

300
00:31:32,720 --> 00:31:34,840
your laptop doesn't have enough RAM.

301
00:31:34,840 --> 00:31:38,760
So you are in some remote system connected via the internet

302
00:31:38,760 --> 00:31:40,560
where you can run your things.

303
00:31:40,560 --> 00:31:45,200
So here we wrote together kind of a glossary of these terms

304
00:31:45,200 --> 00:31:48,640
in case some of these are not familiar.

305
00:31:48,640 --> 00:31:52,720
But now maybe if I can ask a question to [name],

306
00:31:52,720 --> 00:31:57,480
like what I'm kind of started to describe what's a laptop

307
00:31:57,480 --> 00:32:03,240
what's the normal workflow that people might be familiar with, but how do I know how to know when

308
00:32:03,240 --> 00:32:11,160
I need to scale up to a bigger system? Maybe another question that I can add is that often

309
00:32:11,160 --> 00:32:16,280
people they move their workflow from the laptop to some HPC system and they realize that it's

310
00:32:16,280 --> 00:32:27,000
actually slower there. Why is it so? If we think about the previous diagram of the scientific

311
00:32:27,000 --> 00:32:35,160
process that you showed, it didn't show anything about how do you plan on doing this? Or which

312
00:32:35,160 --> 00:32:42,760
hardware are you planning to use for any of these things? Where do you do the processing for the raw

313
00:32:42,760 --> 00:32:50,680
data and the models and what do you do with the derivatives? It doesn't have any connection or

314
00:32:50,680 --> 00:32:56,920
necessary like definition of where do where should you run these where should you do these

315
00:32:56,920 --> 00:33:04,200
calculations and for many of us it's of course we are using the nearest machine that we have let's

316
00:33:04,200 --> 00:33:11,400
say our computer like our laptop that is provided by the department so we are using the most obvious

317
00:33:11,400 --> 00:33:20,120
resource that we have to do many of these calculations and usually that machine is for you

318
00:33:20,680 --> 00:33:28,760
that machine is dedicated for you, that is yours. And when we are then speaking about

319
00:33:28,760 --> 00:33:36,040
high-performance computing, we are talking about the process where we're pooling resources so that

320
00:33:36,040 --> 00:33:47,400
we can share the resources. Like we have usually funding from a bigger provider that gives us

321
00:33:47,400 --> 00:33:53,880
possibility of getting bigger machines and the bigger machines are then shared by multiple people.

322
00:33:53,880 --> 00:33:59,240
So some of that process, let's say we have an experiment that we want to do, but one part of

323
00:33:59,240 --> 00:34:06,120
that process of doing the analysis is so slow with our laptop that we would want to do it

324
00:34:07,480 --> 00:34:14,600
faster and for that we need to use some shared resource. But the shared resource, because of

325
00:34:14,600 --> 00:34:22,200
the nature that it's shared, we need to usually ask the correct things from it, or we need to

326
00:34:22,200 --> 00:34:31,480
reserve our correct portion of it. So if we don't reserve the correct portion of this resource,

327
00:34:31,480 --> 00:34:39,800
we might reserve less resource than what our laptop has, or we might reserve resources that

328
00:34:39,800 --> 00:34:43,280
that don't solve the correct problem

329
00:34:43,280 --> 00:34:45,520
that we are currently doing.

330
00:34:45,520 --> 00:34:50,160
So for example, we might reserve a GPU

331
00:34:50,160 --> 00:34:54,440
and think that, well, GPUs usually make stuff faster, right?

332
00:34:54,440 --> 00:34:56,360
Like that's the narrative.

333
00:34:56,360 --> 00:34:58,760
So let's just reserve a GPU

334
00:34:58,760 --> 00:35:00,560
and let's just hope that it runs faster,

335
00:35:00,560 --> 00:35:02,760
but that doesn't necessarily work like that.

336
00:35:02,760 --> 00:35:07,000
If the program you're using doesn't use GPUs,

337
00:35:07,000 --> 00:35:08,880
it doesn't necessarily work.

338
00:35:08,880 --> 00:35:16,480
So when we are switching from our laptop to the shared resources,

339
00:35:16,480 --> 00:35:20,080
we usually switch to a different location.

340
00:35:20,080 --> 00:35:27,360
So in a different location might have different things

341
00:35:27,360 --> 00:35:30,360
that make the computing faster.

342
00:35:30,360 --> 00:35:35,040
So we need to basically take advantage

343
00:35:35,040 --> 00:35:37,360
of the specialized hardware.

344
00:35:37,360 --> 00:35:42,120
So for example, our laptops might have maybe eight,

345
00:35:42,120 --> 00:35:47,120
maybe 16 CPUs, and the nodes,

346
00:35:47,160 --> 00:35:50,920
the computational servers in an HPC cluster,

347
00:35:50,920 --> 00:35:55,760
they might have up to 256 processors,

348
00:35:55,760 --> 00:35:57,920
but those processors might be slower

349
00:35:57,920 --> 00:36:00,440
than the laptop processors on average,

350
00:36:00,440 --> 00:36:02,320
but because there's so many of them,

351
00:36:02,320 --> 00:36:05,960
if your program can utilize many processors,

352
00:36:05,960 --> 00:36:19,080
program can still be faster. There's different kinds of resources in the HPC cluster that are

353
00:36:19,880 --> 00:36:30,200
specialized for certain kinds of things. When we are asking, okay, I want to run my code

354
00:36:30,200 --> 00:36:36,360
better or faster, we need to know what our program does and then ask for those resources that

355
00:36:37,800 --> 00:36:45,320
the computational cluster can provide that makes it faster. And here are a few of the

356
00:36:46,280 --> 00:36:53,640
really great questions that you can ask yourself. So, for example, do you need more CPUs? If you

357
00:36:53,640 --> 00:37:01,480
can parallelize your processing. We'll talk about this on day three. You might benefit from adding

358
00:37:01,480 --> 00:37:09,880
CPUs. Sometimes you don't. You might want one big computer or multiple small computers.

359
00:37:09,880 --> 00:37:16,840
That might also benefit you. If your code uses GPUs, like for example, deep learning stuff

360
00:37:16,840 --> 00:37:22,760
nowadays, your only option might be to run it on a computing cluster because the model might

361
00:37:22,760 --> 00:37:27,960
be so big that you cannot run it on a normal laptop or computer. Your laptop might not even

362
00:37:27,960 --> 00:37:35,960
have a GPU. Sometimes you have a lot of data that you need to process, so you need to get the data.

363
00:37:36,840 --> 00:37:43,960
You need to make certain that the data is in the correct place so that the speed is good.

364
00:37:43,960 --> 00:37:51,960
So when you're switching from your laptop to using these shared resources,

365
00:37:51,960 --> 00:37:57,960
do keep in mind that you're basically switching places.

366
00:37:57,960 --> 00:38:00,960
You're switching to a completely different environment.

367
00:38:00,960 --> 00:38:06,960
And in that environment, there are different kinds of considerations.

368
00:38:06,960 --> 00:38:12,960
It's optimized for different kinds of use cases.

369
00:38:12,960 --> 00:38:19,960
And if you don't know necessarily what use case you want to do

370
00:38:19,960 --> 00:38:22,960
or you don't know what your program is doing

371
00:38:22,960 --> 00:38:25,960
it's usually a good idea to ask help from more experienced users

372
00:38:25,960 --> 00:38:29,960
or the system administrators and so forth

373
00:38:29,960 --> 00:38:36,960
so that they can figure out which program your program benefits most from

374
00:38:36,960 --> 00:38:44,440
Yeah, one aspect that you see here at the bottom that sometimes maybe you don't even

375
00:38:44,440 --> 00:38:48,760
need like your laptop would be totally fine with the resources that you have, but it's

376
00:38:48,760 --> 00:38:52,880
the data that you're working with that cannot be taken away, that cannot be taken out from

377
00:38:52,880 --> 00:38:56,880
your share folder in the university.

378
00:38:56,880 --> 00:39:01,240
And so then these remote resources, these large computational resources can also be

379
00:39:01,240 --> 00:39:06,480
useful that the computations and the data stay in the remote, but of course you can still

380
00:39:06,480 --> 00:39:11,560
use your laptop with fake data or just for development.

381
00:39:11,560 --> 00:39:13,360
But basically, yeah, this session

382
00:39:13,360 --> 00:39:16,960
is kind of just to set the basics for everyone here.

383
00:39:16,960 --> 00:39:20,640
There's some, how do I do scientific computing?

384
00:39:20,640 --> 00:39:23,920
It's most likely you already know where to start,

385
00:39:23,920 --> 00:39:27,680
whether you're a Python, R, or whatever programming languages.

386
00:39:27,680 --> 00:39:31,040
There are good practices for each language and tools

387
00:39:31,040 --> 00:39:32,400
available.

388
00:39:32,400 --> 00:39:35,520
And you can understand already that what works on your laptop

389
00:39:35,520 --> 00:39:38,580
doesn't necessarily, it's not necessarily going to work

390
00:39:38,580 --> 00:39:41,260
on the remote cluster.

391
00:39:41,260 --> 00:39:43,740
But what we will see in the rest of the day

392
00:39:43,740 --> 00:39:47,460
and also in the next days is basically strategies to move,

393
00:39:47,460 --> 00:39:49,940
for example, the same so-called Python environment

394
00:39:49,940 --> 00:39:52,940
from your laptop to a remote location,

395
00:39:52,940 --> 00:39:55,700
or to make sure that you have the software

396
00:39:55,700 --> 00:39:59,260
that you need to run in the remote location.

397
00:39:59,260 --> 00:40:02,180
Here, there's a picture of what [name] was saying earlier

398
00:40:02,180 --> 00:40:04,200
that once you leave your laptop,

399
00:40:04,200 --> 00:40:05,840
if you think that this is the internet,

400
00:40:05,840 --> 00:40:10,120
you can basically request remote servers,

401
00:40:10,120 --> 00:40:12,700
remote so-called nodes.

402
00:40:12,700 --> 00:40:15,040
So there are other pieces of hardware,

403
00:40:15,040 --> 00:40:18,020
there are other machines that can allow you

404
00:40:18,020 --> 00:40:21,500
to do your computations, not on your laptop anymore,

405
00:40:21,500 --> 00:40:24,800
but on the remote location.

406
00:40:24,800 --> 00:40:26,760
This picture is generic enough in a sense

407
00:40:26,760 --> 00:40:30,060
that this is not specific to Alto.

408
00:40:30,060 --> 00:40:32,320
There are some of these open services,

409
00:40:32,320 --> 00:40:36,000
There's a list here in the bottom, like MyBinder or Google

410
00:40:36,000 --> 00:40:39,040
Colab, where you can run this type of computations

411
00:40:39,040 --> 00:40:43,400
via a so-called notebook interface with a web browser.

412
00:40:43,400 --> 00:40:44,960
What we will explore more tomorrow

413
00:40:44,960 --> 00:40:49,880
is this type of HPC clusters that universities usually

414
00:40:49,880 --> 00:40:52,880
give access to, and also the national providers,

415
00:40:52,880 --> 00:40:55,240
like CSC in Finland.

416
00:40:55,240 --> 00:40:58,960
And often what you will notice, and what we will remind also

417
00:40:58,960 --> 00:41:01,800
today, is that sometimes to work with this system,

418
00:41:01,800 --> 00:41:05,680
you need to, it's not as easy as, you know,

419
00:41:05,680 --> 00:41:07,000
opening a web browser

420
00:41:07,000 --> 00:41:10,160
and using the so-called notebook interface.

421
00:41:10,160 --> 00:41:12,760
You might need to be familiar with the command line interface

422
00:41:12,760 --> 00:41:15,760
and access, for example, the login node,

423
00:41:15,760 --> 00:41:18,120
and then later request, you know,

424
00:41:18,120 --> 00:41:21,780
one of the hundreds of CPUs or GPUs and so on.

425
00:41:22,700 --> 00:41:24,680
But don't worry about this.

426
00:41:24,680 --> 00:41:29,040
We will cover this during the connection session

427
00:41:29,040 --> 00:41:30,880
in later today.

428
00:41:30,880 --> 00:41:39,280
We are perfectly on time with our schedule now because it's 12.25 and I could keep screen sharing

429
00:41:39,840 --> 00:41:48,400
and give a motivational talk with [name]. [name], are you here?

430
00:41:49,280 --> 00:41:50,080
I'll jump out.

431
00:41:50,960 --> 00:41:54,880
Thank you, [name]. You will hear [name] a lot in the next.

432
00:41:57,520 --> 00:42:00,720
[name], do you want to say something briefly about yourself?

433
00:42:00,880 --> 00:42:09,580
Yeah. Hi, everyone. I work as an application specialist at CSC, IT Center for Science.

434
00:42:09,580 --> 00:42:16,900
You will hear about that also, I think, last day of this workshop more. I work there in

435
00:42:16,900 --> 00:42:23,740
user support, outreach, and training. And I'm also community manager of the Code Refinery

436
00:42:23,740 --> 00:42:30,580
Project, which we will be talking about now a little bit. And I also do still my PhD on

437
00:42:30,580 --> 00:42:34,980
very low part-time at Aalto University about satellite remote sensing stuff.

438
00:42:36,580 --> 00:42:42,580
Excellent. So what we wanted to cover in the next 25 minutes, and then we can have a break

439
00:42:42,580 --> 00:42:48,340
for 10 minutes to stretch our legs, is to mention the importance of reproducibility

440
00:42:48,340 --> 00:42:53,940
and open science. I don't know how many of you are familiar with the concept of reproducibility,

441
00:42:53,940 --> 00:42:59,220
but most likely I know that many of the people watching are starting their summer internship

442
00:42:59,220 --> 00:43:06,900
or starting their doctoral research career, you want, you know, to be reproducible. You want to

443
00:43:06,900 --> 00:43:11,300
start from the first day to make sure that what you've been doing today, what you've been working

444
00:43:11,300 --> 00:43:17,940
on today, you can replicate it in one month. So the materials that are linked now from this,

445
00:43:17,940 --> 00:43:23,300
from the schedule of the day, are from the so-called Code Refinery workshop. And as [name]

446
00:43:23,300 --> 00:43:28,580
has mentioned, Code Refinery is a larger workshop that covers various aspects of the so-called

447
00:43:28,580 --> 00:43:31,580
computational reproducibility.

448
00:43:31,580 --> 00:43:34,860
So in this short 25 minutes, the workshop

449
00:43:34,860 --> 00:43:38,780
is actually lasting for six days, three hours every day,

450
00:43:38,780 --> 00:43:40,340
three hours and a half.

451
00:43:40,340 --> 00:43:42,860
Here in this short slot, we just want

452
00:43:42,860 --> 00:43:47,780
to inspire you, give you a bit of a motivation of why

453
00:43:47,780 --> 00:43:50,740
reproducibility is important, and then

454
00:43:50,740 --> 00:43:53,380
how does it fit into the picture of the Code Refinery

455
00:43:53,380 --> 00:43:54,320
Workshop.

456
00:43:54,320 --> 00:43:56,740
For those who will be interested in the next Code Refinery

457
00:43:56,740 --> 00:44:03,460
workshop it is now planned in the first half of September so if you register for this course and

458
00:44:03,460 --> 00:44:07,780
you mark that you want to stay up to date you will receive further emails when the registrations are

459
00:44:07,780 --> 00:44:11,940
open. But in general when it comes to reproducibility the situation is like this so

460
00:44:11,940 --> 00:44:17,700
this is a professor with some research assistant or actually this is a doctoral doctor researcher

461
00:44:17,700 --> 00:44:23,220
and the professors say don't worry you don't have to start from you have to start your code

462
00:44:23,220 --> 00:44:28,580
from scratch which is you know it's great you got some code from the previous postdoc or whoever

463
00:44:29,300 --> 00:44:33,620
you can reuse the software that the previous person on the project wrote several years ago

464
00:44:34,340 --> 00:44:41,060
are there instructions for how to use it i doubt it is the code commented not likely where are

465
00:44:41,060 --> 00:44:47,860
the files who knows this is going to be painful isn't it it's just a scratch so i don't know

466
00:44:47,860 --> 00:44:54,020
about you, [name], but I've seen this situation. I don't know, I still see it on a, maybe not daily

467
00:44:54,020 --> 00:45:00,180
basis, but weekly basis, which is, I mean, yeah, it's also understandable. People join the research

468
00:45:00,180 --> 00:45:06,580
project, whether they are for an internship, whether they are for those years of the doctoral

469
00:45:06,580 --> 00:45:11,860
research, and then they move on, they change university. And then if there's not a culture

470
00:45:11,860 --> 00:45:18,660
of preserving, archiving and making things reproducible and documented, this process will

471
00:45:18,660 --> 00:45:25,220
keep on staying. So we don't need now to go through the whole page but in general what you can think

472
00:45:25,860 --> 00:45:30,340
when you read a scientific article that the article is actually just the tip of the whole

473
00:45:30,340 --> 00:45:36,500
process of getting the data, collecting the data, analyzing the data, producing the statistical

474
00:45:36,500 --> 00:45:43,180
article results, summaries, tables, outputs, whatever. And so the article, sometimes with

475
00:45:43,180 --> 00:45:47,740
the article itself, it's impossible to replicate what other people are doing. So you need the

476
00:45:47,740 --> 00:45:52,380
documentation on the process, on the software, you need maybe actually access to the actual

477
00:45:52,380 --> 00:45:57,820
code or to the actual data. And sometimes even if you have the same code and the same

478
00:45:57,820 --> 00:46:02,980
data, you still get different numbers. And this is because maybe the environment, the

479
00:46:02,980 --> 00:46:06,020
libraries, the operating system, and other things

480
00:46:06,020 --> 00:46:07,700
have changed in the meantime.

481
00:46:07,700 --> 00:46:10,620
So all these parameters, all the elements you see here

482
00:46:10,620 --> 00:46:15,380
would actually be needed for achieving the reproducibility.

483
00:46:15,380 --> 00:46:18,460
So in these materials that you see linked there,

484
00:46:18,460 --> 00:46:20,660
you can browse them like this.

485
00:46:20,660 --> 00:46:25,660
We cover various aspects of the so-called, you know,

486
00:46:25,660 --> 00:46:27,700
pyramid that you just show,

487
00:46:27,700 --> 00:46:30,180
but it's nice to put it all in the context

488
00:46:30,180 --> 00:46:31,820
of the Code Refinery workshop.

489
00:46:31,820 --> 00:46:38,260
So, [name], maybe it would be better than me to give an overview of this picture.

490
00:46:38,260 --> 00:46:41,980
One, two, three, four, five, six steps.

491
00:46:41,980 --> 00:46:44,660
Do you want to briefly?

492
00:46:44,660 --> 00:46:50,340
Yes, I can do that. And here, maybe also just in addition to what [name] already mentioned.

493
00:46:50,340 --> 00:46:55,860
So we have these workshops twice a year, but we also have these lesson materials that [name] is showing right now.

494
00:46:55,860 --> 00:47:00,540
And there is a link to this in the collaborative notes as well.

495
00:47:00,540 --> 00:47:03,460
So you can also go through the materials yourself,

496
00:47:03,460 --> 00:47:05,740
see what interests you, and maybe learn

497
00:47:05,740 --> 00:47:08,460
something new related to this.

498
00:47:08,460 --> 00:47:12,420
So we have really liked this little figure here

499
00:47:12,420 --> 00:47:16,580
by Heidi Seibold, who made it about the six helpful steps

500
00:47:16,580 --> 00:47:18,820
for reproducible research.

501
00:47:18,820 --> 00:47:21,660
So it all starts already from the very beginning

502
00:47:21,660 --> 00:47:25,100
when you start your research journey.

503
00:47:25,100 --> 00:47:27,980
And you start having files.

504
00:47:27,980 --> 00:47:30,620
you start creating folders.

505
00:47:30,620 --> 00:47:35,020
And there, it already is very useful to take a step back

506
00:47:35,020 --> 00:47:38,900
and think about your naming and how you order things.

507
00:47:38,900 --> 00:47:43,140
And there is multiple guides out there

508
00:47:43,140 --> 00:47:48,060
who can give you a structure that you can follow

509
00:47:48,060 --> 00:47:49,860
that's always very useful to do.

510
00:47:49,860 --> 00:47:54,460
And that's something that this reproducible research lesson

511
00:47:54,460 --> 00:47:56,380
that we're showing here is also about.

512
00:47:56,380 --> 00:48:01,180
so we talk a little bit about different naming conventions

513
00:48:01,180 --> 00:48:02,760
that you can follow,

514
00:48:02,760 --> 00:48:06,760
different structures that you can follow, and so on.

515
00:48:06,760 --> 00:48:10,260
So in our workshop, that's day four, like it's noted here,

516
00:48:10,260 --> 00:48:13,260
but it's the first day of where it goes actually deep

517
00:48:13,260 --> 00:48:16,100
into the different tools and techniques

518
00:48:16,100 --> 00:48:17,960
that you can use for your research.

519
00:48:19,900 --> 00:48:23,120
Yeah, then this is also already step two,

520
00:48:23,120 --> 00:48:26,280
use good names for them, also for functions.

521
00:48:26,280 --> 00:48:33,400
you write your own code, you can save a lot of documentation and commenting things if you just

522
00:48:33,400 --> 00:48:41,560
have good names for your things. And that is also mentioned in our documentation lesson,

523
00:48:41,560 --> 00:48:49,160
how to document your research software, and in the modular code development lessons that we have.

524
00:48:50,440 --> 00:48:56,120
Then, I mentioned already documentation is a very important step because you might be working

525
00:48:56,120 --> 00:49:02,520
on different projects, so if you have been doing something and you had a really good reason for

526
00:49:02,520 --> 00:49:06,840
setting something up in a certain way, you might not remember that when you get back to it like

527
00:49:06,840 --> 00:49:13,240
two days later, a week later, a year later. And then also when others take a look at your codes

528
00:49:13,240 --> 00:49:20,520
or your software as a whole, it helps you to kind of keep your time free because not everyone has

529
00:49:20,520 --> 00:49:25,560
to come and run to you and ask you about like, oh how do I actually use this or why is it done

530
00:49:25,560 --> 00:49:32,680
that way. That's stupid. So you can do that by documenting your codes from the beginning.

531
00:49:33,320 --> 00:49:36,520
And there's different levels of doing that. And that's what we also talk about in this

532
00:49:36,520 --> 00:49:42,680
documentation lesson. And then the first week of the Code Refinery Workshop is all about version

533
00:49:42,680 --> 00:49:50,680
control. Why you would want to use it, what it is, what it actually is, how to use it for yourself,

534
00:49:50,680 --> 00:49:59,080
how to use it when you are collaborating with others and to understand a bit on what's behind

535
00:49:59,080 --> 00:50:03,640
different commands that you might have already used, like commands like git clone, for example,

536
00:50:05,000 --> 00:50:10,920
git push, git commit, these things. Hopefully you have heard about this before, but if not,

537
00:50:10,920 --> 00:50:17,080
then the first week of the Code Refinery Workshop introduces this on a very, how do you say,

538
00:50:17,080 --> 00:50:31,080
shallow learning curve, so you start with what you might already know and then you go deeper and deeper step by step into that you can in the end work together with others using version control.

539
00:50:31,080 --> 00:50:39,360
Then, step five here, stabilizing the computing environment and the software, that basically

540
00:50:39,360 --> 00:50:42,440
many of our lessons have in some way.

541
00:50:42,440 --> 00:50:45,280
We talk about Jupyter notebooks for doing that.

542
00:50:45,280 --> 00:50:52,260
That's a nice way of collaborating with others, but also to prototyping for yourself.

543
00:50:52,260 --> 00:50:59,960
In the reproducible research lesson, we talk about this with, what is it called, now I

544
00:50:59,960 --> 00:51:07,400
the word, but containers we talk about. We talk about workflows there, like how you can run

545
00:51:07,400 --> 00:51:13,320
multiple steps of your analysis pipeline, for example, automatically without having to worry

546
00:51:13,320 --> 00:51:19,880
too much about is it run in the right order? Is it run on all my files and so on? And then also

547
00:51:19,880 --> 00:51:26,600
about like, I still don't remember the word, but these computing environments that you can create

548
00:51:26,600 --> 00:51:32,600
with virtual environment, with Conda for example, you might have heard about these things before

549
00:51:32,600 --> 00:51:37,320
and what's behind that, why do you want to use them and how can you use them to make your research

550
00:51:37,320 --> 00:51:44,360
more reproducible. And then also a little bit about publishing your research outputs. So you will

551
00:51:44,360 --> 00:51:49,560
have maybe in the end of your research project you will have code, you will have data, you will have

552
00:51:49,560 --> 00:51:57,080
other documents. And those are, I don't want to say useless, but less useful for others when they

553
00:51:57,080 --> 00:52:03,720
are just lying on your own computer. And there is a few things that you have to think about then,

554
00:52:03,720 --> 00:52:10,920
like what kind of license do I want to add to my code? Do I want others to easily reuse it,

555
00:52:10,920 --> 00:52:17,560
or do I maybe not want others to reuse it? And does my university have guidelines on this?

556
00:52:17,560 --> 00:52:23,960
and these are the things that we are talking in this social coding and open software lesson.

557
00:52:27,800 --> 00:52:34,040
I believe that in my opinion these six steps are extremely useful because truly if I start a new

558
00:52:34,040 --> 00:52:42,120
project I'm really starting with the folders, with the files and as [name] has already mentioned

559
00:52:42,120 --> 00:52:48,200
all of these six steps that you see here from the you know day zero setting up the folder and

560
00:52:48,200 --> 00:52:54,280
gathering the code that you already have already some documentation some readme so-called file

561
00:52:55,560 --> 00:53:00,760
already all these materials are available I can give you a demo or help you kind of browsing

562
00:53:00,760 --> 00:53:06,840
these materials so the materials that are linked from the web page from today is this reproducible

563
00:53:06,840 --> 00:53:12,840
research and so there for example there is the section that is about organizing your project

564
00:53:13,400 --> 00:53:18,520
and here now I will not go through the teaching part but you see this is a kind of a standard

565
00:53:18,520 --> 00:53:24,920
folder structure that you can create for a new project there are you can create this manually

566
00:53:24,920 --> 00:53:30,680
or you can even there are how can I say automated way to create this type of folder structures we

567
00:53:30,680 --> 00:53:35,400
discussed this here they are linked here but the goal actually what is important when it comes to

568
00:53:35,400 --> 00:53:38,680
reproducibility is that often you're not working alone.

569
00:53:38,680 --> 00:53:41,000
You maybe are working with other people,

570
00:53:41,000 --> 00:53:42,200
with other colleagues,

571
00:53:42,200 --> 00:53:45,080
so most likely you want to have a share place,

572
00:53:45,080 --> 00:53:48,120
a share project name with share convention.

573
00:53:48,120 --> 00:53:49,920
So it's very important that you actually talk

574
00:53:49,920 --> 00:53:50,760
with your peers.

575
00:53:50,760 --> 00:53:54,320
If you don't yet already have a standardized way

576
00:53:54,320 --> 00:53:58,120
of storing the data, storing the process data,

577
00:53:58,120 --> 00:53:59,920
the results, the code, and so on,

578
00:53:59,920 --> 00:54:03,840
it's now a good moment to start the discussion.

579
00:54:03,840 --> 00:54:07,840
And for example, use these pages for getting inspirations

580
00:54:07,840 --> 00:54:11,200
and already starting from the very beginning

581
00:54:11,200 --> 00:54:13,560
with reproducibility in mind.

582
00:54:13,560 --> 00:54:15,720
Another aspect that [name] touched

583
00:54:15,720 --> 00:54:19,760
was about the so-called computational steps.

584
00:54:19,760 --> 00:54:23,880
So of course, version control for those who are using Git.

585
00:54:23,880 --> 00:54:27,080
By the way, we have added in our shared notes document

586
00:54:27,080 --> 00:54:30,080
a little question to know if you're already familiar

587
00:54:30,080 --> 00:54:32,400
with Git version control or not.

588
00:54:32,400 --> 00:54:36,400
But in general, we need to also record the computational steps

589
00:54:36,400 --> 00:54:39,120
because it's very rare that you just

590
00:54:39,120 --> 00:54:42,200
have one single script that will just load the data,

591
00:54:42,200 --> 00:54:44,920
do some math, and save the outputs.

592
00:54:44,920 --> 00:54:47,760
Most likely, there's many steps to do.

593
00:54:47,760 --> 00:54:50,400
And again, this type of steps, there's

594
00:54:50,400 --> 00:54:53,520
no other way to document them except having

595
00:54:53,520 --> 00:54:57,360
humans writing what the actual steps are there.

596
00:54:57,360 --> 00:55:00,760
So in this other part of the reproducibility lesson,

597
00:55:00,760 --> 00:55:04,960
you can see some ways of how to record steps.

598
00:55:04,960 --> 00:55:06,800
There's the so-called scripts,

599
00:55:06,800 --> 00:55:09,140
where you could basically write the plot

600
00:55:09,140 --> 00:55:11,220
of all the code that you need to run.

601
00:55:11,220 --> 00:55:14,480
But in general, even have a simple so-called readme file.

602
00:55:14,480 --> 00:55:18,000
So a txt file that is living there close to the code

603
00:55:18,000 --> 00:55:20,360
that will just tell to the future user

604
00:55:20,360 --> 00:55:21,800
in one year or in five years,

605
00:55:21,800 --> 00:55:23,680
first you need to run the function

606
00:55:23,680 --> 00:55:25,880
or the Python script name like this.

607
00:55:25,880 --> 00:55:30,000
And second, you will need to run another one and so on.

608
00:55:30,000 --> 00:55:32,740
Here in this lesson, there are also some advanced things.

609
00:55:32,740 --> 00:55:35,180
This is the beauty of the code refinery materials

610
00:55:35,180 --> 00:55:37,940
that they are written as accessible as possible.

611
00:55:37,940 --> 00:55:39,460
So there's no prerequisite,

612
00:55:39,460 --> 00:55:42,980
but also the more experienced user can learn something new.

613
00:55:42,980 --> 00:55:45,340
So for example, there are workflow tools

614
00:55:45,340 --> 00:55:47,460
and SnakeMake is one of them.

615
00:55:47,460 --> 00:55:49,260
If you know what's Make,

616
00:55:49,260 --> 00:55:52,940
SnakeMake is kind of uses the same principle,

617
00:55:52,940 --> 00:55:55,940
but instead of building code like you would do with Make,

618
00:55:55,940 --> 00:55:58,580
building software, you would actually use it

619
00:55:58,580 --> 00:56:04,380
for basically writing a so-called acyclic pipeline

620
00:56:04,380 --> 00:56:07,380
to basically go from the input data

621
00:56:07,380 --> 00:56:10,940
to the actual derivatives file that you need.

622
00:56:10,940 --> 00:56:14,940
In the same lesson that we're browsing here quickly,

623
00:56:14,940 --> 00:56:18,780
then we go to the level of dependencies.

624
00:56:18,780 --> 00:56:22,940
And this is, again, another XKCD to inspire people.

625
00:56:22,940 --> 00:56:26,260
But this is truly what it is in all

626
00:56:26,260 --> 00:56:27,940
modern digital infrastructure.

627
00:56:27,940 --> 00:56:30,860
This is not just about research.

628
00:56:30,860 --> 00:56:34,460
This is about all the services that you use,

629
00:56:34,460 --> 00:56:36,980
that sometimes, if not always,

630
00:56:36,980 --> 00:56:41,980
they are based on components like this little block there.

631
00:56:41,980 --> 00:56:45,780
There is a project by some random person in Nebraska

632
00:56:45,780 --> 00:56:48,900
that has been thanklessly maintained since 2003.

633
00:56:48,900 --> 00:56:51,500
There are many, many example of this type of process.

634
00:56:51,500 --> 00:56:53,580
There's the Curl, for example,

635
00:56:53,580 --> 00:56:56,860
which is one of the most used protocol

636
00:56:56,860 --> 00:57:03,820
tool to transfer data between systems, and it used to be for many years just a random person

637
00:57:03,820 --> 00:57:08,940
somewhere, I think in Sweden, that was maintaining it. Now it's better maintained.

638
00:57:08,940 --> 00:57:13,500
But in general, this is the thing, that even though you are good at documenting your code

639
00:57:13,500 --> 00:57:20,060
and your data, and so that hopefully in five years or even yourself in one year after peer review

640
00:57:21,020 --> 00:57:25,980
to be able to rerun things, you then realize that in the meantime the Python library that you were

641
00:57:25,980 --> 00:57:31,980
using has changed, that Python 3.something had a problem and now you need to upgrade to the new

642
00:57:31,980 --> 00:57:37,740
Python and nothing works anymore. So sometimes you really need to preserve not just the code

643
00:57:37,740 --> 00:57:42,540
and the documentation and the data, but also all the dependencies, all the libraries that are

644
00:57:42,540 --> 00:57:49,500
attached. Again here, this is just a quick intro, 10 minutes, they were working together, but if

645
00:57:49,500 --> 00:57:55,360
And if you're starting a new project, it's very much important to invest in fixing the

646
00:57:55,360 --> 00:58:06,360
versions of the tools that you want to use and basically agreeing on what type of libraries

647
00:58:06,360 --> 00:58:12,260
you will use and defining these type of dependencies and so on.

648
00:58:12,260 --> 00:58:20,280
So in this lesson, for those who are familiar with the so-called CONDA, it's one way of

649
00:58:20,280 --> 00:58:26,760
taking care of Python environments where you can define all the type of dependencies that

650
00:58:26,760 --> 00:58:28,320
your code has.

651
00:58:28,320 --> 00:58:33,040
So if you are starting today a new project, it's good to have a discussion again with

652
00:58:33,040 --> 00:58:38,840
your colleagues and agree, for example, on what type of libraries do you want to use

653
00:58:38,840 --> 00:58:41,560
and what type of dependencies your project should have.

654
00:58:44,120 --> 00:58:49,440
So this is at the level of the dependencies of the software.

655
00:58:49,440 --> 00:58:51,920
Sometimes, in some cases, you really

656
00:58:51,920 --> 00:58:55,520
need to go to the highest level that you

657
00:58:55,520 --> 00:58:59,000
need to have also that the environment

658
00:58:59,000 --> 00:59:02,560
that the whole operating system is reproducible.

659
00:59:02,560 --> 00:59:05,320
We recently moved from an old operating system

660
00:59:05,320 --> 00:59:08,540
to a new operating system with our Triton cluster.

661
00:59:08,540 --> 00:59:11,020
And sometimes, most of the software

662
00:59:11,020 --> 00:59:13,100
were working in the new operating system,

663
00:59:13,100 --> 00:59:14,940
but there were some specific cases

664
00:59:14,940 --> 00:59:19,020
that were dependent on the old operating system.

665
00:59:19,020 --> 00:59:23,540
So one way to get over this type of dependency

666
00:59:23,540 --> 00:59:28,300
that is related to the actual system is to adopt containers.

667
00:59:28,300 --> 00:59:31,620
So with containers, they're basically,

668
00:59:31,620 --> 00:59:35,180
it's like not only having the libraries that you need

669
00:59:35,180 --> 00:59:36,900
and the code that you need, but it's really

670
00:59:36,900 --> 00:59:39,700
having the full image of the operating system

671
00:59:39,700 --> 00:59:41,860
where everything runs on top.

672
00:59:41,860 --> 00:59:43,540
If you remember at the beginning,

673
00:59:43,540 --> 00:59:46,140
I was talking about the operating system

674
00:59:46,140 --> 00:59:49,900
and all these other layers up to the user.

675
00:59:49,900 --> 00:59:52,060
So with the container, it's really this joke

676
00:59:52,060 --> 00:59:54,060
that it works on my machine.

677
00:59:54,060 --> 00:59:56,980
Well, then we'll ship your machine.

678
00:59:56,980 --> 00:59:59,540
And this is our Docker, which is one of these container

679
00:59:59,540 --> 01:00:01,100
technologies.

680
01:00:01,100 --> 01:00:03,260
Again here, we don't have the time

681
01:00:03,260 --> 01:00:05,180
to cover to the containers.

682
01:00:05,180 --> 01:00:08,620
But you know that if you have this type of problem,

683
01:00:08,620 --> 01:00:10,520
or if you ever had this type of need

684
01:00:10,520 --> 01:00:16,180
that you would like to move the full pipeline from one system,

685
01:00:16,180 --> 01:00:18,160
from one cluster to another, then

686
01:00:18,160 --> 01:00:21,780
it's good to invest in learning containers.

687
01:00:21,780 --> 01:00:24,900
Here, these are simple learning materials

688
01:00:24,900 --> 01:00:27,340
that you can read by yourself and test things by yourself.

689
01:00:27,340 --> 01:00:30,620
But in general, we also have more advanced courses

690
01:00:30,620 --> 01:00:33,140
for those cases.

691
01:00:33,140 --> 01:00:38,740
And this kind of covers everything from this reproducibility lesson

692
01:00:38,740 --> 01:00:42,620
and this reproducibility summary. We still have five minutes.

693
01:00:42,620 --> 01:00:46,540
I don't know if [name] is still here with me.

694
01:00:47,740 --> 01:00:55,020
But in general, the Code Refinery workshop doesn't only cover,

695
01:00:55,020 --> 01:00:58,980
even though the reproducibility is at the code of the Code Refinery workshop.

696
01:00:58,980 --> 01:01:01,940
Code Refinery is like a large also informal network.

697
01:01:01,940 --> 01:01:14,100
Let me type the address, a large informal network of basically people who are passionate

698
01:01:14,100 --> 01:01:20,420
on data science, software, open science, good practices, they join together and they discuss

699
01:01:20,420 --> 01:01:21,420
together.

700
01:01:21,420 --> 01:01:24,740
I don't know if [name], if we still have five minutes, do you want to mention the type

701
01:01:24,740 --> 01:01:28,780
of engagement that people could have with the Code Refinery, especially we are looking

702
01:01:28,780 --> 01:01:29,780
for ambassadors?

703
01:01:29,780 --> 01:01:36,780
Do you want to tell something? I can also open some of these other links if you want me to.

704
01:01:36,780 --> 01:01:43,780
So yes, maybe the first entry point into CodeRefiner is to visit one of our workshops.

705
01:01:43,780 --> 01:01:51,780
So our next workshop is coming up, like [name] already mentioned there, and it's written there September 10th to 12th and 17th to 19th.

706
01:01:51,780 --> 01:02:00,780
It's always half a day, and we'll talk about all the topics that I mentioned in this reproducible research steps.

707
01:02:00,780 --> 01:02:10,780
And then, if you get excited about this, or if you maybe are already excited about these topics that we have been talking about here now,

708
01:02:10,780 --> 01:02:17,880
So then we're already always looking for contributors to the lesson material, for example, or also

709
01:02:17,880 --> 01:02:23,760
just people in different places that will advertise the workshop to their network.

710
01:02:23,760 --> 01:02:29,160
Because that's one of the hardest things that we have to do is to actually get this message

711
01:02:29,160 --> 01:02:33,200
that these workshops exist to the people that have use of it.

712
01:02:33,200 --> 01:02:37,280
We very often get the feedback, oh, I wish I would have known this in the beginning of

713
01:02:37,280 --> 01:02:39,720
my PhD or something like this.

714
01:02:39,720 --> 01:02:44,920
You can help with that. If this is something that interests you, the best way is to sign up for our

715
01:02:44,920 --> 01:02:50,520
newsletter, then you will get a message when actually the registration opens for our workshop,

716
01:02:50,520 --> 01:02:56,280
and then you can send that forward to your network. If you like doing that kind of stuff,

717
01:02:56,280 --> 01:03:03,400
like spreading the word about Code Refinery, maybe you go to conferences and you have talks about,

718
01:03:03,400 --> 01:03:08,440
I don't know, your own topic. If you just want to add one little slide about Code Refinery,

719
01:03:08,440 --> 01:03:16,840
just making your network aware that it exists, then becoming an ambassador is a nice way of

720
01:03:16,840 --> 01:03:25,160
supporting us and we also want to support you doing that. So if you go in the top about join

721
01:03:27,160 --> 01:03:28,520
and for individuals.

722
01:03:31,160 --> 01:03:37,160
So there are all the different ways that you can engage with the community are mentioned here and

723
01:03:37,160 --> 01:03:42,600
and if you scroll a little bit down there is this Code Refinery Ambassador.

724
01:03:42,600 --> 01:03:48,520
So if you want to become one then let us know and that can work either via

725
01:03:48,520 --> 01:03:52,440
our contact email address which you can also find on that page

726
01:03:52,440 --> 01:03:55,480
or by joining our Zulip chat or you can also

727
01:03:55,480 --> 01:04:00,920
let us know via the collaborative document of this course for example.

728
01:04:00,920 --> 01:04:04,600
We will read that and then we will reach out to you and we will have

729
01:04:04,600 --> 01:04:10,280
meetups of the ambassadors and try to support you in any way we can. We also have stickers

730
01:04:10,280 --> 01:04:18,840
that you can distribute that always gets people interested in things. And yeah, we're very happy to

731
01:04:18,840 --> 01:04:25,800
connect with you. But yeah, also just joining as a learner. Joining in Aalto, for example,

732
01:04:25,800 --> 01:04:30,920
we will have an in-person room where you can follow the workshop all together with [name]

733
01:04:30,920 --> 01:04:36,920
and you will have [name] there answering all your questions that you might have regarding the material.

734
01:04:36,920 --> 01:04:41,920
So it's a really nice and community experience to join the workshop in Otoniemi.

735
01:04:41,920 --> 01:04:50,920
For those who are, well hopefully some of you who are listening actually were in some of the recent workshops, for example the March workshop,

736
01:04:50,920 --> 01:04:56,920
but we are all very open with our lessons and also documentation from the workshops,

737
01:04:56,920 --> 01:05:00,880
So let's say that you don't want to wait for September the 10th

738
01:05:00,880 --> 01:05:02,520
and you already want to start learning,

739
01:05:02,520 --> 01:05:04,720
you can click on the March workshop.

740
01:05:04,720 --> 01:05:07,780
And there you see the schedule.

741
01:05:07,780 --> 01:05:10,000
And for each part of the schedule,

742
01:05:10,000 --> 01:05:13,080
let's say day one, Introduction to Version Control,

743
01:05:13,080 --> 01:05:16,000
there are links to the lesson material.

744
01:05:16,000 --> 01:05:18,400
There are links to the videos, to the recordings.

745
01:05:18,400 --> 01:05:22,060
So truly, if one wanted, you could actually have,

746
01:05:22,060 --> 01:05:25,640
you could actually do the full workshop by yourself

747
01:05:25,640 --> 01:05:28,380
with just using the videos, the recordings,

748
01:05:28,380 --> 01:05:31,980
the archive materials, the archive questions,

749
01:05:31,980 --> 01:05:35,180
and all the lesson materials that are there.

750
01:05:35,180 --> 01:05:37,500
But of course, yeah, it's more fun to do it together,

751
01:05:37,500 --> 01:05:39,100
to do it with a colleague.

752
01:05:39,100 --> 01:05:40,640
Here at Alto, we're trying to promote

753
01:05:40,640 --> 01:05:43,980
this type of hybrid room so that people can come here

754
01:05:43,980 --> 01:05:46,220
and have some cookies, fruits,

755
01:05:46,220 --> 01:05:48,220
and at the same time, watch the stream.

756
01:05:48,220 --> 01:05:49,660
The stream still happens on Twitch TV,

757
01:05:49,660 --> 01:05:52,100
so being in person is not necessary,

758
01:05:52,100 --> 01:05:54,540
especially because Code Refinery is a Nordic network,

759
01:05:54,540 --> 01:05:57,900
So we have people streaming from Norway, from Denmark,

760
01:05:57,900 --> 01:06:00,020
from Sweden and so on.

761
01:06:00,020 --> 01:06:02,740
But then the social part is also important,

762
01:06:02,740 --> 01:06:04,700
especially during the exercise is what that can be

763
01:06:04,700 --> 01:06:08,860
some interesting questions or things like that.

764
01:06:08,860 --> 01:06:12,300
But anyway, hopefully this was motivational enough.

765
01:06:12,300 --> 01:06:14,420
Thank you so much [name] for joining us

766
01:06:14,420 --> 01:06:17,300
for this overview, very quick overview

767
01:06:17,300 --> 01:06:18,860
of the whole Code Refinery.

768
01:06:19,700 --> 01:06:20,820
Thanks for having me.

769
01:06:20,820 --> 01:06:24,460
Yes, and we are perfectly on time, it's 12.50.

770
01:06:24,460 --> 01:06:30,460
So let's quickly check if there's anything in the notes

771
01:06:30,460 --> 01:06:33,940
that should be mentioned.

772
01:06:33,940 --> 01:06:37,460
But eventually, we can get to the notes later.

773
01:06:37,460 --> 01:06:42,340
Maybe let's have the break now until 1 o'clock sharp.

774
01:06:42,340 --> 01:06:45,820
And please stretch your legs, have a glass of water,

775
01:06:45,820 --> 01:06:47,060
and see you.

776
01:06:47,060 --> 01:06:51,760
The stream will start again at 1 PM Finnish time

777
01:06:51,760 --> 01:06:54,760
and at the hour in other time zones.

778
01:06:55,800 --> 01:06:56,640
Thank you.

779
01:07:21,760 --> 01:07:23,820
you

780
01:07:51,760 --> 01:07:53,820
you

781
01:08:21,760 --> 01:08:23,820
you

782
01:08:51,760 --> 01:08:53,820
you

783
01:09:21,760 --> 01:09:23,820
you

784
01:09:51,760 --> 01:09:53,820
you

785
01:10:21,760 --> 01:10:23,820
you

786
01:10:51,760 --> 01:10:53,820
you

787
01:11:21,760 --> 01:11:23,820
you

788
01:11:51,760 --> 01:11:53,820
you

789
01:12:21,760 --> 01:12:23,820
you

790
01:12:51,760 --> 01:12:53,820
you

791
01:13:21,760 --> 01:13:23,820
you

792
01:13:51,760 --> 01:13:53,820
you

793
01:14:21,760 --> 01:14:23,820
you

794
01:14:51,760 --> 01:14:53,820
you

795
01:15:21,760 --> 01:15:23,820
you

796
01:15:51,760 --> 01:15:53,820
you

797
01:16:21,760 --> 01:16:37,360
Hello, welcome back. Hopefully you had a good little break. So next up we have something

798
01:16:37,360 --> 01:16:43,880
which we call the humans of scientific computing. So it's interviews where we basically talk

799
01:16:43,880 --> 01:16:51,000
about ourselves. And our special guest this time here is [name], who was in the

800
01:16:51,000 --> 01:16:57,240
previous talk, actually. Hi. So, [name], can you tell us a little bit about

801
01:16:57,880 --> 01:17:03,240
yourself again and maybe go more into what's your background and how did you start your career?

802
01:17:04,680 --> 01:17:15,240
Okay, yes. So, I did my bachelor in Germany in Geoecology or Natural Sciences and then went on to

803
01:17:15,240 --> 01:17:25,280
to start my Master's in Geoinformatics from where I went on an exchange year to Finland

804
01:17:25,280 --> 01:17:34,560
to Aalto University during my Master's in Geoinformatics and that led me to being in

805
01:17:34,560 --> 01:17:40,860
contact with the Finnish Geospatial Research Institute where I asked for a possibility

806
01:17:40,860 --> 01:17:45,740
to do my master thesis here because I really liked Finland and I really wanted to stay here.

807
01:17:47,420 --> 01:17:55,100
This was almost nine years ago now, I'm still in Finland, so it all worked out. I got to do

808
01:17:55,100 --> 01:18:01,020
my master thesis, they actually paid me for it and even offered me a job after that at the

809
01:18:01,020 --> 01:18:08,060
Research Institute where I was working with satellite remote sensing mainly and at some point

810
01:18:08,060 --> 01:18:15,100
they said okay we would actually like everyone to have a PhD because that just makes life at

811
01:18:15,100 --> 01:18:19,980
the Research Institute much easier. Don't you want to start one? And I hadn't thought about this

812
01:18:19,980 --> 01:18:26,780
before so much but I was like hey it's the same as my normal work so why not like package it and

813
01:18:26,780 --> 01:18:32,220
do a PhD. As you maybe mentioned before I'm still working on that even though this is now also

814
01:18:32,220 --> 01:18:41,100
already almost seven years ago. That's mainly due to it being very short only full-time,

815
01:18:41,100 --> 01:18:47,020
but mainly being part-time. So I did other work during the same time. For a short while,

816
01:18:47,020 --> 01:18:52,300
I did it full-time because I got a grant from Aalto University to focus on it, but there was

817
01:18:52,300 --> 01:18:59,900
a few projects that didn't go as planned. Maybe you know about these things. And yeah, nowadays,

818
01:18:59,900 --> 01:19:08,620
like two years ago I got an email that CSE was looking for a geoinformatics specialist and I was

819
01:19:08,620 --> 01:19:18,060
reading like through the job ad and was like yes yes yes yes oh this sounds interesting but I was

820
01:19:18,060 --> 01:19:24,940
a little bit like afraid also of it because CSE like the big scientific computing center and

821
01:19:24,940 --> 01:19:31,260
my background is not in like really computing or something. I learned most of it actually during

822
01:19:31,260 --> 01:19:39,660
the PhD times like I learned about how to use Linux, I learned programming in Python and so on

823
01:19:40,940 --> 01:19:47,820
during that time and I learned also how to use or well yeah how to use supercomputer partly

824
01:19:47,820 --> 01:19:59,500
through this course, but also through CSC courses. I knew how to apply this for my research. I knew

825
01:19:59,500 --> 01:20:05,740
how to run something in parallel on the supercomputer, but I had never looked behind that.

826
01:20:05,740 --> 01:20:14,300
So I was a little bit like, is this really something for me? But then I talked to a lot

827
01:20:14,300 --> 01:20:19,260
of people in especially the code refinery community and they very much encouraged me to do that

828
01:20:19,900 --> 01:20:25,980
still and yeah here I am nowadays. I work two years now as a geoinformatics specialist

829
01:20:25,980 --> 01:20:34,140
helping geoinformatics researchers with bringing their computations

830
01:20:34,140 --> 01:20:43,260
to the supercomputer and doing training and so on and nowadays a bit more general so it's not

831
01:20:43,260 --> 01:20:49,820
any more geoinformatics specific, but also for other fields and to outreach, trying to reach

832
01:20:49,820 --> 01:20:57,740
people in the early stages, for example, of their PhD to know that there is these CSC services and

833
01:20:57,740 --> 01:21:03,900
stuff like Code Refinery available. So what does it mean trying to help people to bring their work

834
01:21:03,900 --> 01:21:11,420
to the CSC supercomputers? Let's exclude the Code Refinery work and other teaching things.

835
01:21:11,420 --> 01:21:16,060
What's a day in your life look like?

836
01:21:17,420 --> 01:21:24,780
Well, so in that regard, it's basically like this morning we had a workshop with,

837
01:21:24,780 --> 01:21:32,540
in this case, humanists. So we asked them, do you know about CSC resources,

838
01:21:32,540 --> 01:21:37,820
do you know about supercomputers, that they exist for your work? And they said no.

839
01:21:37,820 --> 01:21:46,860
So we had to say like, okay, this is not just for supercomputation, but it's also like if you have

840
01:21:46,860 --> 01:21:54,060
something, a small thing that you need to run multiple times, like trying to explain it in a way

841
01:21:54,860 --> 01:22:00,860
that they can relate to it based on their current work. And that is mainly what a lot of this is,

842
01:22:00,860 --> 01:22:10,760
trying to lower the barrier towards supercomputing, HPC, all those big words that if you're not

843
01:22:10,760 --> 01:22:15,720
coming from computational backgrounds are maybe not that familiar.

844
01:22:15,720 --> 01:22:16,720
Yeah.

845
01:22:16,720 --> 01:22:24,240
So do you actually help them to like, do you take their code or analysis and actually help

846
01:22:24,240 --> 01:22:26,240
them get it started running?

847
01:22:26,240 --> 01:22:29,240
Things like that.

848
01:22:29,240 --> 01:22:30,240
Yes.

849
01:22:30,240 --> 01:22:39,280
So if we know about that people struggle with making their own code run, for example, on

850
01:22:39,280 --> 01:22:45,480
our supercomputers, then we get to help them.

851
01:22:45,480 --> 01:22:54,440
And we get to tell a little bit about the maybe different way of thinking that you need

852
01:22:54,440 --> 01:22:59,860
to start when you switch from your own laptop to the supercomputer.

853
01:22:59,860 --> 01:23:08,020
it's very often that we don't know about it. Very many people find that their problem is too small

854
01:23:08,020 --> 01:23:15,540
or they are they have not read enough documentation or have some other reason for not asking for help

855
01:23:16,100 --> 01:23:22,340
and then of course we cannot help and sometimes we then get to know about it very late in the process

856
01:23:22,340 --> 01:23:34,340
And then of course we also still try to help, but the best experience for us and also for the researchers that we support is like when we get involved right in the beginning.

857
01:23:34,340 --> 01:23:42,340
For CSC services, for example, when we are already part of choosing the right service because we have so many of them.

858
01:23:42,340 --> 01:23:49,340
And as a researcher, it's not necessarily clear what is the right service for me.

859
01:23:49,340 --> 01:23:54,140
service for me. So that is also, for example, a very general question that one can ask from

860
01:23:54,140 --> 01:24:00,180
us where we can say like, okay, this is perfect for this service or perfect for another service.

861
01:24:00,180 --> 01:24:06,700
Yeah. Okay. What have you learned in your past research, like from your research career

862
01:24:06,700 --> 01:24:17,920
to what you do now? What did you learn when studying research that helps you now?

863
01:24:17,920 --> 01:24:23,380
I think the main thing that helps me in my job right now that I have learned from the

864
01:24:23,380 --> 01:24:34,820
time as a researcher is how, I don't know how to put it, but how a researcher thinks.

865
01:24:34,820 --> 01:24:40,260
It's not just telling, okay, we have these awesome services, here are 20 courses you

866
01:24:40,260 --> 01:24:44,740
can do to learn about these services.

867
01:24:44,740 --> 01:24:52,620
But it's more like also thinking about where the researchers are and what are their goals.

868
01:24:52,620 --> 01:24:56,140
For most researchers, that is to get the paper out.

869
01:24:56,140 --> 01:24:58,780
So, that is the main focus.

870
01:24:58,780 --> 01:25:05,500
All this stuff like version control, reproducible research is like a minor thing at the side

871
01:25:05,500 --> 01:25:08,860
which might even be bugging them rather than helping.

872
01:25:08,860 --> 01:25:09,860
Yeah.

873
01:25:09,860 --> 01:25:10,860
And I think...

874
01:25:10,860 --> 01:25:11,860
It's like this researcher mindset.

875
01:25:11,860 --> 01:25:12,860
Yeah, exactly.

876
01:25:12,860 --> 01:25:19,820
Like being able to help on a level that is actually helpful for a researcher.

877
01:25:19,820 --> 01:25:25,140
Not only like, okay, here is all the things you need to know, but also trying to convey

878
01:25:25,140 --> 01:25:27,860
that there is something as good enough.

879
01:25:27,860 --> 01:25:33,360
There is like small steps you can take to make your and other's life better.

880
01:25:33,360 --> 01:25:36,260
You don't have to do everything.

881
01:25:36,260 --> 01:25:39,860
And that we can actually help with that.

882
01:25:39,860 --> 01:25:40,860
Yeah.

883
01:25:40,860 --> 01:25:41,860
Okay.

884
01:25:41,860 --> 01:25:50,100
Okay, so you said you were a little bit worried about the transition when you started.

885
01:25:50,100 --> 01:25:57,100
I mean, were you, like, how worried were you and, like, what were the kinds of things you

886
01:25:57,100 --> 01:25:58,100
worried about?

887
01:25:58,100 --> 01:25:59,100
Let's put it that way.

888
01:25:59,100 --> 01:26:01,140
And then how did it turn out in the end?

889
01:26:01,140 --> 01:26:04,700
Was it actually anything worth worrying about?

890
01:26:04,700 --> 01:26:07,500
No, it was not.

891
01:26:07,500 --> 01:26:09,980
That was the first thing.

892
01:26:09,980 --> 01:26:16,980
I was very worried about not being able to answer all the questions people might have,

893
01:26:16,980 --> 01:26:23,400
because one big part of this job that I applied for was user support and was training.

894
01:26:23,400 --> 01:26:29,660
I was not doing a lot of this at the time, mainly with Code Refinery, actually, and there

895
01:26:29,660 --> 01:26:32,460
it was always a second person there.

896
01:26:32,460 --> 01:26:36,740
When I didn't know something, then the second person could jump in.

897
01:26:36,740 --> 01:26:43,300
about this being alone there and being alone with a user, with a researcher who asks me questions

898
01:26:43,300 --> 01:26:48,980
and I might not know the answer that was a very scary thing because for me the support I have

899
01:26:48,980 --> 01:26:56,820
gotten from CSC was very personal and very good and like of course like that was my picture of

900
01:26:56,820 --> 01:27:02,580
how it's supposed to be and I'm still thriving for that but since then I've also learned that

901
01:27:02,580 --> 01:27:08,580
like, it's okay to not know everything. We cannot know everything. There's so much to know,

902
01:27:08,580 --> 01:27:13,220
like, not only about our services, but about scientific computing in general.

903
01:27:14,580 --> 01:27:21,220
And very often, I still know maybe one little thing more than the researcher who is asking

904
01:27:21,220 --> 01:27:27,620
the question. So even just telling, hey, I know that we have a documentation page about this,

905
01:27:27,620 --> 01:27:33,300
or, hey, you could look into this tool, this might do what you want to do. That already helps

906
01:27:33,300 --> 01:27:40,180
sometimes so much that the researcher is happily going away. And it feels like having accomplished

907
01:27:40,180 --> 01:27:45,860
something, even though I actually didn't know the actual answer to the problem. And that was maybe

908
01:27:45,860 --> 01:27:53,380
the main worry, like not being good enough with the computational side of things. Like someone who

909
01:27:53,380 --> 01:28:00,660
has like programmed their whole life or studied computer science or anything like that.

910
01:28:00,660 --> 01:28:05,300
So what do you say? It's like you bring your researcher mindset to the current things.

911
01:28:05,300 --> 01:28:12,180
When you were a researcher, you solved problems no one knew the answer to and you do the same

912
01:28:12,180 --> 01:28:13,180
now.

913
01:28:13,180 --> 01:28:21,500
Yes, yes, I think so. And I have to remind myself once in a while about that, like how

914
01:28:21,500 --> 01:28:28,540
it was these, let's say five years ago, when I was the researcher struggling with something and

915
01:28:28,540 --> 01:28:34,140
also feeling all my questions not big enough, like what would I have needed at the time to

916
01:28:35,820 --> 01:28:42,860
kind of brave off, ask my questions from the specialists and also what kind of

917
01:28:42,860 --> 01:28:46,380
of support would I have needed?

918
01:28:46,380 --> 01:28:50,500
Like that in many occasions,

919
01:28:50,500 --> 01:28:52,780
because everyone is short on time,

920
01:28:52,780 --> 01:28:56,740
it is the easy answer to find a link to documentation

921
01:28:56,740 --> 01:28:59,420
and just say, hey, read this.

922
01:28:59,420 --> 01:29:02,700
This is an easy solution to many of troubles

923
01:29:02,700 --> 01:29:04,100
that people have.

924
01:29:04,100 --> 01:29:06,220
But as a researcher,

925
01:29:06,220 --> 01:29:09,260
I have gotten that answer also at some point.

926
01:29:09,260 --> 01:29:11,980
And maybe I've even read the page at the time,

927
01:29:11,980 --> 01:29:16,980
but I was not able to put what is written there

928
01:29:17,060 --> 01:29:20,340
into the context of my work.

929
01:29:20,340 --> 01:29:22,660
So nowadays I try to remember that.

930
01:29:22,660 --> 01:29:24,520
And when someone asks a question,

931
01:29:24,520 --> 01:29:26,020
I like try to first ask, okay,

932
01:29:26,020 --> 01:29:28,360
what is this actually about before answering?

933
01:29:28,360 --> 01:29:31,740
With also some links in a side sentence,

934
01:29:31,740 --> 01:29:32,700
like saying, okay,

935
01:29:32,700 --> 01:29:35,040
you could also take a look here at this tutorial,

936
01:29:35,040 --> 01:29:37,380
but also try to explain how this relates

937
01:29:37,380 --> 01:29:41,020
to the actual question that was asked.

938
01:29:41,020 --> 01:29:42,660
Okay, that's good.

939
01:29:42,660 --> 01:29:44,180
So we've got a question from the note.

940
01:29:44,180 --> 01:29:47,540
So I'm at the beginning of my career as a master's student

941
01:29:47,540 --> 01:29:50,120
and I'm considering academia.

942
01:29:50,120 --> 01:29:53,380
What is the thing that one should know when starting?

943
01:29:53,380 --> 01:29:56,540
I guess you're not the academic career path,

944
01:29:56,540 --> 01:30:00,940
but this is similar to a common question I've asked people.

945
01:30:00,940 --> 01:30:03,780
What do you know now that you wish someone

946
01:30:03,780 --> 01:30:07,460
had told you years ago?

947
01:30:07,460 --> 01:30:18,180
so. That this path exists, like that there is a way to not be an academic, not be a researcher,

948
01:30:19,140 --> 01:30:25,380
doing your own research, trying to write papers and doing that stuff, but that there is also

949
01:30:25,380 --> 01:30:31,460
stuff like you do at Aalto, the research software engineer, stuff like we do at CSC with the user

950
01:30:31,460 --> 01:30:38,660
support and so on. People that are very much connected to the research but don't have to

951
01:30:38,660 --> 01:30:44,580
write their own papers but rather support everyone who needs the support doing their

952
01:30:44,580 --> 01:30:52,020
research and that can be more efficient, faster or just even like getting started with it.

953
01:30:52,980 --> 01:30:59,860
So I wish I had known that earlier. I got to know that actually through Code Refinery because when

954
01:30:59,860 --> 01:31:08,020
When I visited the Code Refinery Workshop, I got really excited about this, and asked

955
01:31:08,020 --> 01:31:14,580
to get involved in the project and do stuff there, and went then from helper to instructor

956
01:31:14,580 --> 01:31:19,020
to an organizer and community manager.

957
01:31:19,020 --> 01:31:25,500
But only through joining that network, I got to know that there is so much more beyond

958
01:31:25,500 --> 01:31:31,660
the traditional academics and research software engineering and so on.

959
01:31:31,660 --> 01:31:37,220
Yeah. The next question there asks about what kind of positions are in private companies,

960
01:31:37,220 --> 01:31:41,780
which I guess neither of us are really qualified to answer. Maybe next year I could try to

961
01:31:41,780 --> 01:31:46,260
find someone that works at a private company and invite them.

962
01:31:46,260 --> 01:31:52,780
Yeah. And I know that there is also a research position in private companies, for example.

963
01:31:52,780 --> 01:31:57,740
But yeah, that as a short answer.

964
01:31:57,740 --> 01:32:02,340
But I mean, I guess the point of this whole interview is that there are positions which

965
01:32:02,340 --> 01:32:09,540
are related to research and quite interesting in their own right, which are not the academic

966
01:32:09,540 --> 01:32:14,420
track, which many people are qualified for and don't know about.

967
01:32:14,420 --> 01:32:20,980
Yeah, and it's so interesting to also, as a researcher, you are in your own little world

968
01:32:20,980 --> 01:32:23,380
with your focus point, especially as PhD,

969
01:32:23,380 --> 01:32:26,380
you have your little slice of the world

970
01:32:26,380 --> 01:32:27,820
that you're working on.

971
01:32:27,820 --> 01:32:30,620
But as what we do, we get in contact

972
01:32:30,620 --> 01:32:33,700
with many different people from many different domains,

973
01:32:33,700 --> 01:32:38,380
backgrounds, levels in their, or stages in their career.

974
01:32:38,380 --> 01:32:42,780
And it's very interesting to be part of kind of all of that,

975
01:32:42,780 --> 01:32:45,140
even when it's just a little bit through one question

976
01:32:45,140 --> 01:32:48,820
that we get in our user support sessions or something.

977
01:32:48,820 --> 01:32:57,140
Would you say that you have a wider variety or more interesting problems now or when you

978
01:32:57,140 --> 01:33:01,660
were in the academic track doing your own stuff?

979
01:33:01,660 --> 01:33:03,020
Yes, definitely.

980
01:33:03,020 --> 01:33:12,180
Also partly because, well, when I was a full academic, it was just when I started with

981
01:33:12,180 --> 01:33:18,140
programming and scientific computing things in general, so I worked on one big project

982
01:33:18,140 --> 01:33:21,860
for very, very long because I just had to learn at the time also.

983
01:33:22,380 --> 01:33:26,540
So I got very sick of that project, but it's still also with me.

984
01:33:26,860 --> 01:33:28,820
But now it's more varied.

985
01:33:28,820 --> 01:33:34,300
So there's many different questions that people come with.

986
01:33:34,460 --> 01:33:37,660
Some are easy to solve, like within a few minutes.

987
01:33:37,660 --> 01:33:39,100
Some need more hours.

988
01:33:39,100 --> 01:33:41,100
Some maybe need more days.

989
01:33:41,620 --> 01:33:44,900
Yeah. And very much varied. Yeah.

990
01:33:44,900 --> 01:34:02,900
So we're coming a little bit close to the end here. There's still almost 10 minutes, but please, so now's the time people start writing all your random questions in the notes, the ones that are most relevant to [name], I will raise up, but other people can also answer there.

991
01:34:02,900 --> 01:34:11,900
There is a question I would like to answer actually. Do people in industry use these things you mentioned earlier, like conda containers and HPC?

992
01:34:11,900 --> 01:34:18,900
Conda and containers, yes, definitely, if they know about it, that's not necessarily

993
01:34:18,900 --> 01:34:20,540
a given.

994
01:34:20,540 --> 01:34:24,460
And for us, it's probably harder to reach people in companies.

995
01:34:24,460 --> 01:34:31,500
HPC, maybe nowadays a bit more than earlier, because, for example, the Lumi supercomputer

996
01:34:31,500 --> 01:34:34,440
is available for companies as well.

997
01:34:34,440 --> 01:34:40,100
And if you go to the Lumi website, you can find out that there is a few companies using

998
01:34:40,100 --> 01:34:41,100
Lumi.

999
01:34:41,100 --> 01:34:52,220
So for those, we also offer kind of a specific training and get, oh, we wish, I don't know

1000
01:34:52,220 --> 01:34:54,260
how it really is in industry.

1001
01:34:54,260 --> 01:34:57,140
Maybe someone who's working in industry can talk.

1002
01:34:57,140 --> 01:34:58,140
Okay.

1003
01:34:58,140 --> 01:34:59,140
Yeah.

1004
01:34:59,140 --> 01:35:00,140
Yeah.

1005
01:35:00,140 --> 01:35:08,060
So what do you say that this course that's here now is also useful for industry track

1006
01:35:08,060 --> 01:35:09,060
people?

1007
01:35:09,060 --> 01:35:10,060
Yes.

1008
01:35:10,060 --> 01:35:15,100
I would say so, because you might be the one bringing that stuff to the company.

1009
01:35:15,100 --> 01:35:21,900
They might not know about it for whatever reason, and you might be the one that then has a solution

1010
01:35:21,900 --> 01:35:29,820
to a problem by, for example, knowing how to, well, organize your project to start with,

1011
01:35:29,820 --> 01:35:34,620
or if you visit a code refinery course, like knowing how to use Git that can make

1012
01:35:34,620 --> 01:35:39,260
many processes more efficient, and then the company will be very happy about that.

1013
01:35:40,060 --> 01:35:53,420
Yeah, yeah. So would you say that these kind of courses give you an advantage when looking for

1014
01:35:53,420 --> 01:36:01,580
other jobs? I mean, I guess, well, that's probably obvious. Let's say you finish a PhD and you have

1015
01:36:02,220 --> 01:36:07,500
a bunch of articles to your name, or you have a bunch of articles and you say,

1016
01:36:07,500 --> 01:36:13,820
I've trained to use supercomputers in Git. That's pretty obvious.

1017
01:36:14,620 --> 01:36:17,420
Yeah, that probably depends on what you're then looking for.

1018
01:36:20,700 --> 01:36:27,900
So what I have learned from getting the job at CSC is that just having used a supercomputer is

1019
01:36:27,900 --> 01:36:33,660
a very good starting point for even working in supercomputing support, for example.

1020
01:36:33,660 --> 01:36:38,860
because you actually know, you might not know every detail, but you can learn that also on the

1021
01:36:38,860 --> 01:36:46,300
job. I learned so much every day on the job. But you know where the researchers are coming from,

1022
01:36:46,300 --> 01:36:50,780
so you have been in the situation that you have asked some of these questions yourself. So

1023
01:36:52,220 --> 01:36:59,820
I think with that knowledge you can be a very good person to be between the IT admins

1024
01:36:59,820 --> 01:37:08,780
and the researchers to translate between them, like if the IT admin says like oh this is not

1025
01:37:08,780 --> 01:37:14,780
something we do here, then you can start explaining why this is not something we do here for example.

1026
01:37:14,780 --> 01:37:20,780
Yeah, cool. So what's your experience with the PhD overall? Would you say it was worth it?

1027
01:37:23,260 --> 01:37:27,020
So I'm still working on it, so yes I think it's still worth it.

1028
01:37:27,020 --> 01:37:37,020
Mainly because I have now also seen in my current job, it's a permanent position, so I would not necessarily need it for that.

1029
01:37:37,020 --> 01:37:51,020
But we are still working so close with academia that we also want to support research projects from the beginning and support them really a bit more in depth.

1030
01:37:51,020 --> 01:37:56,220
depth and for that we need to be part of the research project funding application and for

1031
01:37:56,220 --> 01:38:00,540
that it's better to have a PhD to your name because you actually have some academic

1032
01:38:02,220 --> 01:38:07,980
merits that help with this with the project application while without that we have only

1033
01:38:08,620 --> 01:38:15,900
like a few people who can be this PIs of the research project within the company so too many

1034
01:38:15,900 --> 01:38:20,540
research projects that want to maybe put us on the application, we have to say no,

1035
01:38:20,540 --> 01:38:27,820
because we don't have the people to actually cover that. And I have learned everything that brought

1036
01:38:27,820 --> 01:38:34,860
me right here, right now, during the time of my PhD. Basically, none of it I learned during my

1037
01:38:34,860 --> 01:38:42,860
actual studies, master's or bachelor.

1038
01:38:42,860 --> 01:38:51,860
Yeah. Okay. When do you say like the PhD is basically experience that counts for something?

1039
01:38:51,860 --> 01:38:57,860
Yes. And I think like, of course, you don't need to do a PhD. You can also work as a researcher after your master's.

1040
01:38:57,860 --> 01:39:06,500
The PhD maybe allows that you can do or also gives a bit easier the possibility to do courses.

1041
01:39:07,060 --> 01:39:15,860
Like for example I could get I think over 10 credits for my PhD from visiting CSE courses

1042
01:39:15,860 --> 01:39:21,140
for example and that also of course motivated me to do the courses because I could fill my credits

1043
01:39:21,140 --> 01:39:27,300
with that. If I would not have done the PhD I would have maybe done like maybe one course

1044
01:39:27,300 --> 01:39:31,860
a year or something just to learn something new, stay up to date and stuff.

1045
01:39:33,060 --> 01:39:38,100
But in that sense it was really useful. Yeah, so we're almost out of time. So

1046
01:39:38,100 --> 01:39:41,220
what do you hope to continue learning and what comes next?

1047
01:39:44,100 --> 01:39:52,260
Well, I hope to continue learning more about how things work, how many of our services work,

1048
01:39:52,260 --> 01:40:05,820
How to reach, like currently my focus is a lot on outreach so I hope to learn more about

1049
01:40:05,820 --> 01:40:13,100
how to best reach out to people that would have use for our services and that would have

1050
01:40:13,100 --> 01:40:17,620
use for our support because there is so much of it available, so many people that are very

1051
01:40:17,620 --> 01:40:26,660
happy to help with things and I'm always so sad to hear stories like that someone has

1052
01:40:27,380 --> 01:40:31,380
been struggling with something that we could have helped with if we had only known

1053
01:40:32,020 --> 01:40:37,940
after two years of struggling or something like this. Yeah. Okay.

1054
01:40:41,620 --> 01:40:45,940
Yeah, I guess we're basically out of time. There's a comment that you're really cool

1055
01:40:45,940 --> 01:40:49,060
and a good role model. So yes, I would agree with that.

1056
01:40:49,060 --> 01:40:50,060
Thank you.

1057
01:40:50,060 --> 01:40:59,420
You know, many of our visitors here are like that. So yeah, I mean, we have to keep finding

1058
01:40:59,420 --> 01:41:00,660
more for next year.

1059
01:41:00,660 --> 01:41:05,060
I'm glad to hear this was useful. Thank you for having me.

1060
01:41:05,060 --> 01:41:09,380
Yeah, I mean, like really, [name] and all of us, we're basically normal people that

1061
01:41:09,380 --> 01:41:15,580
want to keep work going, help, basically, yeah.

1062
01:41:15,580 --> 01:41:16,620
You're normal nerds.

1063
01:41:16,620 --> 01:41:17,120
Yeah.

1064
01:41:19,620 --> 01:41:20,340
But yeah, OK.

1065
01:41:20,340 --> 01:41:24,260
So I guess thank you, [name], and see you

1066
01:41:24,260 --> 01:41:27,580
around at the next Code Refinery workshop in September.

1067
01:41:27,580 --> 01:41:29,240
Yeah, and if you have any more questions,

1068
01:41:29,240 --> 01:41:31,460
I'll still be here and answer them in the document.

1069
01:41:31,460 --> 01:41:32,060
Keep them coming.

1070
01:41:32,060 --> 01:41:32,860
OK, great.

1071
01:41:32,860 --> 01:41:33,580
Thanks.

1072
01:41:33,580 --> 01:41:34,060
Bye.

1073
01:41:34,060 --> 01:41:36,260
Bye.

1074
01:41:36,260 --> 01:41:40,100
OK, who is next?

1075
01:41:45,580 --> 01:41:51,580
I think we're about to have some demos, if I remember correctly.

1076
01:41:51,580 --> 01:41:52,580
Yeah.

1077
01:41:52,580 --> 01:41:53,580
Okay.

1078
01:41:53,580 --> 01:41:55,940
Whose screen should I go to?

1079
01:41:55,940 --> 01:41:57,940
I can take the screenshot.

1080
01:41:57,940 --> 01:41:58,940
Okay.

1081
01:41:58,940 --> 01:41:59,940
And.

1082
01:41:59,940 --> 01:42:00,940
So yeah.

1083
01:42:00,940 --> 01:42:01,940
Yeah.

1084
01:42:01,940 --> 01:42:02,940
I will head out for a bit.

1085
01:42:02,940 --> 01:42:05,940
So see you later then.

1086
01:42:05,940 --> 01:42:06,940
Yes.

1087
01:42:06,940 --> 01:42:07,940
Okay.

1088
01:42:07,940 --> 01:42:18,940
So yeah, throughout the day we've had very interesting discussions about what computing is.

1089
01:42:18,940 --> 01:42:27,940
And we thought that it might be nice to have some demos showing what can be done in a computational cluster.

1090
01:42:27,940 --> 01:42:38,940
And these are straight out of the press, so let's see how much of a demo effect we will get.

1091
01:42:38,940 --> 01:42:45,940
So, to help me today, we have [name]. Do you want to introduce yourself?

1092
01:42:45,940 --> 01:42:50,940
Yeah, I'm a research software engineer at Aalto in [name]'s group.

1093
01:42:50,940 --> 01:42:57,940
been there now for three years, and still having fun.

1094
01:42:57,940 --> 01:43:01,940
Yeah, so it's good to hear that you're having fun.

1095
01:43:01,940 --> 01:43:09,940
[name], your sound might be coming from a room microphone.

1096
01:43:09,940 --> 01:43:11,940
Yeah, sorry.

1097
01:43:11,940 --> 01:43:15,940
Yeah, so what do we have for you today?

1098
01:43:15,940 --> 01:43:18,500
Okay, so I prepared two demos.

1099
01:43:18,500 --> 01:43:21,780
So these are like two demos that might interest

1100
01:43:21,780 --> 01:43:25,380
in like different people in our audience.

1101
01:43:25,380 --> 01:43:28,260
So the first demo, I will demonstrate

1102
01:43:28,260 --> 01:43:32,900
like how you could run this molecular dynamic simulator

1103
01:43:32,900 --> 01:43:35,820
called LAMPS, which might be physicists out there

1104
01:43:35,820 --> 01:43:38,500
might be interested in, which uses like

1105
01:43:38,500 --> 01:43:41,940
Mesas passing interface on MPI for parallelization.

1106
01:43:41,940 --> 01:43:51,540
talk about that soonish. So, I have here a terminal. It's running on our login node. So,

1107
01:43:51,540 --> 01:44:00,100
these demos are very much like demos that... Yeah. Are you going to talk about the big picture of

1108
01:44:00,660 --> 01:44:05,220
what we're doing and what people should try to follow and not try to follow right now?

1109
01:44:05,220 --> 01:44:13,300
Yes. So, these are very much demos that are for our site. So, they might not work for your site.

1110
01:44:13,300 --> 01:44:22,420
And these demos are to show what sort of things you're capable of doing in the computing cluster.

1111
01:44:22,420 --> 01:44:34,900
So, you shouldn't necessarily worry about writing these up or taking notes or anything like that.

1112
01:44:34,900 --> 01:44:41,300
what we want you to focus on is the big picture of like, okay, you have a scientific problem,

1113
01:44:41,300 --> 01:44:48,420
you want to solve it in the computing cluster, so what sort of workflow you might encounter.

1114
01:44:50,740 --> 01:44:58,900
In this case, let's say we want to run some simulation with this LAMP's molecular dynamics

1115
01:44:58,900 --> 01:45:10,420
code. First off, I would probably want to get the example. I have prepared this git clone command.

1116
01:45:11,060 --> 01:45:20,180
What this does is that it clones the LAMPS repository, which contains the examples that

1117
01:45:20,180 --> 01:45:24,660
we want to run. On the bottom, you can see history of the commands that I'm running.

1118
01:45:24,660 --> 01:45:29,660
So there's like a terminal there showing what commands I'm running.

1119
01:45:29,660 --> 01:45:33,660
So you might encounter this kind of like a command line interface.

1120
01:45:33,660 --> 01:45:38,660
This is only one way of accessing the computational cluster.

1121
01:45:38,660 --> 01:45:43,660
But we'll be working with the command line interface quite soon.

1122
01:45:43,660 --> 01:45:48,660
But you can just now limit yourself to the knowledge that I'm in the computational cluster.

1123
01:45:48,660 --> 01:45:50,660
I'm taking out the demos.

1124
01:45:50,660 --> 01:46:01,200
And here I have now the lamps folder and I will go to examples and I will try this simple

1125
01:46:01,200 --> 01:46:02,860
like intendation example.

1126
01:46:02,860 --> 01:46:10,180
So in this example, we have like a 2D plane of atoms where we modify or we make an intendation

1127
01:46:10,180 --> 01:46:20,060
into this atom lattice by forcing a spherical indenter

1128
01:46:20,060 --> 01:46:22,620
into that lattice.

1129
01:46:22,620 --> 01:46:23,420
And first of all,

1130
01:46:23,420 --> 01:46:24,820
You're smashing something into it.

1131
01:46:24,820 --> 01:46:28,340
Yeah, we're smashing atoms, so it sounds better.

1132
01:46:28,340 --> 01:46:31,700
So I will first modify the input file a bit.

1133
01:46:31,700 --> 01:46:34,100
I'll actually use Mano for them.

1134
01:46:34,100 --> 01:46:37,940
I will make here, I will modify one line that

1135
01:46:37,940 --> 01:46:44,100
make certain that we get a dump or this kind of like output

1136
01:46:44,100 --> 01:46:47,620
from the demo that we can then visualize later on.

1137
01:46:47,620 --> 01:46:52,580
So we store the atom positions every 250 time steps.

1138
01:46:52,580 --> 01:46:56,140
So I will modify this file.

1139
01:46:56,140 --> 01:47:00,300
And what we do typically in a computed cluster,

1140
01:47:00,300 --> 01:47:03,460
we'll talk about this in much more detail tomorrow.

1141
01:47:03,460 --> 01:47:11,540
But what we usually do is that we write these instructions

1142
01:47:11,540 --> 01:47:15,900
for the computer, what it should run on the resources,

1143
01:47:15,900 --> 01:47:17,980
the computational resources.

1144
01:47:17,980 --> 01:47:20,660
So what I would do here is I'm going

1145
01:47:20,660 --> 01:47:25,380
to quickly write this script.

1146
01:47:25,380 --> 01:47:31,900
Maybe, [name], if you want to explain shortly what I'm doing.

1147
01:47:31,900 --> 01:47:37,900
Essentially, when you want to submit a photo to a cluster, you need to tell it what kind of

1148
01:47:37,900 --> 01:47:42,700
resources you want. And that's what Simu is currently indicating. So in this case,

1149
01:47:44,060 --> 01:47:52,620
it's using the Slurm scheduler. And the Slurm scheduler essentially reads a bash script

1150
01:47:53,660 --> 01:47:58,300
and interprets these comments that are here in the beginning. Using a bash script, everything

1151
01:47:58,300 --> 01:48:04,220
that's starting with a hashtag is a comment and when the scheduler sees or when the submission

1152
01:48:04,860 --> 01:48:11,260
system sees this s-batch it knows that this is a command for the scheduler and here it's

1153
01:48:12,220 --> 01:48:19,500
this should be running on one node it should have should get 16 cpus the memory per cpu

1154
01:48:20,060 --> 01:48:26,620
should be 2 gigabytes so a total of 32 gigabytes well or 16 now yeah yeah and it should be running

1155
01:48:26,620 --> 01:48:32,460
for a specific time. After that time the process would essentially be killed. So in this case it's

1156
01:48:32,460 --> 01:48:41,340
10 minutes that this will be running at most. And below those comments, good explanation,

1157
01:48:41,340 --> 01:48:48,460
thank you, beyond those comments we will have instructions that we expect the code to run.

1158
01:48:48,460 --> 01:48:54,140
So commands that we want the code to run. So in this case we'll do this module loading. We'll

1159
01:48:54,140 --> 01:49:02,860
talk about this later as well, but we will basically load some pre-installed software

1160
01:49:02,860 --> 01:49:12,700
that is installed by the cluster people and we will preload that and then we will run it,

1161
01:49:13,340 --> 01:49:17,580
this lump command, with the input that we have. Let's hope that this works.

1162
01:49:17,580 --> 01:49:27,100
And to quickly say, the reason why all of this software is not just available is that

1163
01:49:27,100 --> 01:49:32,920
you want to keep the nodes where these tools are running as clean as possible.

1164
01:49:32,920 --> 01:49:38,520
So if you would install lots and lots of software on all of the nodes, there would be a significant

1165
01:49:38,520 --> 01:49:44,920
amount of resources already taken up just by that, because not necessarily every node

1166
01:49:44,920 --> 01:49:51,800
has a hard drive. And if you don't have a hard drive, you need to store all of these things in

1167
01:49:51,800 --> 01:50:03,000
memory. And that's why these tools are installed elsewhere. So I had a mistake in the script. So

1168
01:50:03,000 --> 01:50:14,040
I fixed that. I had a wrong setting because I mistyped it. After fixing that, I submitted this

1169
01:50:14,040 --> 01:50:21,560
script to the queue. In these HPC clusters, we have a queue. We'll talk more about it later.

1170
01:50:21,560 --> 01:50:29,320
That will run it whenever it finds a correct place for the job to run. Currently,

1171
01:50:31,160 --> 01:50:35,800
you can see that actually there's an interactive session that I have open on another

1172
01:50:35,800 --> 01:50:42,640
So not a place open, but that job actually probably finished.

1173
01:50:42,640 --> 01:50:45,960
So let's see.

1174
01:50:45,960 --> 01:50:48,720
I just want to give one more comment here.

1175
01:50:48,720 --> 01:50:52,160
I'm not sure if the Slurm command as such

1176
01:50:52,160 --> 01:50:54,720
is available on clusters, because I

1177
01:50:54,720 --> 01:51:00,080
think that is a script that was created in Alto.

1178
01:51:00,080 --> 01:51:04,200
So if you want to do that, or if you want to check queues,

1179
01:51:04,200 --> 01:51:06,280
I think we are coming to that later as well.

1180
01:51:06,280 --> 01:51:06,880
Yes.

1181
01:51:06,880 --> 01:51:08,400
There was one more mistake.

1182
01:51:08,400 --> 01:51:12,960
I didn't specify which MPI implementation I want to use.

1183
01:51:12,960 --> 01:51:14,280
But now it's run.

1184
01:51:14,280 --> 01:51:16,360
We can see the output.

1185
01:51:16,360 --> 01:51:20,480
So we see what Lumps provides is this kind of like an output,

1186
01:51:20,480 --> 01:51:25,200
but it also provides this dump file that, well,

1187
01:51:25,200 --> 01:51:29,800
is a video basically of what happened during the run.

1188
01:51:29,800 --> 01:51:33,560
There's a question in, yeah.

1189
01:51:33,560 --> 01:51:36,560
If we could introduce a bit of the background of this script.

1190
01:51:36,560 --> 01:51:40,640
So why do we need this script?

1191
01:51:40,640 --> 01:51:44,680
Why can't we just run it, like, well,

1192
01:51:44,680 --> 01:51:46,440
essentially on that command line as it is?

1193
01:51:46,440 --> 01:51:48,240
Yes, that's an excellent question.

1194
01:51:48,240 --> 01:51:50,680
So the question comes back to what

1195
01:51:50,680 --> 01:51:55,120
we were talking earlier today about computing resources,

1196
01:51:55,120 --> 01:51:57,040
because we are sharing resources.

1197
01:51:57,040 --> 01:52:00,040
We are not running this on, we could run this

1198
01:52:00,040 --> 01:52:02,200
on our own laptop, but in this case,

1199
01:52:02,200 --> 01:52:07,440
want to run it, like, this is of course like a bit of a toy example, but if we

1200
01:52:07,440 --> 01:52:12,200
would be running like an actual simulation, we would be, it would require

1201
01:52:12,200 --> 01:52:16,360
a lot more resources and we, because we're sharing the resources, there needs

1202
01:52:16,360 --> 01:52:18,580
to be a way of sharing these resources.

1203
01:52:19,000 --> 01:52:23,380
And we'll talk about this tomorrow a lot more, how the sharing happens

1204
01:52:23,440 --> 01:52:24,960
and how the queue system works.

1205
01:52:25,400 --> 01:52:30,440
But basically there's like a queue system that organizes how the different jobs

1206
01:52:30,440 --> 01:52:39,440
run. And I want to add to that. So normally, or in almost all clusters I've seen up until

1207
01:52:39,440 --> 01:52:45,360
now, if you connect to the cluster, you are actually on the login node. So if you would

1208
01:52:45,360 --> 01:52:50,360
run the login, the login node is kind of the access point for everyone to that cluster.

1209
01:52:50,360 --> 01:52:56,320
So if you start running code on this directly on that node, you would run it on one machine

1210
01:52:56,320 --> 01:52:58,120
that is shared by everyone.

1211
01:52:58,120 --> 01:53:01,600
And very often, these machines have restrictions

1212
01:53:01,600 --> 01:53:05,360
how much resources someone can actually use on them.

1213
01:53:05,360 --> 01:53:10,960
And very often, they also have kind of automated script

1214
01:53:10,960 --> 01:53:14,400
that kill or stops stop code that

1215
01:53:14,400 --> 01:53:16,320
is taking too much resources.

1216
01:53:16,320 --> 01:53:22,360
So running things on the logger node is not a good idea,

1217
01:53:22,360 --> 01:53:24,240
or it shouldn't be done.

1218
01:53:24,240 --> 01:53:28,800
So that's why we need to write this script,

1219
01:53:28,800 --> 01:53:31,280
because the script has the information on how

1220
01:53:31,280 --> 01:53:33,920
for the scheduler that [name] mentioned

1221
01:53:33,920 --> 01:53:37,080
on how to put it to the actual cluster.

1222
01:53:37,080 --> 01:53:41,240
And the cluster is not the same here.

1223
01:53:43,440 --> 01:53:44,280
Maybe.

1224
01:53:45,320 --> 01:53:48,400
Yeah, I would quickly mention that you can think about it

1225
01:53:48,400 --> 01:53:50,540
more if you look at the script again,

1226
01:53:50,540 --> 01:53:52,840
like we asked for eight CPUs

1227
01:53:52,840 --> 01:54:01,720
currently, let's say my laptop, I'm watching the stream currently. I'm having a Zoom open. I have

1228
01:54:02,680 --> 01:54:07,560
some browsers open and anything. If I would run these on my own laptop, my laptop would basically

1229
01:54:07,560 --> 01:54:14,840
overheat. It's currently running at about 70 degrees anyway, so it would basically be game

1230
01:54:14,840 --> 01:54:19,720
over for that if I would try to run this simulation at the same time while I'm running other stuff.

1231
01:54:19,720 --> 01:54:22,880
So that's why I want to run it in the cluster.

1232
01:54:22,880 --> 01:54:28,840
So let's think in a more traditional high performance

1233
01:54:28,840 --> 01:54:32,720
computing situation, where if you are a physicist and you

1234
01:54:32,720 --> 01:54:36,000
would want to run this code, but you want to run it in a

1235
01:54:36,000 --> 01:54:39,400
production size, it might be thousands of times bigger.

1236
01:54:39,880 --> 01:54:45,720
So then you might need tens of nodes, hundreds of CPUs to

1237
01:54:45,720 --> 01:54:47,400
actually run a big simulation.

1238
01:54:47,400 --> 01:54:54,600
So in those cases, yeah, laptop isn't any more an option to do.

1239
01:54:54,600 --> 01:54:58,360
But we'll talk about the parallelization later on.

1240
01:54:58,360 --> 01:55:04,840
But this is like, OK, if we return back to the example,

1241
01:55:04,840 --> 01:55:08,920
OK, this is all fine and nice that I managed to run it.

1242
01:55:08,920 --> 01:55:13,560
But OK, if I want to now see what the result was,

1243
01:55:13,560 --> 01:55:21,800
like these command line interfaces, it might be good for programming what I want the computer to

1244
01:55:21,800 --> 01:55:27,960
do, what I want the queue to do, and what I want to run. But if I want to visualize it, this might

1245
01:55:27,960 --> 01:55:34,120
not be the best option. So for that, at least here in Aalto, in other sites there might be

1246
01:55:34,120 --> 01:55:42,200
different ones. We have this open on demand, so CSC at least has this kind of a service,

1247
01:55:42,200 --> 01:55:49,320
where you can launch like a temporary virtual desktop. You might have other, like in Alto

1248
01:55:49,320 --> 01:55:55,400
there's also the VDI service, but this runs in a cluster that basically provides you a desktop

1249
01:55:55,400 --> 01:56:02,200
in a browser. So you can visualize the results that you have. So let's try that out. So

1250
01:56:03,400 --> 01:56:09,960
over here, I will launch one desktop with one CPU and eight gigabytes of memory. It should take

1251
01:56:09,960 --> 01:56:12,760
take up like a few seconds to launch.

1252
01:56:15,400 --> 01:56:17,320
While we're waiting for that,

1253
01:56:17,320 --> 01:56:20,200
I want to briefly mention that essentially

1254
01:56:21,600 --> 01:56:23,480
the layout of the cluster is such that

1255
01:56:24,840 --> 01:56:27,580
the resources are somewhat shared.

1256
01:56:30,640 --> 01:56:32,440
The login node, for example, has essentially,

1257
01:56:32,440 --> 01:56:35,840
it shares the file system with the compute node.

1258
01:56:35,840 --> 01:56:39,140
So anything that you create on the login node,

1259
01:56:39,140 --> 01:56:45,180
the compute nodes can see, that's how essentially the data

1260
01:56:45,180 --> 01:56:48,060
transfer, it's not really data transfer, it's stored at the

1261
01:56:48,060 --> 01:56:50,540
same place. It's just a network file system.

1262
01:56:51,660 --> 01:56:55,620
Yes. And over here, you can notice that I'm now like the

1263
01:56:55,620 --> 01:56:59,860
terminal that I'm starting here is starting on some PE21. So

1264
01:56:59,860 --> 01:57:03,740
it's a computing node. So it's one of the like computers that

1265
01:57:03,740 --> 01:57:08,100
we have in the system. And over there, I can start Ovito, which

1266
01:57:08,100 --> 01:57:20,500
this kind of like open visualization tool that is often used to simulate various simulations.

1267
01:57:21,140 --> 01:57:31,940
So like this molecular dynamic simulations. So over here I will browse to the folder

1268
01:57:31,940 --> 01:57:40,980
folder that the simulation was done in, so it was the indent simulation.

1269
01:57:40,980 --> 01:57:45,980
And I will visualize the dump file over here.

1270
01:57:45,980 --> 01:57:49,400
So you can notice that here we have the visualization.

1271
01:57:49,400 --> 01:57:59,580
So it's basically like this kind of like a lattice, 2D lattice of some atoms that don't

1272
01:57:59,580 --> 01:58:05,820
move and some atoms that do move and when we play the simulation we can see that we can see the

1273
01:58:07,420 --> 01:58:14,460
indentation starting to happen when the push comes to solve and the lattice will move

1274
01:58:15,100 --> 01:58:21,580
from the spherical indenter. So this would happen like, I don't know, like you push something into

1275
01:58:21,580 --> 01:58:27,100
a metal and that would happen. So this kind of a visualization, so this is just to demonstrate

1276
01:58:27,100 --> 01:58:35,260
like a workflow that you might have in a computing cluster. So you do something in the command line

1277
01:58:35,260 --> 01:58:43,580
or from some other interface where you submit your job into the queue and it runs on some machine

1278
01:58:44,140 --> 01:58:50,380
and once it has run you maybe use open on demand or some other way to visualize the results or

1279
01:58:50,380 --> 01:58:57,660
to check the results and what is the result that you want to have.

1280
01:59:05,980 --> 01:59:13,100
So this is the kind of like a workflow that you might have in the cluster.

1281
01:59:13,100 --> 01:59:20,500
So yeah, so in the simulation, there's a question in the chat.

1282
01:59:20,500 --> 01:59:23,780
So they say you cannot see the indenter.

1283
01:59:23,780 --> 01:59:28,820
It's basically like some material

1284
01:59:28,820 --> 01:59:34,020
with infinite density that pushes to the infinite force

1285
01:59:34,020 --> 01:59:41,140
pushes like so that nothing cannot go over here.

1286
01:59:41,140 --> 01:59:44,940
So it's some indenter that basically pushes the material

1287
01:59:44,940 --> 01:59:47,500
on that side.

1288
01:59:47,500 --> 01:59:49,620
OK, but this is like an example of,

1289
01:59:49,620 --> 01:59:53,140
like let's say this kind of like a traditional physics

1290
01:59:53,140 --> 01:59:56,660
simulation that you might do in a cluster.

1291
01:59:56,660 --> 01:59:58,940
We'll talk about how do you do it in more

1292
01:59:58,940 --> 02:00:02,540
detail in the coming days.

1293
02:00:02,540 --> 02:00:06,380
Another example, I hope we are not running out of time

1294
02:00:06,380 --> 02:00:08,500
or going too much over time.

1295
02:00:08,500 --> 02:00:18,100
But another example I want to give is for the deep learning people or for the

1296
02:00:19,940 --> 02:00:24,660
language processing people. In many cases, you might have a situation that

1297
02:00:25,300 --> 02:00:29,860
you want to utilize, let's say, the large language models that are

1298
02:00:29,860 --> 02:00:34,860
are like nowadays available everywhere basically.

1299
02:00:35,540 --> 02:00:38,500
So you would want to do some,

1300
02:00:38,500 --> 02:00:43,500
you want to run some queries to a large language model.

1301
02:00:44,960 --> 02:00:49,960
So in this example, what I will use is like

1302
02:00:50,100 --> 02:00:54,980
this already written example that we have done,

1303
02:00:54,980 --> 02:00:57,900
this large language model example.

1304
02:00:57,900 --> 02:01:04,060
And what the example does is that it uses this Lama2 large language model to batch

1305
02:01:04,060 --> 02:01:07,420
process multiple queries to a large language model.

1306
02:01:07,900 --> 02:01:15,580
So when people are doing query, like many people are using ChatGPT and programs

1307
02:01:15,580 --> 02:01:18,940
like that for that, but they are closed models.

1308
02:01:19,060 --> 02:01:23,300
So you cannot really know what happens behind the scenes.

1309
02:01:23,300 --> 02:01:34,300
And you will just have to send a request to OpenAI and they will give you a response of what was the prompt that you queried.

1310
02:01:34,300 --> 02:01:46,300
But if you're doing research into large language models or if you want to use open source alternatives for that, you might need to run it yourself.

1311
02:01:46,300 --> 02:01:50,300
But those models are very heavy on the GPU requirements.

1312
02:01:50,300 --> 02:01:53,300
like they are big models usually.

1313
02:01:53,300 --> 02:01:57,420
So you'd need a system that has those kinds

1314
02:01:57,420 --> 02:01:59,080
of resources to do it.

1315
02:01:59,080 --> 02:02:03,900
And in our cluster, we have GPUs that are capable

1316
02:02:03,900 --> 02:02:07,780
of running some of these large language models.

1317
02:02:07,780 --> 02:02:12,780
So in this example, let's go to the batch inference folder.

1318
02:02:15,300 --> 02:02:19,060
And what we have here, we have this kind

1319
02:02:19,060 --> 02:02:27,940
submission script that is a bit more complicated. But what we have here is that we request

1320
02:02:29,460 --> 02:02:36,500
quite a bit of memory, we request a certain number of CPUs, we request a GPU,

1321
02:02:38,020 --> 02:02:45,540
and then we use like here in Aalto we have already downloaded certain deep learning models

1322
02:02:45,540 --> 02:02:51,620
or pre-existing models. You could download them yourself from, let's say, HuggingFace or somewhere.

1323
02:02:53,140 --> 02:03:00,980
But we have already some downloaded models existing. And over here we will use an environment

1324
02:03:00,980 --> 02:03:08,580
that I have already pre-created to run this kind of like an inference script.

1325
02:03:09,300 --> 02:03:13,380
And this inference script is like a Python script that loads the models and it will

1326
02:03:13,380 --> 02:03:17,260
it will take some prompts that we have

1327
02:03:17,260 --> 02:03:19,880
and it will run it through the model.

1328
02:03:19,880 --> 02:03:22,700
So let's just run this.

1329
02:03:23,800 --> 02:03:28,280
So this is the kind of like, yeah.

1330
02:03:28,280 --> 02:03:30,960
You have this Python unbuffered in there.

1331
02:03:30,960 --> 02:03:31,800
Yes.

1332
02:03:31,800 --> 02:03:33,200
Why?

1333
02:03:33,200 --> 02:03:36,000
Well, that is so that if we want to look

1334
02:03:36,000 --> 02:03:38,520
at the output over here,

1335
02:03:38,520 --> 02:03:44,600
it will show it to us immediately.

1336
02:03:44,600 --> 02:03:47,280
That's normally not required,

1337
02:03:47,280 --> 02:03:52,680
but that is just so that we can quickly see the output.

1338
02:03:52,680 --> 02:03:55,840
If we would run this in a production environment,

1339
02:03:55,840 --> 02:03:58,480
that wouldn't be necessary because we would be more

1340
02:03:58,480 --> 02:04:02,160
interested in getting a lot of questions done.

1341
02:04:02,160 --> 02:04:05,160
But over here, for the sake of the demo,

1342
02:04:05,160 --> 02:04:08,600
we want to get output as soon as possible,

1343
02:04:08,600 --> 02:04:11,240
so that we can see what's happening there.

1344
02:04:11,240 --> 02:04:13,720
So now it's running on a GPU node.

1345
02:04:13,720 --> 02:04:19,960
Our model is being loaded and the model is being initialized

1346
02:04:19,960 --> 02:04:22,760
and it takes a minute to do that.

1347
02:04:22,760 --> 02:04:26,880
I would also say that this Python buffer too

1348
02:04:26,880 --> 02:04:30,880
is pretty important if you need to debug.

1349
02:04:30,880 --> 02:04:31,720
Yes.

1350
02:04:31,720 --> 02:04:33,680
Because if you have some statements,

1351
02:04:33,680 --> 02:04:37,120
some print statements in and don't have that,

1352
02:04:37,120 --> 02:04:41,880
or tail the print statements to directly write out,

1353
02:04:41,880 --> 02:04:47,760
you can easily end up with code that you think is running,

1354
02:04:47,760 --> 02:04:52,560
or think is not running anymore, but actually ran.

1355
02:04:52,560 --> 02:04:55,640
Yeah. So the model run,

1356
02:04:55,640 --> 02:04:56,920
it produced the output,

1357
02:04:56,920 --> 02:04:59,600
but the output is pretty hard to read from this.

1358
02:04:59,600 --> 02:05:07,440
so it also produced the output into like a response file so in order to visualize a bit

1359
02:05:07,440 --> 02:05:19,040
better I'm loading this JSON formatter called jq and running this command to open it up in

1360
02:05:19,040 --> 02:05:25,360
the editor so we can see what sort of responses it gave. So for example what is the history of

1361
02:05:25,360 --> 02:05:30,360
of the Eiffel Tower and then it describes in lots of detail

1362
02:05:30,600 --> 02:05:32,760
the history of the Eiffel Tower.

1363
02:05:32,760 --> 02:05:36,240
And these kinds of like batch processing is very important

1364
02:05:36,240 --> 02:05:40,800
when in our case, we had,

1365
02:05:40,800 --> 02:05:43,200
I'm not certain how many prompts we have here,

1366
02:05:43,200 --> 02:05:45,640
maybe a hundred, maybe a few hundred,

1367
02:05:45,640 --> 02:05:50,640
but like if we want to test out these AI models

1368
02:05:51,280 --> 02:05:54,600
with thousands and thousands of different prompts,

1369
02:05:54,600 --> 02:06:00,280
It could get pretty expensive if you want to use, let's say, OpenAI's models.

1370
02:06:00,520 --> 02:06:07,960
Or maybe you want to test out how different models behave, what sort of output they produce.

1371
02:06:08,040 --> 02:06:09,800
Or maybe you want to try different things.

1372
02:06:09,840 --> 02:06:21,880
For these, it might be a lot cheaper and a lot easier to do this kind of batch processing in the compute cluster compared to, let's say, using an already existing JATCPT.

1373
02:06:21,880 --> 02:06:26,880
But those are also good ways of doing a research, of course.

1374
02:06:26,880 --> 02:06:28,880
This is only one way of doing research.

1375
02:06:28,880 --> 02:06:37,880
But if you need to process a huge bunch of these queries, yes, this is one way of doing that.

1376
02:06:37,880 --> 02:06:44,360
So but these kind of stuff you will be able or hopefully you will be able to do

1377
02:06:45,000 --> 02:06:51,480
after this course or you will know how you should get started on working these kinds of examples.

1378
02:06:57,800 --> 02:07:04,040
But we like there are many questions already in the in the chat about like many of the concepts

1379
02:07:04,040 --> 02:07:11,000
we introduced here. And don't worry, like we'll go through the concepts in like better detail

1380
02:07:11,000 --> 02:07:20,040
or in more detail like during the next upcoming two days. We won't like go through them in this

1381
02:07:20,040 --> 02:07:25,080
one half an hour session and expect that you would need to like learn everything from this.

1382
02:07:25,080 --> 02:07:31,720
This was just a demo. This is just the preview to know what kind of things you might learn.

1383
02:07:34,040 --> 02:07:37,440
And really to show the point that what we're learning

1384
02:07:37,440 --> 02:07:40,460
the next few days, we're not doing something ourselves,

1385
02:07:40,460 --> 02:07:43,000
but we're telling a computer how to do it.

1386
02:07:43,000 --> 02:07:46,200
And thus we can tell the computer to do it 10 times

1387
02:07:46,200 --> 02:07:48,380
or a hundred times for us automatically.

1388
02:07:50,480 --> 02:07:51,320
Okay.

1389
02:07:53,000 --> 02:07:54,840
With that being said, it's a break time.

1390
02:07:54,840 --> 02:07:59,420
So after the break, we begin,

1391
02:07:59,420 --> 02:08:02,440
we do a practice connecting to the cluster.

1392
02:08:04,040 --> 02:08:06,040
Let's see you then.

1393
02:08:08,040 --> 02:08:09,040
Bye.

1394
02:08:10,040 --> 02:08:11,040
Bye.

1395
02:08:11,040 --> 02:08:12,040
Bye.

1396
02:08:34,040 --> 02:08:36,100
you

1397
02:09:04,040 --> 02:09:06,100
you

1398
02:09:34,040 --> 02:09:36,100
you

1399
02:10:04,040 --> 02:10:06,100
you

1400
02:10:34,040 --> 02:10:36,100
you

1401
02:11:04,040 --> 02:11:06,100
you

1402
02:11:34,040 --> 02:11:36,100
you

1403
02:12:04,040 --> 02:12:06,100
you

1404
02:12:34,040 --> 02:12:36,100
you

1405
02:13:04,040 --> 02:13:06,100
you

1406
02:13:34,040 --> 02:13:36,100
you

1407
02:14:04,040 --> 02:14:06,100
you

1408
02:14:34,040 --> 02:14:36,100
you

1409
02:15:04,040 --> 02:15:06,100
you

1410
02:15:34,040 --> 02:15:36,100
you

1411
02:16:04,040 --> 02:16:06,100
you

1412
02:16:34,040 --> 02:16:36,100
you

1413
02:17:04,040 --> 02:17:06,100
you

1414
02:17:34,040 --> 02:17:36,100
you

1415
02:18:04,040 --> 02:18:06,100
you

1416
02:18:34,040 --> 02:18:45,920
And welcome back.

1417
02:18:45,920 --> 02:18:53,720
So now we are essentially at the next stage and we actually want to connect to our clusters.

1418
02:18:53,720 --> 02:18:59,280
The documents or documentation that we have is mainly for Alto but conceptually it's the

1419
02:18:59,280 --> 02:19:02,920
same for any other cluster.

1420
02:19:02,920 --> 02:19:10,280
are plenty of different ways how you can connect to the clusters and we will talk about two of them.

1421
02:19:10,920 --> 02:19:15,800
Essentially we will talk about an SSH connection and we will show a bit of the

1422
02:19:16,840 --> 02:19:19,560
on-demand that [name] has already showed in the last session.

1423
02:19:24,200 --> 02:19:29,640
So if I scroll down a bit in the materials there's a long list here but some will exist on your

1424
02:19:29,640 --> 02:19:35,080
cluster and some will not. All of them exist on Aalto, but they show the two main things, I guess.

1425
02:19:35,880 --> 02:19:42,440
We will, for demonstration purposes, assume that you have direct internet access to your cluster.

1426
02:19:42,440 --> 02:19:48,360
That means if you are on Aalto, you need to be on the virtual private network because the

1427
02:19:48,360 --> 02:20:00,220
Sorry, because the Triton cluster is not directly accessible from the internet except the open

1428
02:20:00,220 --> 02:20:03,720
on demand approach.

1429
02:20:03,720 --> 02:20:12,760
So if you want to follow and want to type along, you will need to be on the VPN.

1430
02:20:12,760 --> 02:20:20,120
the question came up before what's the difference between the login node and the compute nodes.

1431
02:20:20,760 --> 02:20:28,280
I think this image shows it quite well. So the login node is the element that's connected to

1432
02:20:28,280 --> 02:20:37,000
the net. In this case to the ALTA network on Lumi or other CSC machines it's directly connected to

1433
02:20:37,000 --> 02:20:44,680
the internet and this machine is essentially your entry point to the cluster this is the machine

1434
02:20:44,680 --> 02:20:52,360
where you submit jobs where you get where you put things uh onto onto the cluster or tell the

1435
02:20:52,360 --> 02:21:02,520
cluster okay i want this to be computed um in general why if you want to connect to the cluster

1436
02:21:02,520 --> 02:21:06,520
the first thing you have to do is you have to get an account i assume that all of the all of

1437
02:21:06,520 --> 02:21:10,000
of you have done that for your respective clusters.

1438
02:21:10,000 --> 02:21:14,920
And we will first go through the SSH connection,

1439
02:21:14,920 --> 02:21:18,960
and [name] will demonstrate that.

1440
02:21:18,960 --> 02:21:24,520
OK, so just to be sure, I'll just say again.

1441
02:21:24,520 --> 02:21:30,200
So I'm connected to the, I mean, the Alta network through the VPN.

1442
02:21:30,200 --> 02:21:33,760
[name]'s, there's notes that [name]'s voice is much louder.

1443
02:21:36,520 --> 02:21:49,240
Okay, well, the only easy way I can access that is from here, so just a moment.

1444
02:21:58,600 --> 02:22:04,280
Okay, does that change the volume?

1445
02:22:04,280 --> 02:22:09,320
[name], can you say something? Does it change it?

1446
02:22:11,640 --> 02:22:13,080
I hope it changed our list.

1447
02:22:17,880 --> 02:22:19,640
Okay, well.

1448
02:22:22,760 --> 02:22:26,760
I guess we can, we should move on. Yeah, okay, sounds good.

1449
02:22:27,480 --> 02:22:32,200
Okay, so I have a terminal open here and yeah, I am on the Alta network.

1450
02:22:32,200 --> 02:22:50,480
work. That's important. So what do I do? I will use a standard method. I have some setup

1451
02:22:50,480 --> 02:22:56,760
here that would make it – I could type a significantly shorter command, but I will

1452
02:22:56,760 --> 02:23:01,820
try to stick to whatever, something that works on whatever system you're on.

1453
02:23:01,820 --> 02:23:07,880
So the command is ssh.

1454
02:23:07,880 --> 02:23:14,800
Actually before I do that, why don't I show where I am right now.

1455
02:23:14,800 --> 02:23:20,100
So I can type the command hostname.

1456
02:23:20,100 --> 02:23:23,320
That is the name of my laptop.

1457
02:23:23,320 --> 02:23:24,320
That's another laptop.

1458
02:23:24,320 --> 02:23:34,040
have usually a name that's something like this, starting with an L and with a number.

1459
02:23:34,040 --> 02:23:41,960
I can also show my username, and that is, well, that is my username. It's, again, an

1460
02:23:41,960 --> 02:23:49,240
ALDA username, so actually you will see the same one on Triton. Maybe it would have been

1461
02:23:49,240 --> 02:23:54,080
more interesting to see it change, but, well, if you're going from an ALDA machine, you

1462
02:23:54,080 --> 02:23:55,560
always have the same username.

1463
02:23:55,560 --> 02:24:02,600
Okay. So I am on this machine and now I will type the command.

1464
02:24:02,600 --> 02:24:09,320
So username, add,

1465
02:24:09,320 --> 02:24:11,440
and then the name of the machine.

1466
02:24:11,440 --> 02:24:15,760
So that's triton.alto.fi.

1467
02:24:15,760 --> 02:24:18,460
The important bit here is it's

1468
02:24:18,460 --> 02:24:21,520
the username that you have on the system that you want to connect.

1469
02:24:21,520 --> 02:24:22,800
Yes.

1470
02:24:22,800 --> 02:24:25,860
And you seemingly already have set up SSH keys.

1471
02:24:26,800 --> 02:24:28,200
Yes, that is true.

1472
02:24:28,200 --> 02:24:31,480
If you, I'm on the VP,

1473
02:24:31,480 --> 02:24:33,760
right, it didn't ask for a password, correct, yes.

1474
02:24:33,760 --> 02:24:36,960
So should we demonstrate again

1475
02:24:36,960 --> 02:24:39,780
what it looks like if you haven't set it up?

1476
02:24:39,780 --> 02:24:42,080
There's not a big change.

1477
02:24:42,080 --> 02:24:44,000
The main difference is that you will be asked

1478
02:24:44,000 --> 02:24:46,640
for your password on the machine.

1479
02:24:46,640 --> 02:24:49,360
And there are actually systems like Lumi

1480
02:24:49,360 --> 02:24:52,080
where you have to have a sage keys being set up.

1481
02:24:55,140 --> 02:24:55,980
Otherwise you can't.

1482
02:24:55,980 --> 02:24:58,040
So I think the biggest difference,

1483
02:24:58,040 --> 02:24:59,240
I think that people will see,

1484
02:24:59,240 --> 02:25:01,400
well, there is that it will ask for a password.

1485
02:25:01,400 --> 02:25:03,680
It will, if it's the first time connecting

1486
02:25:03,680 --> 02:25:08,080
to a new server, so a new machine,

1487
02:25:10,040 --> 02:25:14,520
it will also ask you, it will print this key

1488
02:25:14,520 --> 02:25:21,320
That's essentially a random string of characters and it will ask you if that is the correct

1489
02:25:21,320 --> 02:25:22,320
one.

1490
02:25:22,320 --> 02:25:27,360
So if you're connecting to something for the first time, it's pretty much safe to just

1491
02:25:27,360 --> 02:25:28,480
type in yes.

1492
02:25:28,480 --> 02:25:31,440
You can check it somewhere.

1493
02:25:31,440 --> 02:25:32,440
You can check that it's correct.

1494
02:25:32,440 --> 02:25:33,440
Yeah.

1495
02:25:33,440 --> 02:25:40,760
I will put that into the document, at least for Triton.

1496
02:25:40,760 --> 02:25:43,160
So, I will go to the shared document.

1497
02:25:46,320 --> 02:25:50,200
For essentially any HPC service,

1498
02:25:50,200 --> 02:25:53,280
there will be a page where the SH key fingerprints

1499
02:25:53,280 --> 02:25:54,800
are being listed.

1500
02:25:54,800 --> 02:25:57,920
And you can check whether what's being shown to you

1501
02:25:57,920 --> 02:26:00,980
will be, or is the same as what's listed on there.

1502
02:26:02,400 --> 02:26:05,800
And if it is, then you are connecting to the correct.

1503
02:26:05,800 --> 02:26:09,640
Yeah, so this, having this key on the system

1504
02:26:09,640 --> 02:26:14,640
essentially proves that it is the right machine.

1505
02:26:16,680 --> 02:26:20,120
Nobody's trying to fake Triton.

1506
02:26:20,120 --> 02:26:22,980
You are actually in the actual correct Triton machine.

1507
02:26:24,320 --> 02:26:25,520
The main thing though is,

1508
02:26:25,520 --> 02:26:28,020
because when you're connecting for the first time,

1509
02:26:29,480 --> 02:26:31,120
it will just send it to you

1510
02:26:31,120 --> 02:26:33,580
and your machine has nothing to compare it to.

1511
02:26:34,760 --> 02:26:37,040
So it will ask you to accept it.

1512
02:26:37,040 --> 02:26:39,320
From then on, if it ever changes,

1513
02:26:39,320 --> 02:26:42,680
your machine will either just refuse to connect,

1514
02:26:42,680 --> 02:26:48,840
or it will at least ask you to check what's going on.

1515
02:26:48,840 --> 02:26:51,920
And it refuses the connection and tells you,

1516
02:26:51,920 --> 02:26:54,800
yeah, you can remove the old key there.

1517
02:26:54,800 --> 02:26:57,160
But that's the point where checking

1518
02:26:57,160 --> 02:26:59,840
whether the keys have actually changed makes sense.

1519
02:26:59,840 --> 02:27:00,680
Yes.

1520
02:27:00,680 --> 02:27:05,440
So if the key changes, it's either something really drastic

1521
02:27:05,440 --> 02:27:08,040
has happened, like we have a new version of Triton

1522
02:27:08,040 --> 02:27:13,880
something. It's a completely new machine or someone is actually doing an attack and trying

1523
02:27:13,880 --> 02:27:22,360
to get you to lock into the wrong system. So if it complains about this, it is a good thing to check

1524
02:27:23,560 --> 02:27:33,000
but usually it doesn't. But essentially this is how you connect via SSH. Yes. There's really

1525
02:27:33,000 --> 02:27:41,720
not much more to it. Actually, now in the prompt you do have the name of the machine. It's login4.

1526
02:27:42,280 --> 02:27:50,360
You do have my username. We can type hostname and see. It's login4.try.alta.fi and

1527
02:27:53,480 --> 02:27:59,880
who am I again? It's the same as before unfortunately, but well that is my username on Alta.

1528
02:27:59,880 --> 02:28:04,880
Okay, well, are we going to do anything more here?

1529
02:28:04,880 --> 02:28:06,880
I guess not much.

1530
02:28:06,880 --> 02:28:13,880
We will, of course, be using the machine much more in the next two days.

1531
02:28:13,880 --> 02:28:15,880
Yeah.

1532
02:28:15,880 --> 02:28:17,880
Okay.

1533
02:28:17,880 --> 02:28:22,880
Okay, then for the on-demand, which...

1534
02:28:22,880 --> 02:28:25,880
So this is in the browser.

1535
02:28:25,880 --> 02:28:33,720
Yeah, this is a way that is quite convenient as well, depending on what you want to do.

1536
02:28:35,400 --> 02:28:40,120
So essentially, you go to the page that [name] had shown earlier, which is on-demand.

1537
02:28:41,240 --> 02:28:45,400
Yes, so there is a, well, first of all,

1538
02:28:48,360 --> 02:28:50,760
there's instructions for connecting with SSH.

1539
02:28:50,760 --> 02:28:55,760
And then there is a link to ondemand.triton.aldo.fi.

1540
02:28:55,760 --> 02:28:58,760
It's relatively easy to remember or bookmark.

1541
02:28:58,760 --> 02:29:01,760
Let's go there.

1542
02:29:01,760 --> 02:29:06,760
I didn't actually want to close the materials, so I'll open it back up.

1543
02:29:06,760 --> 02:29:12,760
Okay, so this is what the Triton Open On Demand looks like.

1544
02:29:12,760 --> 02:29:14,760
I'm already signed in.

1545
02:29:14,760 --> 02:29:16,760
I'm already logged in.

1546
02:29:16,760 --> 02:29:19,760
It will ask you to log in with your Aldo credentials.

1547
02:29:19,760 --> 02:29:22,760
which you have seen many times already.

1548
02:29:22,760 --> 02:29:27,760
It's using a standard multi-factor authentication for that.

1549
02:29:27,760 --> 02:29:32,760
So, in here you have multiple different things that you can do.

1550
02:29:32,760 --> 02:29:37,760
One thing, or the most convenient thing to use is the Triton Shell access,

1551
02:29:37,760 --> 02:29:40,760
which is essentially another...

1552
02:29:40,760 --> 02:29:45,760
Shell, this will do exactly the same thing as SSH, except in the browser.

1553
02:29:45,760 --> 02:29:46,260
browser.

1554
02:29:46,260 --> 02:29:47,460
Except in the browser.

1555
02:29:47,460 --> 02:29:53,080
So you don't even need to type in any passwords

1556
02:29:53,080 --> 02:29:55,180
because it already has your credentials.

1557
02:29:55,180 --> 02:29:58,340
So that's kind of convenient if you just

1558
02:29:58,340 --> 02:30:03,660
want to throw in a few commands and you haven't set up

1559
02:30:03,660 --> 02:30:06,460
the command line in more detail.

1560
02:30:06,460 --> 02:30:08,180
And this works from outside Aalto.

1561
02:30:08,180 --> 02:30:11,700
But you do need to log in in the browser

1562
02:30:11,700 --> 02:30:13,500
with the two-factor authentication.

1563
02:30:13,500 --> 02:30:16,000
Yep.

1564
02:30:16,000 --> 02:30:22,260
The second thing is something that [name] has already shown.

1565
02:30:22,260 --> 02:30:24,100
Essentially, the Triton desktop.

1566
02:30:24,100 --> 02:30:26,820
This is for any graphical applications.

1567
02:30:26,820 --> 02:30:32,220
It could also be if you have some software that

1568
02:30:32,220 --> 02:30:34,380
has a simple graphical installer,

1569
02:30:34,380 --> 02:30:36,300
you could essentially just request the session

1570
02:30:36,300 --> 02:30:40,060
and run it there and see if it installs

1571
02:30:40,060 --> 02:30:43,260
or if it's missing things.

1572
02:30:43,260 --> 02:30:47,300
If it installs and it's a graphical tool,

1573
02:30:47,300 --> 02:30:52,900
you might encounter some issues running things later on

1574
02:30:52,900 --> 02:30:54,780
if you're not running it via Triton desktop,

1575
02:30:54,780 --> 02:30:58,380
because the desktop does load a couple of libraries that

1576
02:30:58,380 --> 02:31:00,980
are only available on some of the nodes.

1577
02:31:00,980 --> 02:31:04,300
Because as mentioned earlier, we want

1578
02:31:04,300 --> 02:31:10,580
to keep the nodes themselves as nimble as possible

1579
02:31:10,580 --> 02:31:12,460
so that they are not wasting resources

1580
02:31:12,460 --> 02:31:15,220
and there are only a limited amount of things now.

1581
02:31:15,220 --> 02:31:18,180
So I have access now, so I can click through here.

1582
02:31:20,900 --> 02:31:24,500
There are, well, one or two things

1583
02:31:24,500 --> 02:31:26,500
that we might want to show.

1584
02:31:26,500 --> 02:31:30,900
So if you work with Chrome, Chrome

1585
02:31:30,900 --> 02:31:38,580
has the option to share the clipboard with the browser,

1586
02:31:38,580 --> 02:31:42,260
which is quite convenient.

1587
02:31:42,260 --> 02:31:44,780
If you have a browser that doesn't support that,

1588
02:31:44,780 --> 02:31:47,340
you have this thing on the side where you also

1589
02:31:47,340 --> 02:31:48,540
have a clipboard.

1590
02:31:48,540 --> 02:31:51,980
I'm going to copy the address from here,

1591
02:31:51,980 --> 02:31:56,260
so that it should now be on the clipboard.

1592
02:31:56,260 --> 02:31:59,020
And indeed, because I am on Chrome,

1593
02:31:59,020 --> 02:32:00,660
it is here on the clipboard.

1594
02:32:00,660 --> 02:32:03,980
But if it's not, you can paste it in,

1595
02:32:03,980 --> 02:32:11,540
and then you have it in a clipboard of this remote system,

1596
02:32:11,540 --> 02:32:13,680
this Triton session.

1597
02:32:13,680 --> 02:32:17,980
Might be a convenient thing if you, as I said, want to install some software and have a license

1598
02:32:17,980 --> 02:32:25,100
key or something like that, you can essentially copy-paste that via this method.

1599
02:32:25,100 --> 02:32:35,300
Otherwise, if you're used to the Linux desktop environments, this is very familiar.

1600
02:32:35,300 --> 02:32:39,740
And in general, it's of course very similar to any desktop environment.

1601
02:32:39,740 --> 02:32:44,620
I can also open a terminal from here or run any other software.

1602
02:32:44,620 --> 02:32:49,660
Of course, running a terminal from here is not necessarily the easiest way of accessing

1603
02:32:49,660 --> 02:32:53,380
a terminal in Triton.

1604
02:32:53,380 --> 02:33:00,340
Now I'm actually on a compute node, which is an interesting difference to the previous

1605
02:33:00,340 --> 02:33:01,340
one.

1606
02:33:01,340 --> 02:33:02,340
Yeah.

1607
02:33:02,340 --> 02:33:04,060
So, this is not the login node.

1608
02:33:04,060 --> 02:33:07,420
We can do more stuff here.

1609
02:33:07,420 --> 02:33:12,080
You are essentially only restricted by the amount of resources that you have requested

1610
02:33:12,080 --> 02:33:16,040
when you were requesting this session.

1611
02:33:16,040 --> 02:33:24,320
And there's one third thing that I think is worth mentioning on this on-demand, and that's

1612
02:33:24,320 --> 02:33:29,520
a relatively easy way to transfer files.

1613
02:33:29,520 --> 02:33:33,880
So we go out of the desktop.

1614
02:33:33,880 --> 02:33:36,320
I don't know if logging out is very important.

1615
02:33:38,280 --> 02:33:39,960
Can I go and delete it?

1616
02:33:39,960 --> 02:33:42,680
You can go and delete it from here as well.

1617
02:33:45,400 --> 02:33:46,240
Yeah.

1618
02:33:47,160 --> 02:33:48,000
Yeah.

1619
02:33:48,000 --> 02:33:50,320
If on demand, you go to this files thing.

1620
02:33:51,320 --> 02:33:52,160
Yes.

1621
02:33:52,160 --> 02:33:55,020
[name] has access to a couple of projects, obviously.

1622
02:33:56,380 --> 02:33:58,960
Normally, you only have your home directory,

1623
02:33:58,960 --> 02:34:01,700
your work directory, and potentially additional projects

1624
02:34:01,700 --> 02:34:03,240
that you are a member of.

1625
02:34:03,880 --> 02:34:10,040
And that is a relatively convenient method to at least upload smaller files and smaller things.

1626
02:34:12,040 --> 02:34:17,480
If we are getting into the gigabyte range, I would personally recommend to use the command

1627
02:34:17,480 --> 02:34:28,280
line and things like rsync or similar. But for smaller files, using this file browsing

1628
02:34:28,840 --> 02:34:32,280
utility for uploading and downloading is absolutely fine.

1629
02:34:33,880 --> 02:34:42,760
So, that's kind of the two approaches that you can, or the approaches that you can use.

1630
02:34:42,760 --> 02:34:46,600
On the command line, you have everything that you have on a command line.

1631
02:34:46,600 --> 02:34:56,740
On OOD, you are somewhat restricted with the connection to your machine by what things

1632
02:34:56,740 --> 02:34:57,740
can be transferred.

1633
02:34:57,740 --> 02:35:01,640
And, for example, on the Triton desktop, there's no copy-paste of files.

1634
02:35:01,640 --> 02:35:02,640
Right.

1635
02:35:02,640 --> 02:35:12,400
You cannot very easily move a file between the whatever laptop you're working on and Triton

1636
02:35:13,360 --> 02:35:19,120
from there. But you can go through the files menu here and just upload it there and it will

1637
02:35:19,120 --> 02:35:22,640
show up on the Triton desktop in the folder that you placed it in.

1638
02:35:23,360 --> 02:35:28,080
So there are also several applications that are pre-installed here.

1639
02:35:28,080 --> 02:35:37,640
So, Jupyter, RStudio, Paraview, you know if you want to use them.

1640
02:35:37,640 --> 02:35:45,920
And Speech-to-Text, for example, is for translating, well, spoken word into text.

1641
02:35:45,920 --> 02:35:51,360
So that might be very useful for you.

1642
02:35:51,360 --> 02:35:54,920
That's purely auto.

1643
02:35:54,920 --> 02:36:06,220
So yeah, so different clusters will have different ways of accessing, but many of them do have

1644
02:36:06,220 --> 02:36:12,920
some sort of way, this online system, something very similar to Open On Demand.

1645
02:36:12,920 --> 02:36:19,480
Let's see, other questions.

1646
02:36:19,480 --> 02:36:25,000
So the point of the rest of this session is to get connected.

1647
02:36:25,000 --> 02:36:34,320
And if you have questions, problems, feel free to ask.

1648
02:36:34,320 --> 02:36:36,400
There is also the help Zoom session.

1649
02:36:36,400 --> 02:36:40,160
If you are signed up, you should have received a link.

1650
02:36:40,160 --> 02:36:45,800
There's one question that's already mainly answered, but what if you forget to close

1651
02:36:45,800 --> 02:36:46,880
the desktop?

1652
02:36:46,880 --> 02:36:54,200
What I would like to add to the answer that's in the HackMD is,

1653
02:36:54,200 --> 02:37:00,620
you are essentially built for your time,

1654
02:37:00,620 --> 02:37:03,200
but not in the sense that you're paying money for it.

1655
02:37:03,200 --> 02:37:05,420
You're paying in priority, i.e.,

1656
02:37:05,420 --> 02:37:10,200
how fast you get resources if the resources are in high demand.

1657
02:37:10,200 --> 02:37:14,440
If you leave something running while it could be closed,

1658
02:37:14,440 --> 02:37:20,600
you might have to wait longer for resources in the future.

1659
02:37:20,600 --> 02:37:24,520
So there is this in jobs,

1660
02:37:24,520 --> 02:37:26,500
you have this active jobs.

1661
02:37:26,500 --> 02:37:28,420
I don't have any active jobs,

1662
02:37:28,420 --> 02:37:32,900
but that's one way to find what you have running.

1663
02:37:32,900 --> 02:37:41,680
Actually, how do I get to the view where I had all of my old jobs as well?

1664
02:37:41,680 --> 02:37:47,840
Well I mean there was a big red button to delete the job. I mean that will only delete it from the

1665
02:37:47,840 --> 02:37:54,000
list but if you see a running job there, there will be a button. I think it's a big red button

1666
02:37:54,000 --> 02:38:00,720
to close that job. So if you close a tab and your desktop is still running, you can always go and

1667
02:38:00,720 --> 02:38:08,000
close the job from there. I think you can always do it. You can also find it in here if it's still

1668
02:38:08,000 --> 02:38:17,920
running. And you can close it. Anything else?

1669
02:38:20,480 --> 02:38:26,680
Okay, it's the big picture. Okay, so our goal is, so there's lots of stuff that

1670
02:38:26,680 --> 02:38:31,480
can happen here, and you saw a lot of demos. For tomorrow, what do people need

1671
02:38:31,480 --> 02:38:43,640
know how to do. Well, the main thing is to connect to the cluster in some way. So, find a way to get

1672
02:38:43,640 --> 02:38:53,880
a terminal running on Triton or on your local cluster. So, either SSH into it or find a way

1673
02:38:53,880 --> 02:39:05,080
accessing it through a browser either on-demand or similar and open a terminal from there.

1674
02:39:05,080 --> 02:39:15,560
So the main thing probably would be though to use SSH to access it and there's instructions

1675
02:39:15,560 --> 02:39:22,520
here for different operating systems that may be slightly different, a few options for

1676
02:39:22,520 --> 02:39:33,560
Windows, but Windows nowadays has just SSH built in to the command line interface, so it's actually

1677
02:39:33,560 --> 02:39:43,880
pretty much the same as on Linux and on macOS. So yeah, at least as far as I know, the main thing is

1678
02:39:43,880 --> 02:39:52,040
to get access to the cluster, get a terminal running on the cluster, and it's nice if

1679
02:39:52,040 --> 02:39:58,840
you can check out what other features your cluster has and try them out. So if you're on Triton,

1680
02:39:58,840 --> 02:40:07,160
try OpenOnDemand, see what you like there and how you like to use it. Yeah. Okay. Yeah. And

1681
02:40:07,880 --> 02:40:14,360
you don't need this after this break, but you need it by tomorrow. So there's plenty of time to

1682
02:40:14,920 --> 02:40:20,840
keep figuring stuff out and to ask for support tomorrow morning and all that.

1683
02:40:22,040 --> 02:40:39,040
And so do keep asking stuff in the notes, and we will take a break now until the next hour, so 3 o'clock finish time or 35 minutes away from now.

1684
02:40:39,040 --> 02:40:48,040
You might come back a bit early, but if you can log in, go take a break and come back. Don't sit here waiting for us.

1685
02:40:48,040 --> 02:40:49,040
Okay.

1686
02:40:49,040 --> 02:40:50,040
Okay.

1687
02:40:50,040 --> 02:40:55,040
If that's all, I'll talk to you later.

1688
02:40:55,040 --> 02:40:56,040
Bye.

1689
02:40:56,040 --> 02:40:57,040
Bye.

1690
02:40:57,040 --> 02:40:58,040
Bye.

1691
02:40:58,040 --> 02:40:59,040
Bye.

1692
02:41:18,040 --> 02:41:20,100
you

1693
02:41:48,040 --> 02:41:50,100
you

1694
02:42:18,040 --> 02:42:20,100
you

1695
02:42:48,040 --> 02:42:50,100
you

1696
02:43:18,040 --> 02:43:20,100
you

1697
02:43:48,040 --> 02:43:50,100
you

1698
02:44:18,040 --> 02:44:20,100
you

1699
02:44:48,040 --> 02:44:50,100
you

1700
02:45:18,040 --> 02:45:20,100
you

1701
02:45:48,040 --> 02:45:50,100
you

1702
02:46:18,040 --> 02:46:20,100
you

1703
02:46:48,040 --> 02:46:50,100
you

1704
02:47:18,040 --> 02:47:20,100
you

1705
02:47:48,040 --> 02:47:50,100
you

1706
02:48:18,040 --> 02:48:20,100
you

1707
02:48:48,040 --> 02:48:50,100
you

1708
02:49:18,040 --> 02:49:20,100
you

1709
02:49:48,040 --> 02:49:50,100
you

1710
02:50:18,040 --> 02:50:20,100
you

1711
02:50:48,040 --> 02:50:50,100
you

1712
02:51:18,040 --> 02:51:20,100
you

1713
02:51:48,040 --> 02:51:50,100
you

1714
02:52:18,040 --> 02:52:20,100
you

1715
02:52:48,040 --> 02:52:50,100
you

1716
02:53:18,040 --> 02:53:20,100
you

1717
02:53:48,040 --> 02:53:50,100
you

1718
02:54:18,040 --> 02:54:20,100
you

1719
02:54:48,040 --> 02:54:50,100
you

1720
02:55:18,040 --> 02:55:20,100
you

1721
02:55:48,040 --> 02:55:50,100
you

1722
02:56:18,040 --> 02:56:20,100
you

1723
02:56:48,040 --> 02:56:50,100
you

1724
02:57:18,040 --> 02:57:20,100
you

1725
02:57:48,040 --> 02:57:50,100
you

1726
02:58:18,040 --> 02:58:20,100
you

1727
02:58:48,040 --> 02:58:50,100
you

1728
02:59:18,040 --> 02:59:20,100
you

1729
02:59:48,040 --> 02:59:50,100
you

1730
03:00:18,040 --> 03:00:20,100
you

1731
03:00:48,040 --> 03:00:50,100
you

1732
03:01:18,040 --> 03:01:20,100
you

1733
03:01:48,040 --> 03:01:50,100
you

1734
03:02:18,040 --> 03:02:20,100
you

1735
03:02:48,040 --> 03:02:50,100
you

1736
03:03:18,040 --> 03:03:20,100
you

1737
03:03:48,040 --> 03:03:50,100
you

1738
03:04:18,040 --> 03:04:20,100
you

1739
03:04:48,040 --> 03:04:50,100
you

1740
03:05:18,040 --> 03:05:20,100
you

1741
03:05:48,040 --> 03:05:50,100
you

1742
03:06:18,040 --> 03:06:20,100
you

1743
03:06:48,040 --> 03:06:50,100
you

1744
03:07:18,040 --> 03:07:20,100
you

1745
03:07:48,040 --> 03:07:50,100
you

1746
03:08:18,040 --> 03:08:20,100
you

1747
03:08:48,040 --> 03:08:50,100
you

1748
03:09:18,040 --> 03:09:20,100
you

1749
03:09:48,040 --> 03:09:50,100
you

1750
03:10:18,040 --> 03:10:20,100
you

1751
03:10:48,040 --> 03:10:50,100
you

1752
03:11:18,040 --> 03:11:20,100
you

1753
03:11:48,040 --> 03:11:50,100
you

1754
03:12:18,040 --> 03:12:20,100
you

1755
03:12:48,040 --> 03:12:50,100
you

1756
03:13:18,040 --> 03:13:20,100
you

1757
03:13:48,040 --> 03:13:50,100
you

1758
03:14:18,040 --> 03:14:20,100
you

1759
03:14:48,040 --> 03:14:50,100
you

1760
03:15:18,040 --> 03:15:20,100
you

1761
03:15:48,040 --> 03:15:50,100
you

1762
03:16:18,040 --> 03:16:20,100
you

