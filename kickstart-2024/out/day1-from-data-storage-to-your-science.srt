1
00:00:00,000 --> 00:00:02,000
Bye.

2
00:00:02,000 --> 00:00:05,000
So now it's 11 past 12.

3
00:00:05,000 --> 00:00:09,000
So we are almost perfect with the timings.

4
00:00:09,000 --> 00:00:11,000
As you see in the schedule here,

5
00:00:11,000 --> 00:00:13,000
there's going to be me and [name] now

6
00:00:13,000 --> 00:00:16,000
talking about from data storage to your science.

7
00:00:16,000 --> 00:00:20,000
It's, you know, very generic talk,

8
00:00:20,000 --> 00:00:22,000
but it's good in my opinion to set the basics.

9
00:00:22,000 --> 00:00:23,000
We've been doing it.

10
00:00:23,000 --> 00:00:32,640
We've been doing this type of basic things over the years and it's good to start with

11
00:00:32,640 --> 00:00:40,000
some definition of what people mean with computing and of course, it's always good to cite some

12
00:00:40,000 --> 00:00:49,280
XKCD cartoon and this is very, very representative of the average picture of a researcher in academia

13
00:00:49,280 --> 00:00:55,040
but also in industry. Honestly, the picture is the same. So the one guy is asking, this is your

14
00:00:55,040 --> 00:01:00,160
machine learning system. Yep. You put the data into this big pile of linear algebra and then

15
00:01:00,160 --> 00:01:06,880
collect the answers on the other side. And what if the answers are wrong? You just steer the,

16
00:01:06,880 --> 00:01:13,920
you know, steer the pile until they spit, until they start looking right. So in general,

17
00:01:13,920 --> 00:01:20,240
scientific computing is about getting some data in doing some magic with the data and getting

18
00:01:20,240 --> 00:01:26,160
something out but of course in between it's not just a black box there's so many things to take

19
00:01:26,160 --> 00:01:32,080
into account which resources do you need and i'm really talking about physical you know hardware

20
00:01:32,080 --> 00:01:37,760
hardware resources or maybe what you need to be careful with the code with the environment

21
00:01:37,760 --> 00:01:40,960
so that you can, for example, reproduce what you do.

22
00:01:42,080 --> 00:01:46,560
So here we have a common scientific computing flow chart,

23
00:01:46,560 --> 00:01:49,680
which is basically what the cartoon was saying earlier.

24
00:01:49,680 --> 00:01:51,040
You get some data.

25
00:01:51,040 --> 00:01:55,360
You get some models that might come from other sources.

26
00:01:56,240 --> 00:02:01,360
You have hypotheses from the literature or whatever you learn from the literature.

27
00:02:02,400 --> 00:02:06,880
And then everything gets gathered into this process block.

28
00:02:07,760 --> 00:02:14,800
And so given the data, the models and whatever else you need to gather together, you generate

29
00:02:14,800 --> 00:02:19,840
the outputs, which could be these derivatives, so-called derivatives file, they can be figures,

30
00:02:19,840 --> 00:02:25,280
they can be tables. And then you write your papers, your posters and so on.

31
00:02:26,000 --> 00:02:32,000
So what actually happens in practice, and I know this is super basic, maybe most of you have done

32
00:02:32,000 --> 00:02:40,880
this in high school, but it's always good to set the dictionary for everyone. So there's this type

33
00:02:40,880 --> 00:02:47,200
of user layer, which is where we are right now. And as a user, you might work with some applications.

34
00:02:47,200 --> 00:02:53,920
You might use R, Matlab, Python, and so on. The applications are on top of a so-called

35
00:02:53,920 --> 00:03:00,000
operating system. It can be Linux, it can be Windows, it can be Mac, whatever. And on top

36
00:03:00,000 --> 00:03:06,960
of the operating system we have the actual hardware, the CPU central processing units where

37
00:03:06,960 --> 00:03:14,320
the actual math happens, the memory random access memory which is where you want to store your

38
00:03:14,320 --> 00:03:22,960
variables or your code for the time that the CPUs can access it, this SSD which is basically the

39
00:03:23,520 --> 00:03:29,760
a little bit slower and bigger storage for storing the data or the code or whatever else

40
00:03:30,000 --> 00:03:31,920
you need to store.

41
00:03:31,920 --> 00:03:34,920
In some hardwares, we also have the GPUs,

42
00:03:34,920 --> 00:03:38,100
which are like CPUs, but many of them

43
00:03:38,100 --> 00:03:40,120
compressed together so that things can be

44
00:03:40,120 --> 00:03:42,400
done much faster in parallel.

45
00:03:42,400 --> 00:03:46,040
And we will talk about this in the day two and three.

46
00:03:46,040 --> 00:03:48,840
But then, of course, you have connectivity,

47
00:03:48,840 --> 00:03:52,400
because sometimes you need to download data

48
00:03:52,400 --> 00:03:55,440
from external sources to your laptop,

49
00:03:55,440 --> 00:03:57,400
or maybe you're not even on your laptop,

50
00:03:57,400 --> 00:03:59,000
like we will show tomorrow.

51
00:03:59,000 --> 00:04:02,720
and the day after, because your laptop doesn't have GPUs,

52
00:04:02,720 --> 00:04:04,840
your laptop doesn't have enough RAM.

53
00:04:04,840 --> 00:04:08,760
So you are in some remote system connected via the internet

54
00:04:08,760 --> 00:04:10,560
where you can run your things.

55
00:04:10,560 --> 00:04:15,200
So here we wrote together kind of a glossary of these terms

56
00:04:15,200 --> 00:04:18,640
in case some of these are not familiar.

57
00:04:18,640 --> 00:04:22,720
But now maybe if I can ask a question to [name],

58
00:04:22,720 --> 00:04:27,480
like what I'm kind of started to describe what's a laptop

59
00:04:27,480 --> 00:04:33,240
what's the normal workflow that people might be familiar with, but how do I know how to know when

60
00:04:33,240 --> 00:04:41,160
I need to scale up to a bigger system? Maybe another question that I can add is that often

61
00:04:41,160 --> 00:04:46,280
people they move their workflow from the laptop to some HPC system and they realize that it's

62
00:04:46,280 --> 00:04:57,000
actually slower there. Why is it so? If we think about the previous diagram of the scientific

63
00:04:57,000 --> 00:05:05,160
process that you showed, it didn't show anything about how do you plan on doing this? Or which

64
00:05:05,160 --> 00:05:12,760
hardware are you planning to use for any of these things? Where do you do the processing for the raw

65
00:05:12,760 --> 00:05:20,680
data and the models and what do you do with the derivatives? It doesn't have any connection or

66
00:05:20,680 --> 00:05:26,920
necessary like definition of where do where should you run these where should you do these

67
00:05:26,920 --> 00:05:34,200
calculations and for many of us it's of course we are using the nearest machine that we have let's

68
00:05:34,200 --> 00:05:41,400
say our computer like our laptop that is provided by the department so we are using the most obvious

69
00:05:41,400 --> 00:05:50,120
resource that we have to do many of these calculations and usually that machine is for you

70
00:05:50,680 --> 00:05:58,760
that machine is dedicated for you, that is yours. And when we are then speaking about

71
00:05:58,760 --> 00:06:06,040
high-performance computing, we are talking about the process where we're pooling resources so that

72
00:06:06,040 --> 00:06:17,400
we can share the resources. Like we have usually funding from a bigger provider that gives us

73
00:06:17,400 --> 00:06:23,880
possibility of getting bigger machines and the bigger machines are then shared by multiple people.

74
00:06:23,880 --> 00:06:29,240
So some of that process, let's say we have an experiment that we want to do, but one part of

75
00:06:29,240 --> 00:06:36,120
that process of doing the analysis is so slow with our laptop that we would want to do it

76
00:06:37,480 --> 00:06:44,600
faster and for that we need to use some shared resource. But the shared resource, because of

77
00:06:44,600 --> 00:06:52,200
the nature that it's shared, we need to usually ask the correct things from it, or we need to

78
00:06:52,200 --> 00:07:01,480
reserve our correct portion of it. So if we don't reserve the correct portion of this resource,

79
00:07:01,480 --> 00:07:09,800
we might reserve less resource than what our laptop has, or we might reserve resources that

80
00:07:09,800 --> 00:07:13,280
that don't solve the correct problem

81
00:07:13,280 --> 00:07:15,520
that we are currently doing.

82
00:07:15,520 --> 00:07:20,160
So for example, we might reserve a GPU

83
00:07:20,160 --> 00:07:24,440
and think that, well, GPUs usually make stuff faster, right?

84
00:07:24,440 --> 00:07:26,360
Like that's the narrative.

85
00:07:26,360 --> 00:07:28,760
So let's just reserve a GPU

86
00:07:28,760 --> 00:07:30,560
and let's just hope that it runs faster,

87
00:07:30,560 --> 00:07:32,760
but that doesn't necessarily work like that.

88
00:07:32,760 --> 00:07:37,000
If the program you're using doesn't use GPUs,

89
00:07:37,000 --> 00:07:38,880
it doesn't necessarily work.

90
00:07:38,880 --> 00:07:46,480
So when we are switching from our laptop to the shared resources,

91
00:07:46,480 --> 00:07:50,080
we usually switch to a different location.

92
00:07:50,080 --> 00:07:57,360
So in a different location might have different things

93
00:07:57,360 --> 00:08:00,360
that make the computing faster.

94
00:08:00,360 --> 00:08:05,040
So we need to basically take advantage

95
00:08:05,040 --> 00:08:07,360
of the specialized hardware.

96
00:08:07,360 --> 00:08:12,120
So for example, our laptops might have maybe eight,

97
00:08:12,120 --> 00:08:17,120
maybe 16 CPUs, and the nodes,

98
00:08:17,160 --> 00:08:20,920
the computational servers in an HPC cluster,

99
00:08:20,920 --> 00:08:25,760
they might have up to 256 processors,

100
00:08:25,760 --> 00:08:27,920
but those processors might be slower

101
00:08:27,920 --> 00:08:30,440
than the laptop processors on average,

102
00:08:30,440 --> 00:08:32,320
but because there's so many of them,

103
00:08:32,320 --> 00:08:35,960
if your program can utilize many processors,

104
00:08:35,960 --> 00:08:49,080
program can still be faster. There's different kinds of resources in the HPC cluster that are

105
00:08:49,880 --> 00:09:00,200
specialized for certain kinds of things. When we are asking, okay, I want to run my code

106
00:09:00,200 --> 00:09:06,360
better or faster, we need to know what our program does and then ask for those resources that

107
00:09:07,800 --> 00:09:15,320
the computational cluster can provide that makes it faster. And here are a few of the

108
00:09:16,280 --> 00:09:23,640
really great questions that you can ask yourself. So, for example, do you need more CPUs? If you

109
00:09:23,640 --> 00:09:31,480
can parallelize your processing. We'll talk about this on day three. You might benefit from adding

110
00:09:31,480 --> 00:09:39,880
CPUs. Sometimes you don't. You might want one big computer or multiple small computers.

111
00:09:39,880 --> 00:09:46,840
That might also benefit you. If your code uses GPUs, like for example, deep learning stuff

112
00:09:46,840 --> 00:09:52,760
nowadays, your only option might be to run it on a computing cluster because the model might

113
00:09:52,760 --> 00:09:57,960
be so big that you cannot run it on a normal laptop or computer. Your laptop might not even

114
00:09:57,960 --> 00:10:05,960
have a GPU. Sometimes you have a lot of data that you need to process, so you need to get the data.

115
00:10:06,840 --> 00:10:13,960
You need to make certain that the data is in the correct place so that the speed is good.

116
00:10:13,960 --> 00:10:21,960
So when you're switching from your laptop to using these shared resources,

117
00:10:21,960 --> 00:10:27,960
do keep in mind that you're basically switching places.

118
00:10:27,960 --> 00:10:30,960
You're switching to a completely different environment.

119
00:10:30,960 --> 00:10:36,960
And in that environment, there are different kinds of considerations.

120
00:10:36,960 --> 00:10:42,960
It's optimized for different kinds of use cases.

121
00:10:42,960 --> 00:10:49,960
And if you don't know necessarily what use case you want to do

122
00:10:49,960 --> 00:10:52,960
or you don't know what your program is doing

123
00:10:52,960 --> 00:10:55,960
it's usually a good idea to ask help from more experienced users

124
00:10:55,960 --> 00:10:59,960
or the system administrators and so forth

125
00:10:59,960 --> 00:11:06,960
so that they can figure out which program your program benefits most from

126
00:11:06,960 --> 00:11:14,440
Yeah, one aspect that you see here at the bottom that sometimes maybe you don't even

127
00:11:14,440 --> 00:11:18,760
need like your laptop would be totally fine with the resources that you have, but it's

128
00:11:18,760 --> 00:11:22,880
the data that you're working with that cannot be taken away, that cannot be taken out from

129
00:11:22,880 --> 00:11:26,880
your share folder in the university.

130
00:11:26,880 --> 00:11:31,240
And so then these remote resources, these large computational resources can also be

131
00:11:31,240 --> 00:11:36,480
useful that the computations and the data stay in the remote, but of course you can still

132
00:11:36,480 --> 00:11:41,560
use your laptop with fake data or just for development.

133
00:11:41,560 --> 00:11:43,360
But basically, yeah, this session

134
00:11:43,360 --> 00:11:46,960
is kind of just to set the basics for everyone here.

135
00:11:46,960 --> 00:11:50,640
There's some, how do I do scientific computing?

136
00:11:50,640 --> 00:11:53,920
It's most likely you already know where to start,

137
00:11:53,920 --> 00:11:57,680
whether you're a Python, R, or whatever programming languages.

138
00:11:57,680 --> 00:12:01,040
There are good practices for each language and tools

139
00:12:01,040 --> 00:12:02,400
available.

140
00:12:02,400 --> 00:12:05,520
And you can understand already that what works on your laptop

141
00:12:05,520 --> 00:12:08,580
doesn't necessarily, it's not necessarily going to work

142
00:12:08,580 --> 00:12:11,260
on the remote cluster.

143
00:12:11,260 --> 00:12:13,740
But what we will see in the rest of the day

144
00:12:13,740 --> 00:12:17,460
and also in the next days is basically strategies to move,

145
00:12:17,460 --> 00:12:19,940
for example, the same so-called Python environment

146
00:12:19,940 --> 00:12:22,940
from your laptop to a remote location,

147
00:12:22,940 --> 00:12:25,700
or to make sure that you have the software

148
00:12:25,700 --> 00:12:29,260
that you need to run in the remote location.

149
00:12:29,260 --> 00:12:32,180
Here, there's a picture of what [name] was saying earlier

150
00:12:32,180 --> 00:12:34,200
that once you leave your laptop,

151
00:12:34,200 --> 00:12:35,840
if you think that this is the internet,

152
00:12:35,840 --> 00:12:40,120
you can basically request remote servers,

153
00:12:40,120 --> 00:12:42,700
remote so-called nodes.

154
00:12:42,700 --> 00:12:45,040
So there are other pieces of hardware,

155
00:12:45,040 --> 00:12:48,020
there are other machines that can allow you

156
00:12:48,020 --> 00:12:51,500
to do your computations, not on your laptop anymore,

157
00:12:51,500 --> 00:12:54,800
but on the remote location.

158
00:12:54,800 --> 00:12:56,760
This picture is generic enough in a sense

159
00:12:56,760 --> 00:13:00,060
that this is not specific to Aalto.

160
00:13:00,060 --> 00:13:02,320
There are some of these open services,

161
00:13:02,320 --> 00:13:06,000
There's a list here in the bottom, like MyBinder or Google

162
00:13:06,000 --> 00:13:09,040
Colab, where you can run this type of computations

163
00:13:09,040 --> 00:13:13,400
via a so-called notebook interface with a web browser.

164
00:13:13,400 --> 00:13:14,960
What we will explore more tomorrow

165
00:13:14,960 --> 00:13:19,880
is this type of HPC clusters that universities usually

166
00:13:19,880 --> 00:13:22,880
give access to, and also the national providers,

167
00:13:22,880 --> 00:13:25,240
like CSC in Finland.

168
00:13:25,240 --> 00:13:28,960
And often what you will notice, and what we will remind also

169
00:13:28,960 --> 00:13:31,800
today, is that sometimes to work with this system,

170
00:13:31,800 --> 00:13:35,680
you need to, it's not as easy as, you know,

171
00:13:35,680 --> 00:13:37,000
opening a web browser

172
00:13:37,000 --> 00:13:40,160
and using the so-called notebook interface.

173
00:13:40,160 --> 00:13:42,760
You might need to be familiar with the command line interface

174
00:13:42,760 --> 00:13:45,760
and access, for example, the login node,

175
00:13:45,760 --> 00:13:48,120
and then later request, you know,

176
00:13:48,120 --> 00:13:51,780
one of the hundreds of CPUs or GPUs and so on.

177
00:13:52,700 --> 00:13:54,680
But don't worry about this.

178
00:13:54,680 --> 00:13:59,040
We will cover this during the connection session

179
00:13:59,040 --> 00:14:00,880
in later today.

180
00:14:00,880 --> 00:14:09,280
We are perfectly on time with our schedule now because it's 12.25 and I could keep screen sharing

181
00:14:09,840 --> 00:14:18,000
and give a motivational talk with [name]. [name], are you here?

