1
00:00:00,000 --> 00:00:00,400
and give a motivational talk with [name]. [name], are you here?

2
00:00:01,280 --> 00:00:02,080
I'll jump out.

3
00:00:02,960 --> 00:00:06,880
Thank you, [name]. You will hear [name] a lot in the next.

4
00:00:09,520 --> 00:00:12,720
[name], do you want to say something briefly about yourself?

5
00:00:12,880 --> 00:00:21,580
Yeah. Hi, everyone. I work as an application specialist at CSC, IT Center for Science.

6
00:00:21,580 --> 00:00:28,900
You will hear about that also, I think, last day of this workshop more. I work there in

7
00:00:28,900 --> 00:00:35,740
user support, outreach, and training. And I'm also community manager of the Code Refinery

8
00:00:35,740 --> 00:00:42,580
Project, which we will be talking about now a little bit. And I also do still my PhD on

9
00:00:42,580 --> 00:00:46,980
very low part-time at Aalto University about satellite remote sensing stuff.

10
00:00:48,580 --> 00:00:54,580
Excellent. So what we wanted to cover in the next 25 minutes, and then we can have a break

11
00:00:54,580 --> 00:01:00,340
for 10 minutes to stretch our legs, is to mention the importance of reproducibility

12
00:01:00,340 --> 00:01:05,940
and open science. I don't know how many of you are familiar with the concept of reproducibility,

13
00:01:05,940 --> 00:01:11,220
but most likely I know that many of the people watching are starting their summer internship

14
00:01:11,220 --> 00:01:18,900
or starting their doctoral research career, you want, you know, to be reproducible. You want to

15
00:01:18,900 --> 00:01:23,300
start from the first day to make sure that what you've been doing today, what you've been working

16
00:01:23,300 --> 00:01:29,940
on today, you can replicate it in one month. So the materials that are linked now from this,

17
00:01:29,940 --> 00:01:35,300
from the schedule of the day, are from the so-called Code Refinery workshop. And as [name]

18
00:01:35,300 --> 00:01:40,580
has mentioned, Code Refinery is a larger workshop that covers various aspects of the so-called

19
00:01:40,580 --> 00:01:43,580
computational reproducibility.

20
00:01:43,580 --> 00:01:46,860
So in this short 25 minutes, the workshop

21
00:01:46,860 --> 00:01:50,780
is actually lasting for six days, three hours every day,

22
00:01:50,780 --> 00:01:52,340
three hours and a half.

23
00:01:52,340 --> 00:01:54,860
Here in this short slot, we just want

24
00:01:54,860 --> 00:01:59,780
to inspire you, give you a bit of a motivation of why

25
00:01:59,780 --> 00:02:02,740
reproducibility is important, and then

26
00:02:02,740 --> 00:02:05,380
how does it fit into the picture of the Code Refinery

27
00:02:05,380 --> 00:02:06,320
Workshop.

28
00:02:06,320 --> 00:02:08,740
For those who will be interested in the next Code Refinery

29
00:02:08,740 --> 00:02:15,460
workshop it is now planned in the first half of September so if you register for this course and

30
00:02:15,460 --> 00:02:19,780
you mark that you want to stay up to date you will receive further emails when the registrations are

31
00:02:19,780 --> 00:02:23,940
open. But in general when it comes to reproducibility the situation is like this so

32
00:02:23,940 --> 00:02:29,700
this is a professor with some research assistant or actually this is a doctoral researcher

33
00:02:29,700 --> 00:02:35,220
and the professors say don't worry you don't have to start from you have to start your code

34
00:02:35,220 --> 00:02:40,580
from scratch which is you know it's great you got some code from the previous postdoc or whoever

35
00:02:41,300 --> 00:02:45,620
you can reuse the software that the previous person on the project wrote several years ago

36
00:02:46,340 --> 00:02:53,060
are there instructions for how to use it i doubt it is the code commented not likely where are

37
00:02:53,060 --> 00:02:59,860
the files who knows this is going to be painful isn't it it's just a scratch so i don't know

38
00:02:59,860 --> 00:03:06,020
about you, [name], but I've seen this situation. I don't know, I still see it on a, maybe not daily

39
00:03:06,020 --> 00:03:12,180
basis, but weekly basis, which is, I mean, yeah, it's also understandable. People join the research

40
00:03:12,180 --> 00:03:18,580
project, whether they are for an internship, whether they are for those years of the doctoral

41
00:03:18,580 --> 00:03:23,860
research, and then they move on, they change university. And then if there's not a culture

42
00:03:23,860 --> 00:03:30,660
of preserving, archiving and making things reproducible and documented, this process will

43
00:03:30,660 --> 00:03:37,220
keep on staying. So we don't need now to go through the whole page but in general what you can think

44
00:03:37,860 --> 00:03:42,340
when you read a scientific article that the article is actually just the tip of the whole

45
00:03:42,340 --> 00:03:48,500
process of getting the data, collecting the data, analyzing the data, producing the statistical

46
00:03:48,500 --> 00:03:55,180
article results, summaries, tables, outputs, whatever. And so the article, sometimes with

47
00:03:55,180 --> 00:03:59,740
the article itself, it's impossible to replicate what other people are doing. So you need the

48
00:03:59,740 --> 00:04:04,380
documentation on the process, on the software, you need maybe actually access to the actual

49
00:04:04,380 --> 00:04:09,820
code or to the actual data. And sometimes even if you have the same code and the same

50
00:04:09,820 --> 00:04:14,980
data, you still get different numbers. And this is because maybe the environment, the

51
00:04:14,980 --> 00:04:18,020
libraries, the operating system, and other things

52
00:04:18,020 --> 00:04:19,700
have changed in the meantime.

53
00:04:19,700 --> 00:04:22,620
So all these parameters, all the elements you see here

54
00:04:22,620 --> 00:04:27,380
would actually be needed for achieving the reproducibility.

55
00:04:27,380 --> 00:04:30,460
So in these materials that you see linked there,

56
00:04:30,460 --> 00:04:32,660
you can browse them like this.

57
00:04:32,660 --> 00:04:37,660
We cover various aspects of the so-called, you know,

58
00:04:37,660 --> 00:04:39,700
pyramid that you just show,

59
00:04:39,700 --> 00:04:42,180
but it's nice to put it all in the context

60
00:04:42,180 --> 00:04:43,820
of the Code Refinery workshop.

61
00:04:43,820 --> 00:04:50,260
So, [name], maybe it would be better than me to give an overview of this picture.

62
00:04:50,260 --> 00:04:53,980
One, two, three, four, five, six steps.

63
00:04:53,980 --> 00:04:56,660
Do you want to briefly?

64
00:04:56,660 --> 00:05:02,340
Yes, I can do that. And here, maybe also just in addition to what [name] already mentioned.

65
00:05:02,340 --> 00:05:07,860
So we have these workshops twice a year, but we also have these lesson materials that [name] is showing right now.

66
00:05:07,860 --> 00:05:12,540
And there is a link to this in the collaborative notes as well.

67
00:05:12,540 --> 00:05:15,460
So you can also go through the materials yourself,

68
00:05:15,460 --> 00:05:17,740
see what interests you, and maybe learn

69
00:05:17,740 --> 00:05:20,460
something new related to this.

70
00:05:20,460 --> 00:05:24,420
So we have really liked this little figure here

71
00:05:24,420 --> 00:05:28,580
by Heidi Seibold, who made it about the six helpful steps

72
00:05:28,580 --> 00:05:30,820
for reproducible research.

73
00:05:30,820 --> 00:05:33,660
So it all starts already from the very beginning

74
00:05:33,660 --> 00:05:37,100
when you start your research journey.

75
00:05:37,100 --> 00:05:39,980
And you start having files.

76
00:05:39,980 --> 00:05:42,620
you start creating folders.

77
00:05:42,620 --> 00:05:47,020
And there, it already is very useful to take a step back

78
00:05:47,020 --> 00:05:50,900
and think about your naming and how you order things.

79
00:05:50,900 --> 00:05:55,140
And there is multiple guides out there

80
00:05:55,140 --> 00:06:00,060
who can give you a structure that you can follow

81
00:06:00,060 --> 00:06:01,860
that's always very useful to do.

82
00:06:01,860 --> 00:06:06,460
And that's something that this reproducible research lesson

83
00:06:06,460 --> 00:06:08,380
that we're showing here is also about.

84
00:06:08,380 --> 00:06:13,180
so we talk a little bit about different naming conventions

85
00:06:13,180 --> 00:06:14,760
that you can follow,

86
00:06:14,760 --> 00:06:18,760
different structures that you can follow, and so on.

87
00:06:18,760 --> 00:06:22,260
So in our workshop, that's day four, like it's noted here,

88
00:06:22,260 --> 00:06:25,260
but it's the first day of where it goes actually deep

89
00:06:25,260 --> 00:06:28,100
into the different tools and techniques

90
00:06:28,100 --> 00:06:29,960
that you can use for your research.

91
00:06:31,900 --> 00:06:35,120
Yeah, then this is also already step two,

92
00:06:35,120 --> 00:06:38,280
use good names for them, also for functions.

93
00:06:38,280 --> 00:06:45,400
you write your own code, you can save a lot of documentation and commenting things if you just

94
00:06:45,400 --> 00:06:53,560
have good names for your things. And that is also mentioned in our documentation lesson,

95
00:06:53,560 --> 00:07:01,160
how to document your research software, and in the modular code development lessons that we have.

96
00:07:02,440 --> 00:07:08,120
Then, I mentioned already documentation is a very important step because you might be working

97
00:07:08,120 --> 00:07:14,520
on different projects, so if you have been doing something and you had a really good reason for

98
00:07:14,520 --> 00:07:18,840
setting something up in a certain way, you might not remember that when you get back to it like

99
00:07:18,840 --> 00:07:25,240
two days later, a week later, a year later. And then also when others take a look at your codes

100
00:07:25,240 --> 00:07:32,520
or your software as a whole, it helps you to kind of keep your time free because not everyone has

101
00:07:32,520 --> 00:07:37,560
to come and run to you and ask you about like, oh how do I actually use this or why is it done

102
00:07:37,560 --> 00:07:44,680
that way. That's stupid. So you can do that by documenting your codes from the beginning.

103
00:07:45,320 --> 00:07:48,520
And there's different levels of doing that. And that's what we also talk about in this

104
00:07:48,520 --> 00:07:54,680
documentation lesson. And then the first week of the Code Refinery Workshop is all about version

105
00:07:54,680 --> 00:08:02,680
control. Why you would want to use it, what it is, what it actually is, how to use it for yourself,

106
00:08:02,680 --> 00:08:11,080
how to use it when you are collaborating with others and to understand a bit on what's behind

107
00:08:11,080 --> 00:08:15,640
different commands that you might have already used, like commands like git clone, for example,

108
00:08:17,000 --> 00:08:22,920
git push, git commit, these things. Hopefully you have heard about this before, but if not,

109
00:08:22,920 --> 00:08:29,080
then the first week of the Code Refinery Workshop introduces this on a very, how do you say,

110
00:08:29,080 --> 00:08:43,080
shallow learning curve, so you start with what you might already know and then you go deeper and deeper step by step into that you can in the end work together with others using version control.

111
00:08:43,080 --> 00:08:51,360
Then, step five here, stabilizing the computing environment and the software, that basically

112
00:08:51,360 --> 00:08:54,440
many of our lessons have in some way.

113
00:08:54,440 --> 00:08:57,280
We talk about Jupyter notebooks for doing that.

114
00:08:57,280 --> 00:09:04,260
That's a nice way of collaborating with others, but also to prototyping for yourself.

115
00:09:04,260 --> 00:09:11,960
In the reproducible research lesson, we talk about this with, what is it called, now I waste

116
00:09:11,960 --> 00:09:19,400
the word, but containers we talk about. We talk about workflows there, like how you can run

117
00:09:19,400 --> 00:09:25,320
multiple steps of your analysis pipeline, for example, automatically without having to worry

118
00:09:25,320 --> 00:09:31,880
too much about is it run in the right order? Is it run on all my files and so on? And then also

119
00:09:31,880 --> 00:09:38,600
about like, I still don't remember the word, but these computing environments that you can create

120
00:09:38,600 --> 00:09:44,600
with virtual environment, with Conda for example, you might have heard about these things before

121
00:09:44,600 --> 00:09:49,320
and what's behind that, why do you want to use them and how can you use them to make your research

122
00:09:49,320 --> 00:09:56,360
more reproducible. And then also a little bit about publishing your research outputs. So you will

123
00:09:56,360 --> 00:10:01,560
have maybe in the end of your research project you will have code, you will have data, you will have

124
00:10:01,560 --> 00:10:09,080
other documents. And those are, I don't want to say useless, but less useful for others when they

125
00:10:09,080 --> 00:10:15,720
are just lying on your own computer. And there is a few things that you have to think about then,

126
00:10:15,720 --> 00:10:22,920
like what kind of license do I want to add to my code? Do I want others to easily reuse it,

127
00:10:22,920 --> 00:10:29,560
or do I maybe not want others to reuse it? And does my university have guidelines on this?

128
00:10:29,560 --> 00:10:35,960
and these are the things that we are talking in this social coding and open software lesson.

129
00:10:39,800 --> 00:10:46,040
I believe that in my opinion these six steps are extremely useful because truly if I start a new

130
00:10:46,040 --> 00:10:54,120
project I'm really starting with the folders, with the files and as [name] has already mentioned

131
00:10:54,120 --> 00:11:00,200
all of these six steps that you see here from the you know day zero setting up the folder and

132
00:11:00,200 --> 00:11:06,280
gathering the code that you already have already some documentation some readme so-called file

133
00:11:07,560 --> 00:11:12,760
already all these materials are available I can give you a demo or help you kind of browsing

134
00:11:12,760 --> 00:11:18,840
these materials so the materials that are linked from the web page from today is this reproducible

135
00:11:18,840 --> 00:11:24,840
research and so there for example there is the section that is about organizing your project

136
00:11:25,400 --> 00:11:30,520
and here now I will not go through the teaching part but you see this is a kind of a standard

137
00:11:30,520 --> 00:11:36,920
folder structure that you can create for a new project there are you can create this manually

138
00:11:36,920 --> 00:11:42,680
or you can even there are how can I say automated way to create this type of folder structures we

139
00:11:42,680 --> 00:11:47,400
discussed this here they are linked here but the goal actually what is important when it comes to

140
00:11:47,400 --> 00:11:50,680
reproducibility is that often you're not working alone.

141
00:11:50,680 --> 00:11:53,000
You maybe are working with other people,

142
00:11:53,000 --> 00:11:54,200
with other colleagues,

143
00:11:54,200 --> 00:11:57,080
so most likely you want to have a share place,

144
00:11:57,080 --> 00:12:00,120
a share project name with share convention.

145
00:12:00,120 --> 00:12:01,920
So it's very important that you actually talk

146
00:12:01,920 --> 00:12:02,760
with your peers.

147
00:12:02,760 --> 00:12:06,320
If you don't yet already have a standardized way

148
00:12:06,320 --> 00:12:10,120
of storing the data, storing the process data,

149
00:12:10,120 --> 00:12:11,920
the results, the code, and so on,

150
00:12:11,920 --> 00:12:15,840
it's now a good moment to start the discussion.

151
00:12:15,840 --> 00:12:19,840
And for example, use these pages for getting inspirations

152
00:12:19,840 --> 00:12:23,200
and already starting from the very beginning

153
00:12:23,200 --> 00:12:25,560
with reproducibility in mind.

154
00:12:25,560 --> 00:12:27,720
Another aspect that [name] touched

155
00:12:27,720 --> 00:12:31,760
was about the so-called computational steps.

156
00:12:31,760 --> 00:12:35,880
So of course, version control for those who are using Git.

157
00:12:35,880 --> 00:12:39,080
By the way, we have added in our shared notes document

158
00:12:39,080 --> 00:12:42,080
a little question to know if you're already familiar

159
00:12:42,080 --> 00:12:44,400
with Git version control or not.

160
00:12:44,400 --> 00:12:48,400
But in general, we need to also record the computational steps

161
00:12:48,400 --> 00:12:51,120
because it's very rare that you just

162
00:12:51,120 --> 00:12:54,200
have one single script that will just load the data,

163
00:12:54,200 --> 00:12:56,920
do some math, and save the outputs.

164
00:12:56,920 --> 00:12:59,760
Most likely, there's many steps to do.

165
00:12:59,760 --> 00:13:02,400
And again, this type of steps, there's

166
00:13:02,400 --> 00:13:05,520
no other way to document them except having

167
00:13:05,520 --> 00:13:09,360
humans writing what the actual steps are there.

168
00:13:09,360 --> 00:13:12,760
So in this other part of the reproducibility lesson,

169
00:13:12,760 --> 00:13:16,960
you can see some ways of how to record steps.

170
00:13:16,960 --> 00:13:18,800
There's the so-called scripts,

171
00:13:18,800 --> 00:13:21,140
where you could basically write the plot

172
00:13:21,140 --> 00:13:23,220
of all the code that you need to run.

173
00:13:23,220 --> 00:13:26,480
But in general, even have a simple so-called readme file.

174
00:13:26,480 --> 00:13:30,000
So a txt file that is living there close to the code

175
00:13:30,000 --> 00:13:32,360
that will just tell to the future user

176
00:13:32,360 --> 00:13:33,800
in one year or in five years,

177
00:13:33,800 --> 00:13:35,680
first you need to run the function

178
00:13:35,680 --> 00:13:37,880
or the Python script name like this.

179
00:13:37,880 --> 00:13:42,000
And second, you will need to run another one and so on.

180
00:13:42,000 --> 00:13:44,740
Here in this lesson, there are also some advanced things.

181
00:13:44,740 --> 00:13:47,180
This is the beauty of the code refinery materials

182
00:13:47,180 --> 00:13:49,940
that they are written as accessible as possible.

183
00:13:49,940 --> 00:13:51,460
So there's no prerequisite,

184
00:13:51,460 --> 00:13:54,980
but also the more experienced user can learn something new.

185
00:13:54,980 --> 00:13:57,340
So for example, there are workflow tools

186
00:13:57,340 --> 00:13:59,460
and SnakeMake is one of them.

187
00:13:59,460 --> 00:14:01,260
If you know what's Make,

188
00:14:01,260 --> 00:14:04,940
SnakeMake is kind of uses the same principle,

189
00:14:04,940 --> 00:14:07,940
but instead of building code like you would do with Make,

190
00:14:07,940 --> 00:14:10,580
building software, you would actually use it

191
00:14:10,580 --> 00:14:16,380
for basically writing a so-called acyclic pipeline

192
00:14:16,380 --> 00:14:19,380
to basically go from the input data

193
00:14:19,380 --> 00:14:22,940
to the actual derivatives file that you need.

194
00:14:22,940 --> 00:14:26,940
In the same lesson that we're browsing here quickly,

195
00:14:26,940 --> 00:14:30,780
then we go to the level of dependencies.

196
00:14:30,780 --> 00:14:34,940
And this is, again, another XKCD to inspire people.

197
00:14:34,940 --> 00:14:38,260
But this is truly what it is in all

198
00:14:38,260 --> 00:14:39,940
modern digital infrastructure.

199
00:14:39,940 --> 00:14:42,860
This is not just about research.

200
00:14:42,860 --> 00:14:46,460
This is about all the services that you use,

201
00:14:46,460 --> 00:14:48,980
that sometimes, if not always,

202
00:14:48,980 --> 00:14:53,980
they are based on components like this little block there.

203
00:14:53,980 --> 00:14:57,780
There is a project by some random person in Nebraska

204
00:14:57,780 --> 00:15:00,900
that has been thanklessly maintained since 2003.

205
00:15:00,900 --> 00:15:03,500
There are many, many example of this type of process.

206
00:15:03,500 --> 00:15:05,580
There's the Curl, for example,

207
00:15:05,580 --> 00:15:08,860
which is one of the most used protocol

208
00:15:08,860 --> 00:15:15,820
tool to transfer data between systems, and it used to be for many years just a random person

209
00:15:15,820 --> 00:15:20,940
somewhere, I think in Sweden, that was maintaining it. Now it's better maintained.

210
00:15:20,940 --> 00:15:25,500
But in general, this is the thing, that even though you are good at documenting your code

211
00:15:25,500 --> 00:15:32,060
and your data, and so that hopefully in five years or even yourself in one year after peer review

212
00:15:33,020 --> 00:15:37,980
to be able to rerun things, you then realize that in the meantime the Python library that you were

213
00:15:37,980 --> 00:15:43,980
using has changed, that Python 3.something had a problem and now you need to upgrade to the new

214
00:15:43,980 --> 00:15:49,740
Python and nothing works anymore. So sometimes you really need to preserve not just the code

215
00:15:49,740 --> 00:15:54,540
and the documentation and the data, but also all the dependencies, all the libraries that are

216
00:15:54,540 --> 00:16:01,500
attached. Again here, this is just a quick intro, 10 minutes, they were working together, but if

217
00:16:01,500 --> 00:16:07,360
And if you're starting a new project, it's very much important to invest in fixing the

218
00:16:07,360 --> 00:16:18,360
versions of the tools that you want to use and basically agreeing on what type of libraries

219
00:16:18,360 --> 00:16:24,260
you will use and defining these type of dependencies and so on.

220
00:16:24,260 --> 00:16:32,280
So in this lesson, for those who are familiar with the so-called CONDA, it's one way of

221
00:16:32,280 --> 00:16:38,760
taking care of Python environments where you can define all the type of dependencies that

222
00:16:38,760 --> 00:16:40,320
your code has.

223
00:16:40,320 --> 00:16:45,040
So if you are starting today a new project, it's good to have a discussion again with

224
00:16:45,040 --> 00:16:50,840
your colleagues and agree, for example, on what type of libraries do you want to use

225
00:16:50,840 --> 00:16:53,560
and what type of dependencies your project should have.

226
00:16:56,120 --> 00:17:01,440
So this is at the level of the dependencies of the software.

227
00:17:01,440 --> 00:17:03,920
Sometimes, in some cases, you really

228
00:17:03,920 --> 00:17:07,520
need to go to the highest level that you

229
00:17:07,520 --> 00:17:11,000
need to have also that the environment

230
00:17:11,000 --> 00:17:14,560
that the whole operating system is reproducible.

231
00:17:14,560 --> 00:17:17,320
We recently moved from an old operating system

232
00:17:17,320 --> 00:17:20,540
to a new operating system with our Triton cluster.

233
00:17:20,540 --> 00:17:23,020
And sometimes, most of the software

234
00:17:23,020 --> 00:17:25,100
were working in the new operating system,

235
00:17:25,100 --> 00:17:26,940
but there were some specific cases

236
00:17:26,940 --> 00:17:31,020
that were dependent on the old operating system.

237
00:17:31,020 --> 00:17:35,540
So one way to get over this type of dependency

238
00:17:35,540 --> 00:17:40,300
that is related to the actual system is to adopt containers.

239
00:17:40,300 --> 00:17:43,620
So with containers, they're basically,

240
00:17:43,620 --> 00:17:47,180
it's like not only having the libraries that you need

241
00:17:47,180 --> 00:17:48,900
and the code that you need, but it's really

242
00:17:48,900 --> 00:17:51,700
having the full image of the operating system

243
00:17:51,700 --> 00:17:53,860
where everything runs on top.

244
00:17:53,860 --> 00:17:55,540
If you remember at the beginning,

245
00:17:55,540 --> 00:17:58,140
I was talking about the operating system

246
00:17:58,140 --> 00:18:01,900
and all these other layers up to the user.

247
00:18:01,900 --> 00:18:04,060
So with the container, it's really this joke

248
00:18:04,060 --> 00:18:06,060
that it works on my machine.

249
00:18:06,060 --> 00:18:08,980
Well, then we'll ship your machine.

250
00:18:08,980 --> 00:18:11,540
And this is our Docker, which is one of these container

251
00:18:11,540 --> 00:18:13,100
technologies.

252
00:18:13,100 --> 00:18:15,260
Again here, we don't have the time

253
00:18:15,260 --> 00:18:17,180
to cover to the containers.

254
00:18:17,180 --> 00:18:20,620
But you know that if you have this type of problem,

255
00:18:20,620 --> 00:18:22,520
or if you ever had this type of need

256
00:18:22,520 --> 00:18:28,180
that you would like to move the full pipeline from one system,

257
00:18:28,180 --> 00:18:30,160
from one cluster to another, then

258
00:18:30,160 --> 00:18:33,780
it's good to invest in learning containers.

259
00:18:33,780 --> 00:18:36,900
Here, these are simple learning materials

260
00:18:36,900 --> 00:18:39,340
that you can read by yourself and test things by yourself.

261
00:18:39,340 --> 00:18:42,620
But in general, we also have more advanced courses

262
00:18:42,620 --> 00:18:45,140
for those cases.

263
00:18:45,140 --> 00:18:50,740
And this kind of covers everything from this reproducibility lesson

264
00:18:50,740 --> 00:18:54,620
and this reproducibility summary. We still have five minutes.

265
00:18:54,620 --> 00:18:58,540
I don't know if [name] is still here with me.

266
00:18:59,740 --> 00:19:07,020
But in general, the Code Refinery workshop doesn't only cover,

267
00:19:07,020 --> 00:19:10,980
even though the reproducibility is at the code of the Code Refinery workshop.

268
00:19:10,980 --> 00:19:13,940
Code Refinery is like a large also informal network.

269
00:19:13,940 --> 00:19:26,100
Let me type the address, a large informal network of basically people who are passionate

270
00:19:26,100 --> 00:19:32,420
on data science, software, open science, good practices, they join together and they discuss

271
00:19:32,420 --> 00:19:33,420
together.

272
00:19:33,420 --> 00:19:36,740
I don't know if [name], if we still have five minutes, do you want to mention the type

273
00:19:36,740 --> 00:19:40,780
of engagement that people could have with the Code Refinery, especially we are looking

274
00:19:40,780 --> 00:19:41,780
for ambassadors?

275
00:19:41,780 --> 00:19:48,780
Do you want to tell something? I can also open some of these other links if you want me to.

276
00:19:48,780 --> 00:19:55,780
So yes, maybe the first entry point into CodeRefinery is to visit one of our workshops.

277
00:19:55,780 --> 00:20:03,780
So our next workshop is coming up, like [name] already mentioned there, and it's written there September 10th to 12th and 17th to 19th.

278
00:20:03,780 --> 00:20:12,780
It's always half a day, and we'll talk about all the topics that I mentioned in this reproducible research steps.

279
00:20:12,780 --> 00:20:22,780
And then, if you get excited about this, or if you maybe are already excited about these topics that we have been talking about here now,

280
00:20:22,780 --> 00:20:29,880
So then we're already always looking for contributors to the lesson material, for example, or also

281
00:20:29,880 --> 00:20:35,760
just people in different places that will advertise the workshop to their network.

282
00:20:35,760 --> 00:20:41,160
Because that's one of the hardest things that we have to do is to actually get this message

283
00:20:41,160 --> 00:20:45,200
that these workshops exist to the people that have use of it.

284
00:20:45,200 --> 00:20:49,280
We very often get the feedback, oh, I wish I would have known this in the beginning of

285
00:20:49,280 --> 00:20:51,720
my PhD or something like this.

286
00:20:51,720 --> 00:20:56,920
You can help with that. If this is something that interests you, the best way is to sign up for our

287
00:20:56,920 --> 00:21:02,520
newsletter, then you will get a message when actually the registration opens for our workshop,

288
00:21:02,520 --> 00:21:08,280
and then you can send that forward to your network. If you like doing that kind of stuff,

289
00:21:08,280 --> 00:21:15,400
like spreading the word about CodeRefinery, maybe you go to conferences and you have talks about,

290
00:21:15,400 --> 00:21:20,440
I don't know, your own topic. If you just want to add one little slide about Code Refinery,

291
00:21:20,440 --> 00:21:28,840
just making your network aware that it exists, then becoming an ambassador is a nice way of

292
00:21:28,840 --> 00:21:37,160
supporting us and we also want to support you doing that. So if you go in the top about join

293
00:21:39,160 --> 00:21:40,520
and for individuals.

294
00:21:43,160 --> 00:21:49,160
So there are all the different ways that you can engage with the community are mentioned here and

295
00:21:49,160 --> 00:21:54,600
and if you scroll a little bit down there is this CodeRefinery Ambassador.

296
00:21:54,600 --> 00:22:00,520
So if you want to become one then let us know and that can work either via

297
00:22:00,520 --> 00:22:04,440
our contact email address which you can also find on that page

298
00:22:04,440 --> 00:22:07,480
or by joining our Zulip chat or you can also

299
00:22:07,480 --> 00:22:12,920
let us know via the collaborative document of this course for example.

300
00:22:12,920 --> 00:22:16,600
We will read that and then we will reach out to you and we will have

301
00:22:16,600 --> 00:22:22,280
meetups of the ambassadors and try to support you in any way we can. We also have stickers

302
00:22:22,280 --> 00:22:30,840
that you can distribute that always gets people interested in things. And yeah, we're very happy to

303
00:22:30,840 --> 00:22:37,800
connect with you. But yeah, also just joining as a learner. Joining in Aalto, for example,

304
00:22:37,800 --> 00:22:42,920
we will have an in-person room where you can follow the workshop all together with [name]

305
00:22:42,920 --> 00:22:48,920
and you will have [name] there answering all your questions that you might have regarding the material.

306
00:22:48,920 --> 00:22:53,920
So it's a really nice and community experience to join the workshop in Otoniemi.

307
00:22:53,920 --> 00:23:02,920
For those who are, well hopefully some of you who are listening actually were in some of the recent workshops, for example the March workshop,

308
00:23:02,920 --> 00:23:08,920
but we are all very open with our lessons and also documentation from the workshops,

309
00:23:08,920 --> 00:23:12,880
So let's say that you don't want to wait for September the 10th

310
00:23:12,880 --> 00:23:14,520
and you already want to start learning,

311
00:23:14,520 --> 00:23:16,720
you can click on the March workshop.

312
00:23:16,720 --> 00:23:19,780
And there you see the schedule.

313
00:23:19,780 --> 00:23:22,000
And for each part of the schedule,

314
00:23:22,000 --> 00:23:25,080
let's say day one, Introduction to Version Control,

315
00:23:25,080 --> 00:23:28,000
there are links to the lesson material.

316
00:23:28,000 --> 00:23:30,400
There are links to the videos, to the recordings.

317
00:23:30,400 --> 00:23:34,060
So truly, if one wanted, you could actually have,

318
00:23:34,060 --> 00:23:37,640
you could actually do the full workshop by yourself

319
00:23:37,640 --> 00:23:40,380
with just using the videos, the recordings,

320
00:23:40,380 --> 00:23:43,980
the archive materials, the archive questions,

321
00:23:43,980 --> 00:23:47,180
and all the lesson materials that are there.

322
00:23:47,180 --> 00:23:49,500
But of course, yeah, it's more fun to do it together,

323
00:23:49,500 --> 00:23:51,100
to do it with a colleague.

324
00:23:51,100 --> 00:23:52,640
Here at Aalto, we're trying to promote

325
00:23:52,640 --> 00:23:55,980
this type of hybrid room so that people can come here

326
00:23:55,980 --> 00:23:58,220
and have some cookies, fruits,

327
00:23:58,220 --> 00:24:00,220
and at the same time, watch the stream.

328
00:24:00,220 --> 00:24:01,660
The stream still happens on Twitch TV,

329
00:24:01,660 --> 00:24:04,100
so being in person is not necessary,

330
00:24:04,100 --> 00:24:06,540
especially because CodeRefinery is a Nordic network,

331
00:24:06,540 --> 00:24:09,900
So we have people streaming from Norway, from Denmark,

332
00:24:09,900 --> 00:24:12,020
from Sweden and so on.

333
00:24:12,020 --> 00:24:14,740
But then the social part is also important,

334
00:24:14,740 --> 00:24:16,700
especially during the exercise is what that can be

335
00:24:16,700 --> 00:24:20,860
some interesting questions or things like that.

336
00:24:20,860 --> 00:24:24,300
But anyway, hopefully this was motivational enough.

337
00:24:24,300 --> 00:24:26,420
Thank you so much [name] for joining us

338
00:24:26,420 --> 00:24:29,300
for this overview, very quick overview

339
00:24:29,300 --> 00:24:30,860
of the whole Code Refinery.

340
00:24:31,700 --> 00:24:32,820
Thanks for having me.

341
00:24:32,820 --> 00:24:36,460
Yes, and we are perfectly on time, it's 12.50.

342
00:24:36,460 --> 00:24:42,460
So let's quickly check if there's anything in the notes

343
00:24:42,460 --> 00:24:45,940
that should be mentioned.

344
00:24:45,940 --> 00:24:49,460
But eventually, we can get to the notes later.

345
00:24:49,460 --> 00:24:54,340
Maybe let's have the break now until 1 o'clock sharp.

346
00:24:54,340 --> 00:24:57,820
And please stretch your legs, have a glass of water,

347
00:24:57,820 --> 00:24:59,060
and see you.

348
00:24:59,060 --> 00:25:03,760
The stream will start again at 1 PM Finnish time

349
00:25:03,760 --> 00:25:06,760
and at the hour in other time zones.

350
00:25:07,800 --> 00:25:08,640
Thank you.

