1
00:00:00,000 --> 00:00:06,880
Thanks, [Name]. Let me take the screen and then we will start by saying hi and who we

2
00:00:06,880 --> 00:00:21,280
are. Just a second. Here we go. I'll keep the collaborative notes open. Hello, everybody.

3
00:00:21,280 --> 00:00:26,440
Good morning. Day three of the workshop today. We will take Git and version control to the

4
00:00:26,440 --> 00:00:35,080
next level. My name is [name], and what I like to do, I like to help researchers with

5
00:00:35,080 --> 00:00:43,520
their coding and programming and computation. I come from computational chemistry, and these

6
00:00:43,520 --> 00:00:50,320
days spend time with code refinery, with high-performance computing, support, and teaching. And I will

7
00:00:50,320 --> 00:00:57,240
be together with lots of people that you see or don't see. I will take you through the

8
00:00:57,240 --> 00:01:01,160
lesson today, but my co-instructor today is [name].

9
00:01:01,160 --> 00:01:07,600
Good morning. My name is [name]. I'm also part of the high performance computing

10
00:01:07,600 --> 00:01:13,720
group here at UIT in TromsÃ¸, Norway. And in my case, I have a background in computational

11
00:01:13,720 --> 00:01:19,480
physics. So I was doing a postdoc here at UIT before I switched over to the HPC group.

12
00:01:19,480 --> 00:01:24,160
both Rautemann and I can relate to the struggles and challenges

13
00:01:24,160 --> 00:01:27,160
that you as researchers might face for anything coding

14
00:01:27,160 --> 00:01:29,960
related. Looking forward to this seminar.

15
00:01:32,960 --> 00:01:38,200
And first of all, some, I took a lot of notes on my paper that I

16
00:01:38,200 --> 00:01:42,280
want to go through some housekeeping. So on the bottom

17
00:01:42,280 --> 00:01:47,160
of the collaborative notes, you find the link to to the lesson

18
00:01:47,160 --> 00:01:48,660
that we will go through today.

19
00:01:49,720 --> 00:01:54,120
And that's the page that is on the upper part of my screen.

20
00:01:56,400 --> 00:01:57,920
And what I recommend you to do,

21
00:01:57,920 --> 00:01:59,160
if you had the tab open,

22
00:01:59,160 --> 00:02:01,460
maybe you were curious about it yesterday,

23
00:02:02,480 --> 00:02:04,560
one thing I recommend you to do, reload the page.

24
00:02:04,560 --> 00:02:09,400
So F5, reload it, make sure you get the fresh version.

25
00:02:09,400 --> 00:02:12,240
We have been making changes to it

26
00:02:12,240 --> 00:02:13,600
until late night yesterday.

27
00:02:14,560 --> 00:02:20,160
So it's like, you know, when you take a cake out of the oven, it's still warm, it's amazing.

28
00:02:22,000 --> 00:02:25,360
Hopefully it's not undercooked and hopefully we don't get stomach ache.

29
00:02:26,560 --> 00:02:32,640
But I think we have a really nice lesson for you. We will have three exercise sessions.

30
00:02:33,280 --> 00:02:39,760
They will be longer exercise sessions than the previous days. I think we will need

31
00:02:39,760 --> 00:02:43,460
need probably at least half an hour for each exercise,

32
00:02:43,460 --> 00:02:44,900
maybe longer.

33
00:02:44,900 --> 00:02:46,180
So today it will be really important

34
00:02:46,180 --> 00:02:48,580
that you communicate back to us how it is going.

35
00:02:50,020 --> 00:02:52,700
And we thought about all the possibilities

36
00:02:52,700 --> 00:02:53,780
how people can participate,

37
00:02:53,780 --> 00:02:55,500
so in groups or on your own.

38
00:02:56,580 --> 00:02:58,140
So all of this will be possible.

39
00:03:00,580 --> 00:03:02,620
Or expect chaos.

40
00:03:02,620 --> 00:03:04,020
We expect chaos.

41
00:03:04,020 --> 00:03:06,300
This is one of the most fun parts of the workshop

42
00:03:06,300 --> 00:03:09,500
because we will all start in collaborating

43
00:03:09,500 --> 00:03:13,580
100 people together, anything can happen.

44
00:03:14,620 --> 00:03:15,600
So it will be chaotic.

45
00:03:15,600 --> 00:03:16,440
This is what we expect.

46
00:03:16,440 --> 00:03:17,700
This will be a lot of fun.

47
00:03:19,120 --> 00:03:20,420
Once we start collaborating,

48
00:03:20,420 --> 00:03:22,360
please remember code of conduct.

49
00:03:22,360 --> 00:03:25,120
I mean, we are collaborating on a repository

50
00:03:25,120 --> 00:03:26,940
that will be public.

51
00:03:28,320 --> 00:03:30,200
Let's make sure that we are all comfortable.

52
00:03:30,200 --> 00:03:33,780
Let's not, you know, commit or send pull requests

53
00:03:33,780 --> 00:03:34,940
with any weird things.

54
00:03:37,040 --> 00:03:38,400
So I wanted to say that.

55
00:03:39,500 --> 00:03:44,500
Then I wanted to say that everything today

56
00:03:44,980 --> 00:03:47,220
is possible to do on GitHub alone.

57
00:03:48,700 --> 00:03:50,780
If you don't have any editor,

58
00:03:50,780 --> 00:03:53,120
if your command line doesn't work,

59
00:03:53,120 --> 00:03:56,020
if your authentication to GitHub doesn't really work,

60
00:03:57,420 --> 00:03:58,700
it's not a problem, don't give up.

61
00:03:58,700 --> 00:04:02,860
You can do all the exercises today on GitHub alone,

62
00:04:02,860 --> 00:04:03,880
if you choose to.

63
00:04:03,880 --> 00:04:12,660
We will build on the knowledge that we got in day one and day two.

64
00:04:12,660 --> 00:04:21,180
But even if you joined only today, there will be links and you will have time to read up.

65
00:04:21,180 --> 00:04:24,740
The exercises will need some time to set up.

66
00:04:24,740 --> 00:04:27,260
We will give exercise time for that.

67
00:04:27,260 --> 00:04:33,700
I will also show you some behind the scenes of what we need to do to make these exercises

68
00:04:33,700 --> 00:04:35,580
is possible for everybody.

69
00:04:35,580 --> 00:04:37,380
So I will show you that in a moment.

70
00:04:38,980 --> 00:04:43,980
And I will now go into these, the concepts.

71
00:04:43,980 --> 00:04:45,060
Okay.

72
00:04:45,060 --> 00:04:48,900
Before we go, so someone said that [name]'s voice

73
00:04:48,900 --> 00:04:51,660
was a little bit low.

74
00:04:51,660 --> 00:04:53,840
Can you do another audio test?

75
00:04:55,780 --> 00:04:57,820
Or [name], can you say something?

76
00:04:57,820 --> 00:04:58,660
Or increase-

77
00:04:58,660 --> 00:05:00,740
Am I still too low if I speak like this?

78
00:05:00,740 --> 00:05:03,680
I can increase the input volume if that's necessary.

79
00:05:03,680 --> 00:05:10,600
I guess it probably needs to be increased some, even if it gets metallic.

80
00:05:10,600 --> 00:05:12,120
I hope it's better now.

81
00:05:12,120 --> 00:05:17,560
Sounds good to my side, not too metallic.

82
00:05:17,560 --> 00:05:18,560
Sorry about that.

83
00:05:18,560 --> 00:05:26,200
I guess what, well, okay, they say it's better, and keep commenting if it needs to be adjusted

84
00:05:26,200 --> 00:05:27,200
more later.

85
00:05:27,200 --> 00:05:28,200
Okay.

86
00:05:28,200 --> 00:05:33,320
Yeah, so it's good that this was pointed out, and sounds good, no problem at all.

87
00:05:33,320 --> 00:05:41,920
I will now navigate into concepts and this is a connection to the previous days.

88
00:05:41,920 --> 00:05:45,080
We will not go here through all the details.

89
00:05:45,080 --> 00:05:54,800
Again, what we want to do today is use all the building blocks, creating branches, creating

90
00:05:54,800 --> 00:06:00,200
commits, creating pull requests, and put them all together.

91
00:06:00,200 --> 00:06:02,160
and now we will be able to collaborate.

92
00:06:04,920 --> 00:06:07,040
We will really learn how to propose changes

93
00:06:07,040 --> 00:06:09,320
to repositories of other people.

94
00:06:10,560 --> 00:06:13,660
And we will be able to review changes contributed by others.

95
00:06:15,640 --> 00:06:20,260
And some concepts that we heard mentioned in the last days,

96
00:06:21,360 --> 00:06:24,120
and here you can browse these read up,

97
00:06:24,120 --> 00:06:25,240
like what is a repository?

98
00:06:25,240 --> 00:06:26,080
What is a commit?

99
00:06:26,080 --> 00:06:26,900
What is a branch?

100
00:06:26,900 --> 00:06:27,740
What is a tag?

101
00:06:30,200 --> 00:06:35,080
The one thing I want to show now here with [name],

102
00:06:35,080 --> 00:06:36,000
we have pictures on it,

103
00:06:36,000 --> 00:06:38,400
like what is the difference between cloning and forking?

104
00:06:38,400 --> 00:06:40,600
This is a question that came up a few times.

105
00:06:41,840 --> 00:06:44,880
And I will scroll across the text

106
00:06:44,880 --> 00:06:46,480
and go straight to the pictures.

107
00:06:48,080 --> 00:06:51,360
So those of you who prefer to do the changes

108
00:06:51,360 --> 00:06:54,640
on your computer in an editor or on the command line,

109
00:06:56,160 --> 00:06:59,640
at some point there will be a cloning step today.

110
00:07:00,200 --> 00:07:04,380
And a clone creates a full copy.

111
00:07:06,020 --> 00:07:07,540
And here we have this picture of a cloud

112
00:07:07,540 --> 00:07:11,420
because this repository is on a cloud service.

113
00:07:11,420 --> 00:07:12,740
It's somewhere on the internet

114
00:07:12,740 --> 00:07:15,200
and it contains branches and commits.

115
00:07:16,520 --> 00:07:18,160
It contains also a tag.

116
00:07:19,580 --> 00:07:23,520
And when you clone it, you copy everything.

117
00:07:25,140 --> 00:07:26,680
And something that we have seen

118
00:07:26,680 --> 00:07:29,740
in one of the exercises yesterday

119
00:07:29,740 --> 00:07:31,560
is that when we clone,

120
00:07:33,980 --> 00:07:35,280
all the branches are still there,

121
00:07:35,280 --> 00:07:38,340
but the branches get renamed.

122
00:07:40,380 --> 00:07:42,780
So there is origin slash something

123
00:07:42,780 --> 00:07:45,120
and origin is the place where we clone from.

124
00:07:45,120 --> 00:07:46,200
It's a placeholder.

125
00:07:48,220 --> 00:07:51,900
And it will typically create one local branch

126
00:07:51,900 --> 00:07:54,040
for us to work on, which is the default branch,

127
00:07:54,040 --> 00:07:56,100
which will be the main branch.

128
00:07:56,100 --> 00:07:57,980
So one thing that is missing here in this picture

129
00:07:57,980 --> 00:08:02,220
is that it will also create a local branch called main

130
00:08:03,420 --> 00:08:06,580
from the default branch on the cloud service.

131
00:08:08,580 --> 00:08:09,860
So that is cloning.

132
00:08:09,860 --> 00:08:12,380
And how does it differ from forking?

133
00:08:12,380 --> 00:08:14,740
Technically, it's very similar.

134
00:08:14,740 --> 00:08:17,420
So technically, clone and fork are implemented

135
00:08:17,420 --> 00:08:18,540
in a very similar way.

136
00:08:19,460 --> 00:08:22,620
But if I scroll down here to the other picture,

137
00:08:22,620 --> 00:08:24,780
a fork is also a copy.

138
00:08:24,780 --> 00:08:26,860
This is something we have done on Tuesday.

139
00:08:27,980 --> 00:08:30,380
And this is something we will do today again.

140
00:08:32,500 --> 00:08:36,280
That is making a full copy, but it stays on the internet.

141
00:08:37,220 --> 00:08:42,220
And it is a copy from somewhere to my own user space.

142
00:08:46,780 --> 00:08:49,520
And it could be from a place where I cannot write,

143
00:08:50,900 --> 00:08:53,020
where I'm not allowed to create new commits,

144
00:08:53,020 --> 00:08:55,460
to a place where I'm allowed to make new commits.

145
00:08:57,980 --> 00:09:02,260
This is often a starting point to make modifications

146
00:09:02,260 --> 00:09:04,620
and it's a starting point for collaboration.

147
00:09:04,620 --> 00:09:07,420
And in principle, on my fork, I can do anything I like,

148
00:09:08,980 --> 00:09:11,700
but I should always have a look at the license

149
00:09:11,700 --> 00:09:13,580
because the license will tell me what are the things

150
00:09:13,580 --> 00:09:17,300
that I'm allowed to do, expected to do.

151
00:09:17,300 --> 00:09:19,420
But if the license allows me to do things,

152
00:09:19,420 --> 00:09:21,340
I can do whatever I want on my fork.

153
00:09:21,340 --> 00:09:35,300
I'm just here taking a pause because I see questions, which is awesome.

154
00:09:35,300 --> 00:09:39,900
They are down here and I also see them on a different screen.

155
00:09:39,900 --> 00:09:45,740
Does a commit does a fork inherit the commit history and branches of the so called upstream

156
00:09:45,740 --> 00:09:46,740
repository?

157
00:09:46,740 --> 00:09:50,180
Yes, it does all the branches and all the commits.

158
00:09:50,180 --> 00:09:55,520
But after I created the fork, it will not.

159
00:09:55,520 --> 00:10:01,780
So if the left repository here then gets new commits and new branches, they don't automatically

160
00:10:01,780 --> 00:10:05,200
go into my fork.

161
00:10:05,200 --> 00:10:14,000
If I don't, if I create a fork and never touch it again, it will stay frozen in time.

162
00:10:14,000 --> 00:10:17,640
And at the time when I copied it.

163
00:10:17,640 --> 00:10:20,400
But today we will learn, how do you update your fork?

164
00:10:20,400 --> 00:10:22,160
And we will see that this is,

165
00:10:22,160 --> 00:10:23,280
this used to be more difficult.

166
00:10:23,280 --> 00:10:26,640
It became two mouse clicks,

167
00:10:26,640 --> 00:10:28,300
but we will practice that today.

168
00:10:29,200 --> 00:10:32,000
We will, we will see in an exercise

169
00:10:32,000 --> 00:10:34,260
how our fork gets out of date

170
00:10:34,260 --> 00:10:36,000
and we will learn how to update it.

171
00:10:37,720 --> 00:10:41,520
And one more mechanism that we will see today

172
00:10:41,520 --> 00:10:43,300
and we will use it to,

173
00:10:43,300 --> 00:10:52,940
We used it to create exercise repositories and the groups will use it to create their

174
00:10:52,940 --> 00:10:58,620
exercise repositories is generating from a template.

175
00:10:58,620 --> 00:11:04,140
So you can take a git repository on the left side with commits and branches and you can

176
00:11:04,140 --> 00:11:05,840
and make it a so-called template.

177
00:11:09,580 --> 00:11:12,700
And from it, you can generate new repositories.

178
00:11:14,100 --> 00:11:17,860
And if we stay in the cooking and baking analogy,

179
00:11:17,860 --> 00:11:19,500
it's like a cookie cutter.

180
00:11:19,500 --> 00:11:23,300
Like when you make, if you bake cookies,

181
00:11:23,300 --> 00:11:25,660
maybe you have like this metallic cookie cutter

182
00:11:25,660 --> 00:11:29,820
and you can then cut equally looking cookies with it.

183
00:11:29,820 --> 00:11:34,620
So then the cookie cutter will be my template

184
00:11:34,620 --> 00:11:38,760
and I can generate repositories that look the same.

185
00:11:41,380 --> 00:11:43,740
What happens when you generate a repository

186
00:11:43,740 --> 00:11:46,240
is that all the history is flattened.

187
00:11:47,300 --> 00:11:50,880
So it will flatten all the history into one commit.

188
00:11:54,620 --> 00:11:56,900
So when you, when later, when we practice,

189
00:11:56,900 --> 00:11:59,540
you will recognize that, oh, that's again,

190
00:11:59,540 --> 00:12:03,300
this repository book, sorry, the recipe book,

191
00:12:03,300 --> 00:12:04,820
but there is only one commit

192
00:12:04,820 --> 00:12:07,780
because all the history will get flattened into one commit.

193
00:12:07,780 --> 00:12:09,900
But that's fine because this will be a starting point today

194
00:12:09,900 --> 00:12:11,680
for us, and then we do all the collaboration

195
00:12:11,680 --> 00:12:14,220
and the branches on top of that.

196
00:12:19,100 --> 00:12:21,580
I will not talk about this part about importing.

197
00:12:21,580 --> 00:12:25,100
So there are even more ways to get the repository,

198
00:12:25,100 --> 00:12:26,340
to copy a repository,

199
00:12:26,340 --> 00:12:39,320
But the point I want to make, and we will experience it, so we can fork and we can clone.

200
00:12:39,320 --> 00:12:43,660
But after we have done that, these repositories don't automatically talk to each other.

201
00:12:43,660 --> 00:12:46,100
We need to actively tell them to.

202
00:12:46,100 --> 00:12:54,860
And we do that either by pulling changes or by pushing changes.

203
00:12:54,860 --> 00:12:57,900
this, so then on the command line,

204
00:12:57,900 --> 00:13:01,620
you will type git pull or git push.

205
00:13:01,620 --> 00:13:03,940
And then if you work on VS code,

206
00:13:03,940 --> 00:13:06,220
you will click on icon that says publish branch,

207
00:13:06,220 --> 00:13:09,160
but under the hood, it will then push your branch.

208
00:13:13,600 --> 00:13:16,480
So we need to actively synchronize changes.

209
00:13:18,140 --> 00:13:21,540
And all the other operations that we do

210
00:13:21,540 --> 00:13:23,440
when you work on a computer, like creating commits,

211
00:13:23,440 --> 00:13:24,880
creating branches, they are all local.

212
00:13:24,880 --> 00:13:26,860
They don't need network,

213
00:13:28,100 --> 00:13:29,420
only push, pull,

214
00:13:31,440 --> 00:13:32,280
and clone

215
00:13:33,500 --> 00:13:36,160
need travel over the network cable.

216
00:13:38,620 --> 00:13:40,420
Okay, another look at the questions.

217
00:13:45,860 --> 00:13:49,360
One question was about this flattening that I mentioned.

218
00:13:49,360 --> 00:13:51,340
Is it the same thing like squashing?

219
00:13:51,340 --> 00:13:52,260
Yeah, you could think of it.

220
00:13:52,260 --> 00:13:55,080
So all the commits are squashed into one.

221
00:13:55,080 --> 00:13:56,820
So technically it's the same thing.

222
00:13:58,620 --> 00:14:00,660
So we don't need to really understand this today.

223
00:14:00,660 --> 00:14:04,380
It's only that if you wonder why is,

224
00:14:04,380 --> 00:14:07,060
why does the exercise only contain one single commit?

225
00:14:07,060 --> 00:14:09,360
That's because we generate it from a template.

226
00:14:14,080 --> 00:14:15,980
Did I forget anything important before we move on

227
00:14:15,980 --> 00:14:17,620
and prepare you for the exercise?

228
00:14:22,260 --> 00:14:34,140
Hopefully not. So I will scroll up and go to the next episode. And I want to prepare

229
00:14:34,140 --> 00:14:43,340
you for the exercise, we will give you a lot of exercise time. Here, sorry, here collaborating

230
00:14:43,340 --> 00:14:57,140
within the same repository. There is now we want to do collaboration. There is some exercise

231
00:14:57,140 --> 00:15:03,220
preparation to be done. And depending on whether you are a team or whether you are following

232
00:15:03,220 --> 00:15:09,620
on your own, different steps are needed.

233
00:15:09,620 --> 00:15:13,420
And we, you can do that in the exercise time.

234
00:15:13,420 --> 00:15:18,380
So this will take a couple of minutes and that's okay.

235
00:15:18,380 --> 00:15:25,220
So the first part of your exercise might be to really set up this exercise repository

236
00:15:25,220 --> 00:15:29,740
and what, what your team leader will do.

237
00:15:29,740 --> 00:15:37,740
And if you don't have one yet in your team, then designate one of you to be the team leader.

238
00:15:37,740 --> 00:15:44,580
One of you will generate this exercise from the template.

239
00:15:44,580 --> 00:15:48,360
And if you are following on your own, we have done that already for you.

240
00:15:48,360 --> 00:15:54,320
But then we ask you to please tell us if you want to participate, because we need to add

241
00:15:54,320 --> 00:15:59,720
you as a collaborator.

242
00:15:59,720 --> 00:16:03,680
Once you get, so here we need to be collaborators.

243
00:16:03,680 --> 00:16:05,160
Once you get added as a collaborator,

244
00:16:05,160 --> 00:16:07,680
you need, you will get an invitation from GitHub.

245
00:16:07,680 --> 00:16:08,800
You need to accept it.

246
00:16:11,280 --> 00:16:13,640
And then the other thing we recommend to do

247
00:16:13,640 --> 00:16:16,240
is once you get added to an exercise repository

248
00:16:16,240 --> 00:16:17,640
is to unwatch it.

249
00:16:17,640 --> 00:16:19,800
Now, let me, there is a screenshot here,

250
00:16:19,800 --> 00:16:24,000
but I want to show you, I want to show you how that looks.

251
00:16:25,160 --> 00:16:27,800
So I will go into some of the,

252
00:16:27,800 --> 00:16:30,540
This will be the exercise that we will do

253
00:16:30,540 --> 00:16:35,440
with the stream participants who are not part of a group.

254
00:16:38,720 --> 00:16:41,180
And there is this button called Watch and Unwatch.

255
00:16:42,460 --> 00:16:44,320
And here you will be able to select

256
00:16:44,320 --> 00:16:47,220
what kind of notifications do you want to get.

257
00:16:47,220 --> 00:16:49,900
And by default, it might be that by default,

258
00:16:49,900 --> 00:16:50,800
you have this one.

259
00:16:52,740 --> 00:16:55,620
And then you get emails about all new issues

260
00:16:55,620 --> 00:16:58,700
and all new pull requests within the same repository.

261
00:16:58,700 --> 00:17:01,080
And maybe you don't want all these emails.

262
00:17:01,080 --> 00:17:03,400
So what I do and what I recommend you to do

263
00:17:03,400 --> 00:17:06,220
is to switch to the participating and mentions.

264
00:17:06,220 --> 00:17:08,580
It will only, you will only get email updates

265
00:17:08,580 --> 00:17:12,460
about the issues that you have opened

266
00:17:12,460 --> 00:17:14,920
and the pull requests that you have opened

267
00:17:14,920 --> 00:17:16,380
or if somebody mentions you.

268
00:17:17,780 --> 00:17:19,680
So this is what we mean by on watching.

269
00:17:23,040 --> 00:17:25,300
So there is this preparation time to be done.

270
00:17:25,620 --> 00:17:27,920
But let me give you an overview

271
00:17:27,920 --> 00:17:30,800
of what is part of this exercise.

272
00:17:30,800 --> 00:17:32,600
And we have tried to make it clear

273
00:17:32,600 --> 00:17:35,560
of what is possibly familiar,

274
00:17:37,200 --> 00:17:38,480
like cloning a repository.

275
00:17:38,480 --> 00:17:40,080
This is, we have done it before.

276
00:17:42,040 --> 00:17:44,600
Creating a branch, we have done before.

277
00:17:44,600 --> 00:17:47,820
Committing a change to a new branch

278
00:17:48,800 --> 00:17:51,000
and opening a pull request.

279
00:17:51,000 --> 00:17:53,160
Now, I know that not everybody maybe was here

280
00:17:53,160 --> 00:17:56,200
And we don't expect that you remember everything.

281
00:17:56,200 --> 00:17:57,540
So if you are unsure about these,

282
00:17:57,540 --> 00:17:59,400
you can then always jump to the previous lesson

283
00:17:59,400 --> 00:18:00,520
and have a look, how was that again?

284
00:18:00,520 --> 00:18:02,000
How did I open a pull request?

285
00:18:03,280 --> 00:18:07,000
And then we try to crystallize here, what is the new thing?

286
00:18:07,000 --> 00:18:09,480
What will be the new part in this exercise?

287
00:18:11,420 --> 00:18:14,880
We will see what is a protected branch.

288
00:18:16,100 --> 00:18:18,440
I will show you that in a second.

289
00:18:18,440 --> 00:18:21,440
We will learn how to cross-reference issues and pull requests

290
00:18:21,440 --> 00:18:28,000
And we will practice to review a pull request and even open draft pull requests.

291
00:18:28,000 --> 00:18:30,440
So these will be the new things.

292
00:18:30,440 --> 00:18:38,400
And for everything that is new, you will find screenshots and explanations below.

293
00:18:38,400 --> 00:18:42,440
So use these hints, use these solutions.

294
00:18:42,440 --> 00:18:49,240
And then here are the exercise tasks that you can do with either within a group or on

295
00:18:49,240 --> 00:18:50,080
on your own.

296
00:18:56,160 --> 00:18:58,600
Okay, and I wanted to show you a little bit

297
00:18:58,600 --> 00:19:00,020
about the behind the scenes,

298
00:19:00,020 --> 00:19:02,160
because one thing I need to do here

299
00:19:02,160 --> 00:19:04,480
before everybody starts with this exercise,

300
00:19:08,120 --> 00:19:13,120
and that you get an idea of what is,

301
00:19:15,740 --> 00:19:17,320
I will look into this one,

302
00:19:17,320 --> 00:19:19,520
centralized workflow exercise recorded.

303
00:19:21,200 --> 00:19:23,000
So you don't have to do this.

304
00:19:23,000 --> 00:19:25,280
I only want to show you what are the things

305
00:19:25,280 --> 00:19:26,480
we need to prepare here.

306
00:19:27,600 --> 00:19:28,800
There is a settings tab

307
00:19:32,120 --> 00:19:33,620
where I can control.

308
00:19:33,620 --> 00:19:37,360
So now the team leaders will need to add collaborators.

309
00:19:40,520 --> 00:19:42,200
And the collaborator in this case

310
00:19:43,200 --> 00:19:46,120
are the individual stream participants.

311
00:19:46,120 --> 00:19:48,840
And now I will change the role from read to write.

312
00:19:51,000 --> 00:19:54,140
So from now on, actually people can change the exercise,

313
00:19:54,140 --> 00:19:56,040
but please try to go step-by-step.

314
00:19:56,040 --> 00:19:58,240
So I will change that to write permissions.

315
00:20:00,600 --> 00:20:01,880
The other thing I wanted to show you

316
00:20:01,880 --> 00:20:04,880
is that we are using protected branches.

317
00:20:05,980 --> 00:20:08,280
And I do that up here, branches.

318
00:20:09,520 --> 00:20:11,140
The main branch is protected.

319
00:20:12,140 --> 00:20:13,440
What does it mean?

320
00:20:13,440 --> 00:20:14,280
Edit.

321
00:20:16,120 --> 00:20:20,120
It means that hopefully, unless I forgot something,

322
00:20:21,200 --> 00:20:23,600
nobody can commit directly to the main branch

323
00:20:23,600 --> 00:20:26,200
or push directly to the main branch

324
00:20:26,200 --> 00:20:28,480
and all changes to the main branch

325
00:20:28,480 --> 00:20:30,240
need to go through a pull request.

326
00:20:32,600 --> 00:20:33,960
So that could be an interesting setting

327
00:20:33,960 --> 00:20:36,040
also for your exercise repository.

328
00:20:38,600 --> 00:20:39,760
And I will do the same.

329
00:20:39,760 --> 00:20:43,280
I need to give write permissions also on the unrecorded one.

330
00:20:46,120 --> 00:20:51,440
Also, here I will give you write permissions so that you can soon start with the exercise

331
00:20:51,440 --> 00:20:57,120
settings, collaborators and teams.

332
00:20:57,120 --> 00:21:03,520
And now everybody can write to it.

333
00:21:03,520 --> 00:21:07,080
So these kind of steps will be the beginning of the exercise.

334
00:21:07,080 --> 00:21:09,880
Hopefully it is all clear.

335
00:21:09,880 --> 00:21:15,240
it's really important that you let us know how the exercise is going.

336
00:21:17,080 --> 00:21:20,440
So during the exercise session, please, please give us feedback.

337
00:21:21,240 --> 00:21:26,760
We, we need to give you, well, at least half an hour.

338
00:21:26,760 --> 00:21:29,880
So I would say that we will do the exercise until the full hour.

339
00:21:31,720 --> 00:21:36,200
At least we will then take a break. We might need more exercise time later.

340
00:21:36,200 --> 00:21:40,520
Here, let's collaborate.

341
00:21:40,520 --> 00:21:47,940
The goal is open a branch, create a branch, create commits, open a pull request, and then

342
00:21:47,940 --> 00:21:50,560
review somebody else's pull request.

343
00:21:50,560 --> 00:21:56,120
And let's practice to give this kind, constructive feedback.

344
00:21:56,120 --> 00:21:59,440
And then if you have time, try to create a draft pull request.

345
00:21:59,440 --> 00:22:05,000
And below, you find screenshots and also discussions, how can that be useful, and how to do these

346
00:22:05,000 --> 00:22:11,820
steps. And I will, I will practice here with the stream participants and I will also practice

347
00:22:11,820 --> 00:22:17,240
with with [name]. So we will then after the exercise after the break, we will look at

348
00:22:17,240 --> 00:22:26,340
some of these steps here on stream. Checking my checklist, but I forgot to say something

349
00:22:26,340 --> 00:22:30,820
essential.

350
00:22:30,820 --> 00:22:33,020
Will we meet on Twitch before the break?

351
00:22:33,020 --> 00:22:36,820
Yes, but just to hear the nice jingle and just to remind everybody to really take a

352
00:22:36,820 --> 00:22:41,540
break to not let the exercise not consume the break.

353
00:22:41,540 --> 00:22:47,540
So we'll be back but only very briefly.

354
00:22:47,540 --> 00:22:51,340
All good?

355
00:22:51,340 --> 00:23:00,820
If yes, then let the exercises commence, half an hour, but half an hour might not be enough.

356
00:23:00,820 --> 00:23:03,600
Don't worry, then we will give you more time later.

357
00:23:03,600 --> 00:23:06,700
Let us know how it's going.

358
00:23:06,700 --> 00:23:12,780
And we will reconvene on stream in half an hour, just to announce the break.

359
00:23:12,780 --> 00:23:18,540
Good, let's try it out.

360
00:23:18,540 --> 00:23:19,540
Let's see what happens.

361
00:23:19,540 --> 00:23:21,540
And I'm really excited about this.

362
00:23:23,320 --> 00:23:24,520
See you in half an hour,

363
00:23:24,520 --> 00:23:26,360
but see you on the notes before that.

364
00:23:27,880 --> 00:23:28,720
Bye.

365
00:23:34,840 --> 00:23:36,640
Back from the break after a nice jingle,

366
00:23:36,640 --> 00:23:37,800
welcome back everybody.

367
00:23:41,400 --> 00:23:43,440
So what I see here on top of my screen

368
00:23:43,440 --> 00:23:45,960
is this was the exercise that

369
00:23:47,560 --> 00:23:48,920
with the stream participants,

370
00:23:48,920 --> 00:23:50,480
we can see that there is activity,

371
00:23:50,480 --> 00:23:54,000
there are many branches, lots of commits.

372
00:23:54,000 --> 00:23:55,800
There are also some merges already.

373
00:23:55,800 --> 00:23:58,280
So some of these changes have emerged.

374
00:23:58,280 --> 00:23:59,380
So that's very nice.

375
00:24:02,200 --> 00:24:04,640
I can imagine that it was possibly not enough time

376
00:24:04,640 --> 00:24:06,380
before the break.

377
00:24:07,640 --> 00:24:11,600
And here I'm looking at the feedback from exercise.

378
00:24:11,600 --> 00:24:13,960
It will be really helpful if you can indicate here

379
00:24:13,960 --> 00:24:18,880
whether you are done or whether you are still in the game.

380
00:24:18,920 --> 00:24:23,920
in halfway, so I'm not sure how representative it is,

381
00:24:24,800 --> 00:24:26,040
but I'm looking at there.

382
00:24:27,740 --> 00:24:28,800
This is in the notes.

383
00:24:35,680 --> 00:24:37,480
So Modan is each of these O's,

384
00:24:37,480 --> 00:24:40,660
does it stand for like 10 people or 20 people,

385
00:24:40,660 --> 00:24:42,920
or did really only five, six people indicate?

386
00:24:45,320 --> 00:24:48,040
It's not a problem if you got stuck

387
00:24:48,040 --> 00:24:51,600
because we will, with [name] here,

388
00:24:51,600 --> 00:24:53,780
we will demonstrate the important steps.

389
00:24:55,480 --> 00:24:57,000
And in the second exercise session,

390
00:24:57,000 --> 00:25:00,620
you will stay in the same exercise repository.

391
00:25:01,680 --> 00:25:03,920
So it took a while to set up,

392
00:25:03,920 --> 00:25:05,720
but you can then either continue,

393
00:25:06,800 --> 00:25:08,800
we will do a very similar thing,

394
00:25:08,800 --> 00:25:11,960
but we will focus more now on the review part

395
00:25:14,080 --> 00:25:15,600
and the modifying part.

396
00:25:18,040 --> 00:25:28,360
Thanks, so now a few more people answered, so maybe it was okay time.

397
00:25:28,360 --> 00:25:30,340
I suggest that let's have some fun now.

398
00:25:30,340 --> 00:25:37,440
You can all watch, you will have enough time then in the next exercise, and [name] and

399
00:25:37,440 --> 00:25:39,560
me will try this.

400
00:25:39,560 --> 00:25:46,040
We will open an issue, open a pull request, and review it together.

401
00:25:46,040 --> 00:25:53,920
[name], how about you take the screen share from me and you create a pull request and

402
00:25:53,920 --> 00:25:58,920
then I take it back and I will be the reviewer and we will together review the changes.

403
00:25:58,920 --> 00:26:05,600
Sounds good. Yeah. So we're moving now to the second lesson, but as Radwan already mentioned,

404
00:26:05,600 --> 00:26:09,840
it's a smooth transition since it's basically the same thing, just that we will now focus

405
00:26:09,840 --> 00:26:14,360
a little bit more on the reviews, but I will just quickly go through the steps again that

406
00:26:14,360 --> 00:26:16,160
we also did in the previous lesson.

407
00:26:16,160 --> 00:26:17,480
So I'm now on the centralized

408
00:26:17,480 --> 00:26:19,480
workflow exercise recorded repository,

409
00:26:19,480 --> 00:26:22,600
and I will now start by creating an issue.

410
00:26:22,600 --> 00:26:26,200
So I want to add a recipe.

411
00:26:26,200 --> 00:26:31,200
So I say, add my tomato spaghetti recipe.

412
00:26:32,400 --> 00:26:33,360
And why is it called issue?

413
00:26:33,360 --> 00:26:35,720
Because it was, I think it was invented

414
00:26:35,720 --> 00:26:38,360
to keep track of problems,

415
00:26:38,360 --> 00:26:40,320
but here we don't use it to,

416
00:26:40,320 --> 00:26:42,720
or problem, we use it to communicate an idea.

417
00:26:42,720 --> 00:26:45,720
we communicate what we intend to do before we do it,

418
00:26:45,720 --> 00:26:48,160
because it gives us a chance to collect feedback.

419
00:26:49,720 --> 00:26:50,820
Exactly, yeah.

420
00:26:51,960 --> 00:26:56,360
One thing I can do here is to assign someone for this issue.

421
00:26:56,360 --> 00:26:59,440
And in this case, it's already assigned me automatically,

422
00:26:59,440 --> 00:27:00,960
but in theory, I could assign anyone.

423
00:27:00,960 --> 00:27:03,360
So I could also send another one if I would want.

424
00:27:05,040 --> 00:27:08,240
I will just send myself here.

425
00:27:08,240 --> 00:27:10,200
And how do you also,

426
00:27:10,200 --> 00:27:13,360
Can I just ask how do you use this assigning in your work?

427
00:27:13,360 --> 00:27:17,600
So I can tell that what I find sometimes useful

428
00:27:17,600 --> 00:27:21,680
is that by assigning, I communicate to other people

429
00:27:21,680 --> 00:27:23,720
that I'm working on it.

430
00:27:25,080 --> 00:27:27,440
Yes, it's very helpful if you have,

431
00:27:27,440 --> 00:27:28,360
if you're working in a team

432
00:27:28,360 --> 00:27:30,000
where there's multiple people working on the project

433
00:27:30,000 --> 00:27:33,400
and you want to indicate that you already decided

434
00:27:33,400 --> 00:27:34,280
that you will work on this

435
00:27:34,280 --> 00:27:36,520
and have already thought maybe about the problem

436
00:27:36,520 --> 00:27:38,880
so that other people don't duplicate this work

437
00:27:38,880 --> 00:27:40,580
so that they don't waste any time.

438
00:27:41,920 --> 00:27:44,520
And sometimes if you know that another person

439
00:27:44,520 --> 00:27:47,120
is an expert in a certain path

440
00:27:47,120 --> 00:27:48,680
that you want to fix up the code, for instance,

441
00:27:48,680 --> 00:27:49,560
then it might be a good idea

442
00:27:49,560 --> 00:27:51,320
to assign this person as well as it.

443
00:27:52,200 --> 00:27:55,240
Maybe for the issue, but especially for a review,

444
00:27:55,240 --> 00:27:56,720
that would be helpful.

445
00:27:56,720 --> 00:27:58,280
I can do a similar thing with labels.

446
00:27:58,280 --> 00:28:01,160
So I can say this is gonna be an enhancement,

447
00:28:01,160 --> 00:28:04,320
but if it's like, if there's a mistake in the code,

448
00:28:04,320 --> 00:28:06,400
if it's a bug, then I can indicate that here.

449
00:28:06,400 --> 00:28:08,560
So this can also be very helpful for others.

450
00:28:08,880 --> 00:28:14,800
In this case, I just choose the enhancement and I will submit this now as an issue.

451
00:28:14,800 --> 00:28:19,680
One question that we just got on the notes is, do we always have to open an issue before

452
00:28:19,680 --> 00:28:21,820
we do a change?

453
00:28:21,820 --> 00:28:26,320
You don't, but it can be good practice, but it's, strictly speaking, it's not necessary

454
00:28:26,320 --> 00:28:31,080
and for smaller things, it might be not necessary at all, in my view.

455
00:28:31,080 --> 00:28:32,080
Yeah.

456
00:28:32,080 --> 00:28:33,080
So here we want to show you the technique.

457
00:28:33,080 --> 00:28:38,720
It's more useful for bigger changes so that when the big change is ready, it doesn't come

458
00:28:38,720 --> 00:28:43,080
as a surprise to everybody. And also what you want to avoid is that after spending

459
00:28:43,080 --> 00:28:50,240
a few weeks developing something, then you don't want to hear, no, thank you, this doesn't

460
00:28:50,240 --> 00:28:54,240
fit at all. What would have been nicer is that you first communicate what you intend

461
00:28:54,240 --> 00:28:59,400
to do, you collect feedback, and then you code. So it's about avoiding surprises, but

462
00:28:59,400 --> 00:29:02,040
for very small changes, not needed.

463
00:29:02,040 --> 00:29:05,960
Yeah, but that's a good point. You always want to communicate before you spend a lot

464
00:29:05,960 --> 00:29:08,440
of time on the problem.

465
00:29:08,440 --> 00:29:09,960
I will now create a pull request,

466
00:29:09,960 --> 00:29:13,520
so I will go back to my main branch,

467
00:29:13,520 --> 00:29:15,280
and it's already showing me here

468
00:29:15,280 --> 00:29:16,840
that I already created a new branch.

469
00:29:16,840 --> 00:29:19,600
I will just quickly go to my new branch,

470
00:29:19,600 --> 00:29:24,600
where I added the recipe that I mentioned in the issue,

471
00:29:26,240 --> 00:29:29,400
and I now deliberately misspelled something,

472
00:29:29,400 --> 00:29:33,840
so I misspelled the recipe the same way

473
00:29:33,840 --> 00:29:35,340
as I, as a German native speaker,

474
00:29:35,340 --> 00:29:37,380
would have done it in primary school,

475
00:29:37,380 --> 00:29:41,020
but this is not the only problem in this new recipe.

476
00:29:41,020 --> 00:29:44,580
There's also one major mistake in the ingredients

477
00:29:44,580 --> 00:29:45,900
which would ruin the whole recipe.

478
00:29:45,900 --> 00:29:48,780
So let's see whether that other one will be able to spot it.

479
00:29:48,780 --> 00:29:49,940
Yes.

480
00:29:49,940 --> 00:29:50,780
So I will now go-

481
00:29:50,780 --> 00:29:52,980
So here we go a little bit step ahead

482
00:29:52,980 --> 00:29:55,580
because we already show you

483
00:29:55,580 --> 00:29:57,460
what people will do in the second exercise,

484
00:29:57,460 --> 00:29:58,540
but that's great.

485
00:29:58,540 --> 00:30:01,680
And in the commit message,

486
00:30:01,680 --> 00:30:02,660
so the commit message here

487
00:30:02,660 --> 00:30:04,740
was add tomato basil spaghetti recipe.

488
00:30:04,740 --> 00:30:08,480
and in the commit message you did not reference the issue.

489
00:30:08,480 --> 00:30:09,320
It's not a problem.

490
00:30:09,320 --> 00:30:10,960
So it can be done either,

491
00:30:10,960 --> 00:30:13,320
it can be done in the commit message,

492
00:30:13,320 --> 00:30:16,200
but it can also be done in the pull request,

493
00:30:16,200 --> 00:30:18,220
which I think you plan to do.

494
00:30:18,220 --> 00:30:20,400
Yes, I created this before I raised the issue,

495
00:30:20,400 --> 00:30:22,880
so therefore that wasn't possible.

496
00:30:22,880 --> 00:30:24,360
But I will now go back,

497
00:30:24,360 --> 00:30:26,120
and it will already show me,

498
00:30:26,120 --> 00:30:27,440
it will have this pop-up here

499
00:30:27,440 --> 00:30:30,200
where it suggests that I could now compare

500
00:30:31,080 --> 00:30:32,920
the differences in the code and create a pull request.

501
00:30:32,920 --> 00:30:34,000
So I will do this now.

502
00:30:34,740 --> 00:30:37,260
I'll just quickly check, okay, I'm going from this branch,

503
00:30:37,260 --> 00:30:39,800
from my new tomato spaghetti branch into the main branch.

504
00:30:39,800 --> 00:30:40,640
That's what I want to do.

505
00:30:40,640 --> 00:30:42,420
I want to add this recipe.

506
00:30:42,420 --> 00:30:43,940
And now I can assign a reviewer.

507
00:30:43,940 --> 00:30:46,660
Let's say I choose another one in this case.

508
00:30:47,700 --> 00:30:51,820
I can, again, I can choose some labels if I want.

509
00:30:54,220 --> 00:30:57,140
In this case, I think enhancement makes the most sense.

510
00:30:57,140 --> 00:31:02,140
And I could provide some more information if I wanted to,

511
00:31:02,140 --> 00:31:07,260
wanted to but in this case I think it's not strictly necessary if I scroll down

512
00:31:07,260 --> 00:31:10,900
it will also show me the added file or the differences in this case I only add

513
00:31:10,900 --> 00:31:13,700
some lines I didn't delete any but otherwise that would be shown here as

514
00:31:13,700 --> 00:31:17,980
well and let's not forget to reference the issue number before you oh yes thank

515
00:31:17,980 --> 00:31:23,180
you so I can reference it here fix like there's a number of number of keywords

516
00:31:23,180 --> 00:31:30,100
I can use and we have them in the material so it's fix or fixes close

517
00:31:30,100 --> 00:31:35,860
closes, resolve, resolves. Yeah and it shows me now which which issues I could

518
00:31:35,860 --> 00:31:39,340
reference it to and I have here issue number 19. So that was the one that I

519
00:31:39,340 --> 00:31:43,940
erased before. So I will now create a pull request and I will give the screen

520
00:31:43,940 --> 00:31:49,080
then to [Name] and then we can discuss good practices for code reviews. Yeah so

521
00:31:49,080 --> 00:31:54,700
sorry I forgot to mention one thing. Sorry. Okay I just I just quickly

522
00:31:54,700 --> 00:31:58,900
mentioned this one thing. It's good practice for when you create pull

523
00:31:58,900 --> 00:32:04,700
request to make it life easy for review as well to try to have short chunks of

524
00:32:04,700 --> 00:32:09,740
code that you want to be reviewed since the attention of the reviewer is is

525
00:32:09,740 --> 00:32:13,780
limited and for some maybe for some complicated bugs that you want to fix

526
00:32:13,780 --> 00:32:18,140
it is necessary to have like several hundreds of lines of code but if

527
00:32:18,140 --> 00:32:22,580
possible always keep it short because you want to and you can also add some

528
00:32:22,580 --> 00:32:28,300
some additional comments if you want here to some of the lines of your pull

529
00:32:28,300 --> 00:32:32,500
request if you want to communicate even more information than there is already.

530
00:32:32,740 --> 00:32:36,260
So this can be always a good idea because like, since we don't speak

531
00:32:36,260 --> 00:32:39,360
head to person to person or face to face to another person, to the reviewer,

532
00:32:39,760 --> 00:32:42,540
sometimes if you work with someone in a different time zone or in a different,

533
00:32:43,260 --> 00:32:47,660
a different university, it's always good to over communicate and not, um,

534
00:32:48,020 --> 00:32:51,340
uh, not provide too little information, but I will now create this pull request.

535
00:32:51,340 --> 00:32:52,980
Sorry about the one and I'll give the word to you.

536
00:32:53,140 --> 00:32:54,000
Oh, no, nothing to apologize.

537
00:32:54,000 --> 00:32:54,580
This was great.

538
00:32:54,660 --> 00:32:57,100
We have enough time and it's really good that we do that here.

539
00:32:57,100 --> 00:33:05,420
step-by-step. Okay, keep the screen. I will now take it from you in a second. And then

540
00:33:05,420 --> 00:33:15,820
we do the reviewing together. Good. Now I first need to find your pull request. So I

541
00:33:15,820 --> 00:33:25,060
go in pull requests and now I will review this is yours. So each pull request and each

542
00:33:25,060 --> 00:33:36,860
Each issue has a number and your pull request is the number 21, and I will now review it.

543
00:33:36,860 --> 00:33:40,540
So let's discuss what are the things that we should look at and how do you review a

544
00:33:40,540 --> 00:33:44,540
pull request.

545
00:33:44,540 --> 00:33:50,420
I have been assigned, so Kaggle requested review from me, so that will also, somewhere

546
00:33:50,420 --> 00:33:52,260
I got an email about it.

547
00:33:52,260 --> 00:33:54,460
So if I was somewhere else, I at least know.

548
00:33:55,460 --> 00:33:57,260
And then the thing that I look at,

549
00:33:57,260 --> 00:34:00,320
oh, this is about tomato basil spaghetti.

550
00:34:01,540 --> 00:34:03,240
First thing I look at is the title.

551
00:34:04,740 --> 00:34:07,980
I might also look at which branch is it going to,

552
00:34:07,980 --> 00:34:10,160
typically the default branch, it's going to main.

553
00:34:10,160 --> 00:34:11,260
This is the goal here.

554
00:34:15,280 --> 00:34:20,280
And the next thing I would look at is file changed.

555
00:34:20,280 --> 00:34:23,280
Is this also what you do, Gego, normally?

556
00:34:23,280 --> 00:34:26,280
Yes, I spend most of the time on the Files Changed tab.

557
00:34:26,280 --> 00:34:31,280
So let's look at what is in there, Files Changed.

558
00:34:31,280 --> 00:34:33,280
I would now browse it.

559
00:34:33,280 --> 00:34:38,280
I mean, overall, it looks pretty okay.

560
00:34:38,280 --> 00:34:41,280
There are some problems.

561
00:34:41,280 --> 00:34:44,280
One problem is up here.

562
00:34:44,280 --> 00:34:49,280
And I could ask Gego to fix that, so the spelling.

563
00:34:49,280 --> 00:34:55,360
I will show you that there is actually a better way and that will be part of your second exercise.

564
00:34:55,360 --> 00:34:58,320
So let's come back to that in a moment.

565
00:34:58,320 --> 00:35:00,360
There is also another problem.

566
00:35:00,360 --> 00:35:04,600
Can somebody spot it?

567
00:35:04,600 --> 00:35:09,820
It looks like there is an unhealthy amount of salt here.

568
00:35:09,820 --> 00:35:15,480
So this is something I'm...

569
00:35:15,480 --> 00:35:17,520
So how do I get feedback?

570
00:35:17,520 --> 00:35:23,600
Well, one way to give feedback, if you go back to conversation.

571
00:35:23,600 --> 00:35:27,760
We can have a discussion here, so I could give feedback here.

572
00:35:27,760 --> 00:35:32,400
And it's nice to be kind, thanks so much.

573
00:35:32,400 --> 00:35:35,280
Really nice recipe.

574
00:35:35,280 --> 00:35:38,280
But how about that salt amount?

575
00:35:38,280 --> 00:35:45,280
The salt amount, shouldn't we reduce it?

576
00:35:45,280 --> 00:35:50,280
And now if I comment, it's here, it's recorded.

577
00:35:53,640 --> 00:35:54,840
So we have a context here.

578
00:35:54,840 --> 00:35:56,240
We have a discussion thread.

579
00:35:57,880 --> 00:36:01,360
If I need to, and now we,

580
00:36:01,360 --> 00:36:03,680
us two are part of this discussion.

581
00:36:03,680 --> 00:36:07,040
Sometimes I need to involve an expert.

582
00:36:07,040 --> 00:36:07,860
So I don't know,

583
00:36:07,860 --> 00:36:09,420
but I can ask somebody else for an opinion.

584
00:36:09,420 --> 00:36:10,440
You can then mention people.

585
00:36:10,440 --> 00:36:12,360
I will now not mention somebody else,

586
00:36:12,360 --> 00:36:14,840
but let's imagine you want to ask me for,

587
00:36:14,840 --> 00:36:16,880
If somebody wants to ask me for an opinion,

588
00:36:16,880 --> 00:36:19,760
you could mention what do you think.

589
00:36:21,520 --> 00:36:23,000
So if you start this ad,

590
00:36:27,640 --> 00:36:29,580
and if this doesn't make more sense

591
00:36:29,580 --> 00:36:30,760
because I'm asking myself,

592
00:36:30,760 --> 00:36:33,600
but then I will get an email

593
00:36:33,600 --> 00:36:38,260
and you can involve other people into a conversation

594
00:36:38,260 --> 00:36:39,560
if you need their opinion.

595
00:36:40,800 --> 00:36:41,800
So I'll remove that.

596
00:36:41,800 --> 00:36:44,960
So that's one way to comment.

597
00:36:44,960 --> 00:36:47,360
The other way that might be maybe more useful

598
00:36:47,360 --> 00:36:49,720
is to, if I go back to fast changed,

599
00:36:51,120 --> 00:36:53,200
you can comment directly here.

600
00:36:53,200 --> 00:36:56,240
For instance, I can say here that by clicking on the plus,

601
00:36:56,240 --> 00:36:57,700
I can give a leave a comment.

602
00:36:58,960 --> 00:37:02,400
Not sure about the salt amount.

603
00:37:04,480 --> 00:37:05,520
Add a single comment.

604
00:37:05,520 --> 00:37:10,520
And, but on the other hand, Parmesan cheese, nice.

605
00:37:16,800 --> 00:37:17,880
I really like this.

606
00:37:20,080 --> 00:37:21,180
Add a single comment.

607
00:37:22,560 --> 00:37:25,200
Because then when I go back to the conversation,

608
00:37:27,280 --> 00:37:32,280
it's the submitter will see what line am I referring to?

609
00:37:32,280 --> 00:37:34,260
see what line am I referring to.

610
00:37:35,220 --> 00:37:36,920
They don't have to guess.

611
00:37:36,920 --> 00:37:38,420
Imagine there are 10,000 lines.

612
00:37:41,140 --> 00:37:43,540
And here I refer to this line.

613
00:37:43,540 --> 00:37:46,200
You can even refer to entire code blocks.

614
00:37:47,580 --> 00:37:48,680
So this can be useful.

615
00:37:50,300 --> 00:37:52,500
And there is, you can even go a step further

616
00:37:54,540 --> 00:37:57,220
because I could add a comment here that

617
00:37:57,220 --> 00:37:58,460
spelling is not correct.

618
00:37:58,460 --> 00:38:00,020
Can you please fix that?

619
00:38:00,020 --> 00:38:01,340
But I know how to fix this.

620
00:38:02,280 --> 00:38:09,360
There is this plus minus symbol here, add a suggestion.

621
00:38:09,360 --> 00:38:11,480
So I can add an actual suggestion.

622
00:38:11,480 --> 00:38:17,000
So if I click on the plus minus, I can edit the code directly.

623
00:38:17,000 --> 00:38:27,600
So it should be tomato, basil, spaghetti, hopefully that's correct.

624
00:38:27,600 --> 00:38:31,280
And if I now add a single comment with a suggestion,

625
00:38:31,280 --> 00:38:34,080
which can be on one line or it can be on multiple lines.

626
00:38:35,280 --> 00:38:36,680
Let's see how that will look

627
00:38:36,680 --> 00:38:38,480
when we go back to the conversation.

628
00:38:45,640 --> 00:38:46,960
When we go back to the conversation,

629
00:38:46,960 --> 00:38:49,480
there is a suggestion for a change.

630
00:38:49,480 --> 00:38:52,520
And now [name] doesn't have to do anything

631
00:38:52,520 --> 00:38:55,840
except accept it or not.

632
00:38:57,600 --> 00:39:01,820
And, I mean, I will now not give the screen back to [name],

633
00:39:01,820 --> 00:39:04,720
but formally, it should not be me

634
00:39:06,100 --> 00:39:07,260
committing my own suggestions,

635
00:39:07,260 --> 00:39:10,840
but now, if [name] reads this,

636
00:39:12,060 --> 00:39:14,160
can accept this by,

637
00:39:16,700 --> 00:39:18,260
zoom out here, by clicking.

638
00:39:19,460 --> 00:39:20,860
Why is this not in my screen?

639
00:39:23,660 --> 00:39:24,780
And guess what this is?

640
00:39:24,780 --> 00:39:26,020
This is a commit message.

641
00:39:27,600 --> 00:39:30,860
Fix spelling mistake.

642
00:39:33,200 --> 00:39:36,400
So we can do all of this without going back to my editor,

643
00:39:36,400 --> 00:39:40,140
going back to my command line, commit.

644
00:39:44,400 --> 00:39:47,800
And now this has been fixed here, there's a new commit.

645
00:39:47,800 --> 00:39:50,620
And now if I look at the files changed,

646
00:39:51,580 --> 00:39:53,420
there is no spelling mistake anymore.

647
00:39:53,420 --> 00:40:00,820
And what would now, but now I'm a little bit too lazy to fix the two kilo salt.

648
00:40:00,820 --> 00:40:02,380
I don't know how much it should be.

649
00:40:02,380 --> 00:40:03,700
I leave it to Gecko.

650
00:40:03,700 --> 00:40:12,100
What would be the mechanism now for Gecko to make an improvement to the pull request?

651
00:40:12,100 --> 00:40:16,020
Some people, what they do is that if they see that, oh, there's something wrong, what

652
00:40:16,020 --> 00:40:19,860
they will do is that they will close the pull request and open a new one.

653
00:40:19,860 --> 00:40:21,780
but that's not very good,

654
00:40:21,780 --> 00:40:24,400
because that will fragment discussions

655
00:40:24,400 --> 00:40:26,220
and it will fragment the context,

656
00:40:26,220 --> 00:40:28,180
because then it will be a new pull request

657
00:40:28,180 --> 00:40:30,760
and we will, now then we need to remember

658
00:40:30,760 --> 00:40:33,860
that we had also the pull request 21.

659
00:40:35,140 --> 00:40:40,140
So a much nicer mechanism to improve pull requests,

660
00:40:40,700 --> 00:40:44,020
and you will practice that in your second exercise,

661
00:40:45,180 --> 00:40:48,940
is to recognize that pull requests,

662
00:40:48,940 --> 00:40:53,940
They are always from a branch towards another branch.

663
00:40:56,580 --> 00:40:58,460
And if you want to make changes to a pull request,

664
00:40:58,460 --> 00:41:01,740
all you need to do is to add new commits

665
00:41:02,740 --> 00:41:04,620
to the source branch.

666
00:41:04,620 --> 00:41:08,520
So if [name] adds new commits to the branch,

667
00:41:08,520 --> 00:41:10,360
they will get added to the pull request.

668
00:41:10,360 --> 00:41:14,500
And this is the way to modify a pull request

669
00:41:14,500 --> 00:41:16,740
until we are all happy here.

670
00:41:16,740 --> 00:41:18,700
And once we are happy,

671
00:41:18,700 --> 00:41:20,220
we have resolved all the conversations,

672
00:41:20,220 --> 00:41:21,320
then we will merge it.

673
00:41:23,740 --> 00:41:25,180
And this is what we will practice.

674
00:41:25,180 --> 00:41:26,280
So in the second part,

675
00:41:27,500 --> 00:41:29,900
and let me go to the second part here.

676
00:41:29,900 --> 00:41:30,860
It's very similar.

677
00:41:30,860 --> 00:41:33,980
We are still in the same exercise repository.

678
00:41:33,980 --> 00:41:35,880
You don't need to set up anything new.

679
00:41:37,780 --> 00:41:42,780
The new thing now is we will focus more on the reviewing.

680
00:41:42,780 --> 00:41:47,780
and you will practice the things that we just showed you.

681
00:41:49,620 --> 00:41:51,180
And what you can try to do is

682
00:41:54,020 --> 00:41:56,740
maybe try to open a new pull request

683
00:41:56,740 --> 00:42:01,020
where you, maybe there's a typo that is easy to fix

684
00:42:01,980 --> 00:42:03,740
and there is also a larger mistake.

685
00:42:05,140 --> 00:42:09,420
And then look at other people's pull requests

686
00:42:09,420 --> 00:42:11,240
in the same exercise.

687
00:42:11,240 --> 00:42:13,760
try to make suggestions to their pull requests,

688
00:42:13,760 --> 00:42:16,600
try to do what I did with this type of fix,

689
00:42:17,800 --> 00:42:22,760
and then learn how to make amendments to your pull requests

690
00:42:22,760 --> 00:42:24,160
by adding new commits to it.

691
00:42:25,140 --> 00:42:27,440
We can maybe give some general advice

692
00:42:27,440 --> 00:42:28,740
for how to do reviews.

693
00:42:29,920 --> 00:42:33,760
One thing is spend time on things that humans are good at,

694
00:42:33,760 --> 00:42:36,760
by which I mean, don't spend time at things

695
00:42:36,760 --> 00:42:38,180
which you can automate.

696
00:42:38,180 --> 00:42:41,940
For instance, if one typical thing,

697
00:42:41,940 --> 00:42:44,380
which is very often done by so-called linters

698
00:42:44,380 --> 00:42:49,380
or code formatters is things like code formatting.

699
00:42:50,060 --> 00:42:52,540
If you say, okay, you don't like the bracket here,

700
00:42:52,540 --> 00:42:54,380
you would want to split this into two lines

701
00:42:54,380 --> 00:42:55,740
and stuff like this.

702
00:42:55,740 --> 00:42:57,680
This is not something which we should focus on

703
00:42:57,680 --> 00:42:58,520
during the code review,

704
00:42:58,520 --> 00:43:00,800
because we have automation tools for that.

705
00:43:00,800 --> 00:43:04,340
However, what we should try to do together

706
00:43:04,340 --> 00:43:06,600
is to get the code, which is there,

707
00:43:06,600 --> 00:43:07,700
to an acceptable stage,

708
00:43:07,700 --> 00:43:10,300
and then get it merged as soon as possible

709
00:43:10,300 --> 00:43:12,660
so that a lot of people profit from it.

710
00:43:12,660 --> 00:43:15,060
Like it's really not the case that the reviewer

711
00:43:15,060 --> 00:43:17,500
is there to show how smart the reviewer is

712
00:43:17,500 --> 00:43:20,300
or to show how he or she would have implemented

713
00:43:20,300 --> 00:43:22,500
or they would have implemented stuff.

714
00:43:22,500 --> 00:43:25,180
It's really kind of a collaborative effort.

715
00:43:25,180 --> 00:43:27,900
And in this case, it was me as kind of the new

716
00:43:27,900 --> 00:43:29,580
kind of employee in the group,

717
00:43:29,580 --> 00:43:30,500
the new member of the group

718
00:43:30,500 --> 00:43:32,260
who now creates the pull requests

719
00:43:32,260 --> 00:43:34,660
and then the senior person, the very experienced person

720
00:43:34,660 --> 00:43:36,540
are the ones who did the review.

721
00:43:36,540 --> 00:43:38,660
But there is no reason why it couldn't be the other way around,

722
00:43:39,180 --> 00:43:44,280
because the purpose of a pull request is not just getting the codes to an

723
00:43:44,280 --> 00:43:48,260
acceptable stage, but also to transfer knowledge.

724
00:43:49,540 --> 00:43:53,460
So in my experience, one is learning a lot from reading code from other people

725
00:43:53,460 --> 00:43:57,220
and the pull requests are a wonderful opportunity for that.

726
00:43:57,780 --> 00:43:59,540
And also maybe one last comment.

727
00:44:01,020 --> 00:44:05,340
Another one is a very experienced developer might understand whatever

728
00:44:05,340 --> 00:44:07,780
gets submitted quite quickly.

729
00:44:07,780 --> 00:44:12,300
But one quality of code, or like one side of a good code,

730
00:44:12,300 --> 00:44:14,700
is also readability and how easy it

731
00:44:14,700 --> 00:44:17,260
is to understand for someone who is not

732
00:44:17,260 --> 00:44:20,500
an expert in whatever the proper language might be.

733
00:44:20,500 --> 00:44:22,140
So also, the perspective of someone

734
00:44:22,140 --> 00:44:24,420
who is new to the team can be very valuable to improve

735
00:44:24,420 --> 00:44:27,460
the code itself.

736
00:44:27,460 --> 00:44:28,780
These were such great points.

737
00:44:28,780 --> 00:44:33,500
So is this really a diversity that makes codes better?

738
00:44:33,500 --> 00:44:39,740
great points that it's about learning it's about the reviewer doesn't have to be the senior person

739
00:44:40,380 --> 00:44:43,580
it can be the the new colleague in your in your team

740
00:44:45,980 --> 00:44:52,220
oh this was really such great points and also try to so it's like try to um

741
00:44:53,740 --> 00:44:56,860
like it's a code review but that doesn't mean that you are not allowed to

742
00:44:56,860 --> 00:45:00,700
give any positive comments or like say to point out the things that you like

743
00:45:00,700 --> 00:45:04,220
I mean, there's nothing worse for someone who spent weeks on fixing a very difficult bug,

744
00:45:04,220 --> 00:45:07,660
submitting the pull request, and then the only suggestions he gets are like some

745
00:45:10,700 --> 00:45:17,020
tiny comments about some semantics, which really don't kind of have a large impact on the overall

746
00:45:17,020 --> 00:45:24,140
code. And the pull request doesn't get accepted that way. So I mean, for the person who spent a

747
00:45:24,140 --> 00:45:28,540
large amount of time on fixing this bug, this can be really discouraging. So I think it's really

748
00:45:28,540 --> 00:45:33,660
important to communicate things well and also to focus on the positive things as well, because

749
00:45:33,660 --> 00:45:40,360
I mean, as always in the internet, it's easy to kind of point out or like to communicate

750
00:45:40,360 --> 00:45:45,300
things in a natural way that you would never communicate face to face.

751
00:45:45,300 --> 00:45:50,380
And for somebody who joined the project or just imagine how you would feel if it's your

752
00:45:50,380 --> 00:45:56,740
first pull request to a project. It's so important, your first experience on how they respond

753
00:45:56,740 --> 00:46:01,900
to you. And if the response is very negative, and if the experience is negative, I mean,

754
00:46:01,900 --> 00:46:06,760
you will never come back to the project again. So especially this first contact is so important.

755
00:46:06,760 --> 00:46:11,860
And then it's not so it, the code doesn't have to be perfect. But to really bring them

756
00:46:11,860 --> 00:46:18,980
into the project and give them a good experience. So let's practice that. Let's practice the

757
00:46:18,980 --> 00:46:23,820
the technique in this exercise.

758
00:46:23,820 --> 00:46:28,300
And what we will do, we will give you 25 minutes.

759
00:46:28,300 --> 00:46:30,720
We're basically until the hour,

760
00:46:31,620 --> 00:46:34,000
and then we can take a long one hour break.

761
00:46:35,260 --> 00:46:39,980
And here focus on suggesting changes,

762
00:46:39,980 --> 00:46:43,500
how to apply changes, what we just showed you.

763
00:46:43,500 --> 00:46:46,400
And we try to summarize this in this,

764
00:46:46,400 --> 00:46:52,640
So the tasks are very similar, we try to hear this still again, what are the new things

765
00:46:52,640 --> 00:46:54,960
in this exercise.

766
00:46:54,960 --> 00:47:00,160
And you stay in this centralized exercise repository, it's only later after the longer

767
00:47:00,160 --> 00:47:10,080
break where we will move to a different repository.

768
00:47:10,080 --> 00:47:16,160
Just looking here at notes, whether anything unclear there.

769
00:47:16,160 --> 00:47:23,560
I saw a good question, it was something about, is this what we do for every project or something

770
00:47:23,560 --> 00:47:24,560
like that?

771
00:47:24,560 --> 00:47:27,640
And I think it's worth mentioning.

772
00:47:27,640 --> 00:47:33,360
So day two, so most projects would be somewhere between day two and day three.

773
00:47:33,360 --> 00:47:38,800
So day two was simple, you push directly, you don't worry too much.

774
00:47:38,800 --> 00:47:44,840
Day three, we're going through the really formal process of collaborating on something

775
00:47:44,840 --> 00:47:53,760
bigger. So not every project is day three. Maybe not many projects are day two. Many

776
00:47:53,760 --> 00:47:56,120
are probably in between there.

777
00:47:56,120 --> 00:48:02,240
Yes. So here we can imagine, this is a project for, you can imagine we are three people,

778
00:48:02,240 --> 00:48:09,360
four people in a research group. One person is the principal investigator, but it's not

779
00:48:09,360 --> 00:48:11,280
the person who will review everything.

780
00:48:11,280 --> 00:48:14,080
We agree that we all help out with reviewing.

781
00:48:14,080 --> 00:48:16,880
Nobody, everybody is, nobody is more equal.

782
00:48:18,360 --> 00:48:19,720
So the model that we are trying right now

783
00:48:19,720 --> 00:48:22,200
could be a good fit for that scenario.

784
00:48:22,200 --> 00:48:27,200
It's three to, three to 20 people, or three to 50 people.

785
00:48:28,440 --> 00:48:31,320
Once it gets much bigger, maybe we want to do the thing

786
00:48:31,320 --> 00:48:33,280
that we will do after the longer break.

787
00:48:35,880 --> 00:48:36,720
Good.

788
00:48:37,920 --> 00:48:38,760
Thanks a lot.

789
00:48:39,360 --> 00:48:44,360
For pasting, the exercise will be until the full hour,

790
00:48:45,280 --> 00:48:47,660
so until zero, zero, but then there will be a,

791
00:48:50,000 --> 00:48:51,120
should we then announce the break?

792
00:48:51,120 --> 00:48:52,160
Yes, we will announce the break,

793
00:48:52,160 --> 00:48:53,800
just that people don't forget it.

794
00:48:55,240 --> 00:48:57,620
So we'll be back in 25 minutes for the jingle,

795
00:48:57,620 --> 00:49:00,320
and then we will announce on one hour break afterwards.

796
00:49:01,940 --> 00:49:02,780
Good luck, everybody.

797
00:49:02,780 --> 00:49:04,320
We will also help here.

798
00:49:04,320 --> 00:49:08,480
All the co-organizers and co-instructors will help

799
00:49:09,360 --> 00:49:14,040
with the reviewing for the requests in this,

800
00:49:14,040 --> 00:49:16,000
for the individual stream participants.

801
00:49:18,280 --> 00:49:19,120
Have fun.

802
00:49:19,120 --> 00:49:21,440
Let's all, let's suggest and improve

803
00:49:21,440 --> 00:49:22,960
and let's be really positive.

804
00:49:22,960 --> 00:49:23,800
See you later.

805
00:49:25,260 --> 00:49:26,100
Bye.

806
00:49:33,760 --> 00:49:34,600
Welcome back.

807
00:49:34,600 --> 00:49:36,600
We are back from a longer break.

808
00:49:36,600 --> 00:49:41,480
Back on stream.

809
00:49:41,480 --> 00:49:44,480
I hope the exercise went well.

810
00:49:44,480 --> 00:49:53,320
I'm really happy here with the progress we've done on our exercise repositories.

811
00:49:53,320 --> 00:50:00,480
We will now move on to the third episode of today.

812
00:50:00,480 --> 00:50:05,120
And I also wanted to say something about these exercise repositories.

813
00:50:05,120 --> 00:50:09,200
Because in the third episode, we will use a different one.

814
00:50:09,200 --> 00:50:13,720
And you don't have to be worried that your recipe suggestions stay here forever.

815
00:50:13,720 --> 00:50:18,200
We will keep these exercise repositories for one more week.

816
00:50:18,200 --> 00:50:19,720
But after the workshop, we will delete them.

817
00:50:19,720 --> 00:50:21,720
So everything we did here will be gone.

818
00:50:21,720 --> 00:50:26,720
You don't have to worry about that.

819
00:50:26,720 --> 00:50:31,720
Also I learned that today is the Pi Day, March 14.

820
00:50:31,720 --> 00:50:39,240
Hopefully this has influenced some of the recipe choices.

821
00:50:39,240 --> 00:50:43,520
For the third episode, we will use a different exercise repository.

822
00:50:43,520 --> 00:50:51,320
We will now practice a forking workflow.

823
00:50:51,320 --> 00:50:53,860
So I will already navigate to it.

824
00:50:53,860 --> 00:50:58,720
You will set it up in your exercise session later.

825
00:50:58,720 --> 00:50:59,800
there will be less to set up,

826
00:50:59,800 --> 00:51:04,400
because this time you will not have to add any collaborators.

827
00:51:04,400 --> 00:51:07,040
You don't have to communicate your GitHub accounts.

828
00:51:08,840 --> 00:51:10,480
The whole point of the next exercise

829
00:51:10,480 --> 00:51:15,480
is that we learn how to modify somebody else's repository.

830
00:51:16,800 --> 00:51:18,880
And the somebody else's repository could, for instance,

831
00:51:18,880 --> 00:51:21,040
be all the code refinery lessons,

832
00:51:21,040 --> 00:51:22,360
which are all repositories.

833
00:51:22,360 --> 00:51:24,760
So now you know you will learn

834
00:51:24,760 --> 00:51:28,040
how to suggest changes to the lesson.

835
00:51:28,040 --> 00:51:30,080
And some of you have already done that.

836
00:51:30,080 --> 00:51:31,360
So thanks so much for that.

837
00:51:31,360 --> 00:51:33,560
We didn't have yet time to review everything.

838
00:51:35,220 --> 00:51:39,180
So I will now navigate to the episode called,

839
00:51:40,560 --> 00:51:42,520
oh, this one, that belong to others.

840
00:51:44,200 --> 00:51:45,960
How to contribute changes to repositories

841
00:51:45,960 --> 00:51:47,140
that belong to others.

842
00:51:50,600 --> 00:51:53,960
So there's a little bit of setup, but it will be easier.

843
00:51:53,960 --> 00:51:57,000
Make sure that you don't stay in the same exercise

844
00:51:57,000 --> 00:51:59,960
repository as from earlier today.

845
00:51:59,960 --> 00:52:02,400
Can someone add the link to the notes?

846
00:52:02,400 --> 00:52:04,400
My hands are a bit full here.

847
00:52:04,400 --> 00:52:07,920
Oh yeah, Kat is there.

848
00:52:07,920 --> 00:52:10,880
Okay, so everybody focus on the Kat, I will paste.

849
00:52:10,880 --> 00:52:14,400
We are now here.

850
00:52:14,400 --> 00:52:19,640
We are here, and this is maybe not in the nicest format,

851
00:52:19,640 --> 00:52:24,120
but at the bottom of the document,

852
00:52:24,120 --> 00:52:25,120
This is where we are.

853
00:52:28,600 --> 00:52:33,300
And a lot in the next exercise will be familiar.

854
00:52:34,600 --> 00:52:37,000
Again, a new branch, again, a pull request.

855
00:52:37,000 --> 00:52:41,620
This time, the pull request goes to a different repository,

856
00:52:41,620 --> 00:52:42,880
not the same repository.

857
00:52:44,800 --> 00:52:47,200
You don't have to add collaborators.

858
00:52:47,200 --> 00:52:51,200
You don't have write permissions in the exercise repository,

859
00:52:51,200 --> 00:52:54,640
and you can still suggest changes.

860
00:52:54,640 --> 00:52:55,640
That is really cool.

861
00:52:56,920 --> 00:52:59,640
And there will be a few things that are new.

862
00:52:59,640 --> 00:53:03,640
So every time we try to sneak in some fun new aspects

863
00:53:06,640 --> 00:53:11,640
and one will be automated testing.

864
00:53:12,060 --> 00:53:15,140
We will show that in a minute with Gaggle.

865
00:53:16,480 --> 00:53:18,280
And then we will also show you that

866
00:53:18,280 --> 00:53:23,280
After the changes are merged, you will see that your fork.

867
00:53:26,160 --> 00:53:27,320
So when you start the exercise,

868
00:53:27,320 --> 00:53:29,480
you will fork the exercise repository.

869
00:53:29,480 --> 00:53:32,560
You will see that at some point the fork is out of date

870
00:53:32,560 --> 00:53:34,460
and we will practice how to update it.

871
00:53:36,440 --> 00:53:37,680
And then at the bottom of the page,

872
00:53:37,680 --> 00:53:41,360
there are some thoughts about how to approach

873
00:53:41,360 --> 00:53:44,280
other people's repositories with ideas, changes, requests.

874
00:53:44,280 --> 00:53:48,600
And then hopefully we managed to have

875
00:53:48,600 --> 00:53:51,640
for the last 20 minutes, 30 minutes of discussion session

876
00:53:51,640 --> 00:53:55,360
where all of you can ask us about Git and GitHub

877
00:53:55,360 --> 00:53:56,840
and best practices.

878
00:54:00,560 --> 00:54:02,800
So that's the plan, but we will first start.

879
00:54:02,800 --> 00:54:03,960
So you can first just watch.

880
00:54:03,960 --> 00:54:08,960
We will show you the two key steps in the next exercise.

881
00:54:08,960 --> 00:54:22,080
And for this, [name] and me will go into this forking workflow exercise recorded.

882
00:54:22,080 --> 00:54:26,880
And the first exercise step will be to create a fork from it.

883
00:54:26,880 --> 00:54:30,180
To create your own copy.

884
00:54:30,180 --> 00:54:36,960
Should I give the screen to you, [name]?

885
00:54:36,960 --> 00:54:47,040
So, as another one mentioned, we are now on the forking workflow exercises or exercise

886
00:54:47,040 --> 00:54:54,320
recorded repository and I've already created an issue, again, it's pretty much the same

887
00:54:54,320 --> 00:54:55,320
as before.

888
00:54:55,320 --> 00:55:03,560
I'm just going to add the recipe again and I'm going to create a fork which you do by

889
00:55:03,560 --> 00:55:04,560
clicking on this button.

890
00:55:04,560 --> 00:55:10,400
So I've done that just now, a few minutes ago, I now went to the four seconds.

891
00:55:11,200 --> 00:55:13,200
So you have now, you are now in your copy.

892
00:55:13,760 --> 00:55:14,000
Yes.

893
00:55:14,560 --> 00:55:18,560
Something that will, some people will ask about this.

894
00:55:19,680 --> 00:55:21,200
Where are, where are the issues here?

895
00:55:21,200 --> 00:55:22,720
Because now I don't see them here.

896
00:55:22,720 --> 00:55:29,440
And we need to remember that issues typically stay on the central, the upstream repository.

897
00:55:29,440 --> 00:55:34,240
So when he created the fork, you copied everything, but you didn't copy the issues.

898
00:55:34,240 --> 00:55:40,000
And up, up there, there is no issue tab one could enable it, but it is customary

899
00:55:40,000 --> 00:55:44,320
to, to track all issues and ideas and problems in one central place.

900
00:55:46,080 --> 00:55:46,580
Good.

901
00:55:46,960 --> 00:55:47,760
Yeah. Very good point.

902
00:55:49,200 --> 00:55:54,480
But we will see afterwards how to link pull requests to issues and the original repository.

903
00:55:55,040 --> 00:56:00,720
So I'll now create a new, uh, branch, which I've already done as well.

904
00:56:00,720 --> 00:56:05,120
and I just copied the same recipe from before

905
00:56:05,120 --> 00:56:06,560
into this branch.

906
00:56:06,560 --> 00:56:09,520
So it's the same as before with the corrected title.

907
00:56:10,560 --> 00:56:14,320
So the two issues that [Name] has pointed out

908
00:56:14,320 --> 00:56:17,520
in the last review, they are not an issue here,

909
00:56:17,520 --> 00:56:19,280
but we will see whether there's anything else.

910
00:56:21,920 --> 00:56:25,120
So I now go back to the repository

911
00:56:25,120 --> 00:56:27,360
and I create a pull request.

912
00:56:27,360 --> 00:56:29,360
So I can see here, there's this pop-up,

913
00:56:29,360 --> 00:56:31,820
which shows me this branch is one commit ahead

914
00:56:31,820 --> 00:56:34,240
of the original branch.

915
00:56:35,380 --> 00:56:36,680
And I can now create a pull request

916
00:56:36,680 --> 00:56:38,000
by clicking on contribute.

917
00:56:39,160 --> 00:56:41,160
Then it suggests open a pull request.

918
00:56:45,680 --> 00:56:46,920
So I can double check now again

919
00:56:46,920 --> 00:56:49,200
whether I'm creating this pull request

920
00:56:49,200 --> 00:56:50,360
between the right branches.

921
00:56:50,360 --> 00:56:52,140
So I'm here on my local fork.

922
00:56:53,400 --> 00:56:57,560
And the branch that I'm using here is a feature branch.

923
00:56:57,560 --> 00:57:00,440
so the one that I just created now.

924
00:57:00,440 --> 00:57:04,360
And I want to merge this code into the main branch

925
00:57:04,360 --> 00:57:05,640
of the original repository.

926
00:57:05,640 --> 00:57:06,760
So I see that's correct.

927
00:57:08,200 --> 00:57:09,400
I can add a title.

928
00:57:12,680 --> 00:57:14,520
In this case, it takes the last commit message.

929
00:57:14,520 --> 00:57:15,720
And this time in the commit message,

930
00:57:15,720 --> 00:57:19,480
I've already referenced that this code

931
00:57:19,480 --> 00:57:22,280
is supposed to be fixing an issue.

932
00:57:22,280 --> 00:57:24,360
So in this case, I wrote fix hashtag one,

933
00:57:24,360 --> 00:57:27,320
because the issue that I'm trying to fix

934
00:57:27,320 --> 00:57:29,320
This is the first one that has been created

935
00:57:29,320 --> 00:57:30,280
to this repository.

936
00:57:31,120 --> 00:57:34,120
Also, if I would write it here, just to quickly show it,

937
00:57:34,120 --> 00:57:37,200
it will now show me all the issues

938
00:57:37,200 --> 00:57:39,360
that are listed there in the original repository,

939
00:57:39,360 --> 00:57:40,700
and I could choose this one again,

940
00:57:40,700 --> 00:57:42,120
but I've already done it here in the title,

941
00:57:42,120 --> 00:57:44,420
so I don't need to do that here again.

942
00:57:44,420 --> 00:57:46,840
But it shows me here with all the issues,

943
00:57:46,840 --> 00:57:48,680
or it would show me here all the issues

944
00:57:48,680 --> 00:57:51,320
that are existing for, that are open at the moment

945
00:57:51,320 --> 00:57:53,220
in this original repository.

946
00:57:53,220 --> 00:57:54,640
Now it's the same thing as last time.

947
00:57:54,640 --> 00:57:57,000
I can again choose another one as a reviewer,

948
00:57:57,000 --> 00:58:00,880
If I want to specify someone, I can add a label if I want.

949
00:58:02,680 --> 00:58:07,240
And then we create, we click on create pull request.

950
00:58:07,240 --> 00:58:09,640
And we will now see how this automated tests

951
00:58:10,640 --> 00:58:12,740
can be extremely helpful.

952
00:58:12,740 --> 00:58:15,400
So another one, should I give the screen back to you

953
00:58:15,400 --> 00:58:20,400
or should I quickly point out what is happening here?

954
00:58:20,640 --> 00:58:23,120
Yeah, you can explain that and then it will go,

955
00:58:23,120 --> 00:58:26,780
and then I will take it over and merge it on my side.

956
00:58:28,000 --> 00:58:29,880
Yeah, so now something interesting happens.

957
00:58:29,880 --> 00:58:30,880
In this repository,

958
00:58:30,880 --> 00:58:33,880
we added some so-called GitHub workflows,

959
00:58:33,880 --> 00:58:37,080
which is a way of implementing automated tests

960
00:58:37,080 --> 00:58:38,960
or automated checks for every code

961
00:58:38,960 --> 00:58:41,280
that is submitted in a pull request.

962
00:58:41,280 --> 00:58:43,220
Okay, click here on details.

963
00:58:44,240 --> 00:58:46,480
We'll show you afterwards how this is set up.

964
00:58:47,420 --> 00:58:49,540
And then I get here all the steps

965
00:58:49,540 --> 00:58:50,840
that are done in this test.

966
00:58:50,840 --> 00:58:54,200
And it shows me here that one test is failing.

967
00:58:54,200 --> 00:58:56,400
So in this case, there's only one test that is done.

968
00:58:56,400 --> 00:58:58,560
Otherwise, there would be multiple jobs listed here

969
00:58:58,560 --> 00:58:59,640
on the left side.

970
00:58:59,640 --> 00:59:03,680
And it tells me here that in the file that I submitted,

971
00:59:03,680 --> 00:59:07,800
the test checks whether I have ingredients as a section.

972
00:59:07,800 --> 00:59:10,360
And it tells me that I don't have any.

973
00:59:10,360 --> 00:59:14,000
Now, let's take a look at the code again,

974
00:59:14,000 --> 00:59:16,200
which I can do here by clicking on Files Changed.

975
00:59:16,200 --> 00:59:26,880
And it already shows me that there is something wrong, and it tells me here that ingredients

976
00:59:26,880 --> 00:59:27,880
is not in.

977
00:59:27,880 --> 00:59:32,840
Let me just scroll to show you full message here.

978
00:59:32,840 --> 00:59:37,200
It's saying that this section is missing ingredients, and if I take a closer look, I see I actually

979
00:59:37,200 --> 00:59:41,680
misspelled ingredients, therefore test catches a mistake.

980
00:59:41,680 --> 00:59:45,480
And I did this on purpose because in the previous lesson,

981
00:59:45,480 --> 00:59:47,080
this mistake was already there,

982
00:59:47,080 --> 00:59:49,840
and [Name] and I were not able to spot it.

983
00:59:50,880 --> 00:59:53,760
And now the automated test was able to spot the mistake.

984
00:59:53,760 --> 00:59:57,240
Now this, of course, is kind of an artificial

985
01:00:00,280 --> 01:00:02,240
kind of test, like usually in a code project,

986
01:00:02,240 --> 01:00:05,400
which would be more relevant would be to add tests

987
01:00:05,400 --> 01:00:07,240
that check the functions of the new implementations

988
01:00:07,240 --> 01:00:08,080
in your code.

989
01:00:08,080 --> 01:00:09,720
So whenever you submit something

990
01:00:09,720 --> 01:00:11,960
that changes something in the code base,

991
01:00:11,960 --> 01:00:14,400
you can automatically test whether it breaks anything

992
01:00:14,400 --> 01:00:18,880
of the previously existing functionalities.

993
01:00:20,040 --> 01:00:21,520
Or I can use this also very frequently,

994
01:00:21,520 --> 01:00:22,840
but it's not very often to check

995
01:00:22,840 --> 01:00:25,020
whether the code formatting is correct.

996
01:00:25,020 --> 01:00:27,560
So these two things are usually done

997
01:00:27,560 --> 01:00:29,400
in these GitHub actions.

998
01:00:30,760 --> 01:00:33,880
But again, like in this case, which is really nice,

999
01:00:33,880 --> 01:00:35,520
it showed us like there is a mistake here,

1000
01:00:35,520 --> 01:00:37,640
which we, which slipped under our radar

1001
01:00:37,640 --> 01:00:40,720
when we were doing the code review manually.

1002
01:00:41,840 --> 01:00:45,440
Okay, another one, should I give the screen to you or?

1003
01:00:46,920 --> 01:00:48,240
Yes, give me a second.

1004
01:00:48,240 --> 01:00:53,240
I will take the screen and let me review it.

1005
01:00:53,680 --> 01:00:57,380
Let's now take the perspective of the person reviewing.

1006
01:01:04,180 --> 01:01:05,760
I will just refresh my page.

1007
01:01:07,640 --> 01:01:18,400
Poor request, one is open and one issue is open, that's the one.

1008
01:01:18,400 --> 01:01:25,900
And I will make the font larger.

1009
01:01:25,900 --> 01:01:30,540
So even without, even before I click on the poor request itself, I can see that.

1010
01:01:30,540 --> 01:01:33,520
So the new thing this time is this,

1011
01:01:33,520 --> 01:01:36,160
is this, there's a new symbol here.

1012
01:01:38,900 --> 01:01:40,260
And if I would click here,

1013
01:01:40,260 --> 01:01:41,860
I would see the same detail that,

1014
01:01:44,420 --> 01:01:46,540
I clicked on the wrong thing.

1015
01:01:46,540 --> 01:01:51,540
If I click on the X or on the details,

1016
01:01:51,780 --> 01:01:55,460
I would see the same what [name] has just seen.

1017
01:01:56,820 --> 01:01:58,540
And now I know what the problem is

1018
01:01:58,540 --> 01:02:01,340
and I also know how to fix it.

1019
01:02:01,340 --> 01:02:04,180
So let me first fix it and then I want to show you

1020
01:02:04,180 --> 01:02:06,540
how do we do this testing?

1021
01:02:07,420 --> 01:02:08,260
How does it work?

1022
01:02:08,260 --> 01:02:11,120
And then what does it make possible?

1023
01:02:13,220 --> 01:02:17,200
And it will only be a preview because then next week

1024
01:02:17,200 --> 01:02:20,740
we have a whole lesson on automated testing

1025
01:02:20,740 --> 01:02:22,500
and then we can go really in depth.

1026
01:02:23,980 --> 01:02:25,420
But let me first fix this.

1027
01:02:25,420 --> 01:02:33,100
we know how to review changes no i can go i can do it directly here no this one

1028
01:02:34,700 --> 01:02:41,180
it was the plus minus symbol in in not ingredients it's ingredients

1029
01:02:48,300 --> 01:02:49,100
and i will know

1030
01:02:49,100 --> 01:02:58,220
Well, I can keep the screen, but [name] can't commit it, so just that I don't commit and

1031
01:02:58,220 --> 01:03:09,220
upload my own suggestions, so maybe you can click on it, but we stay with my screen.

1032
01:03:09,220 --> 01:03:13,420
I don't even know whether something will change here automatically, or I need to reload.

1033
01:03:13,420 --> 01:03:25,140
see yeah actually it did update yeah I just updated and now the tests are

1034
01:03:25,140 --> 01:03:27,660
running again if you scroll further down you can see that the tests are

1035
01:03:27,660 --> 01:03:34,220
running again oh and they have passed yeah green checkmark all checks have

1036
01:03:34,220 --> 01:03:39,220
then I can verify by going to the details.

1037
01:03:42,580 --> 01:03:47,580
And now everything is happy here, zero errors.

1038
01:03:49,460 --> 01:03:52,960
So something was happening, run Python checks recipes.py.

1039
01:03:52,960 --> 01:03:54,260
Where does that come from?

1040
01:03:57,580 --> 01:03:59,020
Well, first, let me merge it.

1041
01:04:00,280 --> 01:04:01,120
Let me first merge it

1042
01:04:01,120 --> 01:04:02,960
and then let's talk about the testing.

1043
01:04:04,220 --> 01:04:18,220
just thinking whether this will do anything with our exercise now it's fine to merge

1044
01:04:18,220 --> 01:04:26,940
now we have it on the main branch how did the testing work

1045
01:04:26,940 --> 01:04:33,580
we edit and now there is a symbol it's running again because the testing now runs not only

1046
01:04:33,580 --> 01:04:38,140
we defined it to run not only on each pull request but also on each modification of the main branch.

1047
01:04:40,380 --> 01:04:47,420
So there's this check recipes which is a little Python script that will check whether our recipes

1048
01:04:47,420 --> 01:04:52,620
contain ingredients and instructions. It doesn't have to be Python and in real life it would

1049
01:04:52,620 --> 01:04:59,500
verify something else. So we don't have to go into this file really. Of course if you are curious

1050
01:04:59,500 --> 01:05:04,380
you can click and see what is inside. The really key thing here is this folder

1051
01:05:06,220 --> 01:05:12,460
dot GitHub slash workflows and inside there we can add scripts and we can tell them that

1052
01:05:12,460 --> 01:05:18,380
they should run automatically every time we push or create a pull request or create a release.

1053
01:05:20,140 --> 01:05:21,260
So I will go in there and see.

1054
01:05:29,500 --> 01:05:31,340
We have one recipe in there.

1055
01:05:32,860 --> 01:05:34,460
Well, maybe recipes are confusing word.

1056
01:05:34,460 --> 01:05:39,460
We have one script and we give it a name, check recipes.

1057
01:05:40,940 --> 01:05:42,700
You could have several scripts here.

1058
01:05:43,860 --> 01:05:48,440
I will open it up and this here we define on each,

1059
01:05:49,500 --> 01:05:51,420
on each modification of the main branch,

1060
01:05:51,420 --> 01:05:54,160
on each pull request towards the main branch,

1061
01:05:56,500 --> 01:05:58,520
do a series of steps.

1062
01:05:59,500 --> 01:06:04,500
and run it on a Linux-like container.

1063
01:06:08,200 --> 01:06:09,280
You could here add,

1064
01:06:09,280 --> 01:06:13,320
you could run tests on a macOS system or a Windows system.

1065
01:06:15,880 --> 01:06:18,880
I think you could even run them on your own custom container.

1066
01:06:21,000 --> 01:06:22,960
And the series of steps here,

1067
01:06:22,960 --> 01:06:24,920
it's up to you to define what it is.

1068
01:06:24,920 --> 01:06:32,240
So what are the typical things that we will want to do at a pull request?

1069
01:06:32,240 --> 01:06:36,800
One thing that we will see next week is we'll run a series of automated tests to make sure

1070
01:06:36,800 --> 01:06:44,240
that the functionality is still working.

1071
01:06:44,240 --> 01:06:50,480
Then another thing you might want to do automatically is to build the documentation.

1072
01:06:50,480 --> 01:06:53,840
We will learn how to do that next week.

1073
01:06:53,840 --> 01:07:03,360
checking. If I go back to our lesson and I zoom out, if you want to browse our lesson in PDF format,

1074
01:07:04,000 --> 01:07:09,600
well that PDF is generated automatically as part of a workflow at every pull request.

1075
01:07:11,360 --> 01:07:15,280
So there are a lot, many things are possible. You could automatically package your code,

1076
01:07:15,280 --> 01:07:22,560
you could even automatically upload your code to services like Zenodo and get a

1077
01:07:22,560 --> 01:07:25,220
on digital object identifier.

1078
01:07:26,620 --> 01:07:29,200
I don't know what else we could do.

1079
01:07:29,200 --> 01:07:30,180
Lots of things.

1080
01:07:30,180 --> 01:07:32,240
So we will come back to that next week.

1081
01:07:32,240 --> 01:07:33,540
So this is just a preview.

1082
01:07:34,380 --> 01:07:38,420
So then when you practice in the next exercise

1083
01:07:39,480 --> 01:07:41,460
and the test is failing, I mean, don't feel bad.

1084
01:07:41,460 --> 01:07:45,900
This is a silly test that checks for certain sections.

1085
01:07:45,900 --> 01:07:48,000
We only want to show you what is possible.

1086
01:07:48,000 --> 01:08:00,400
Next week, we will show you how to create these workflow files for your own projects.

1087
01:08:00,400 --> 01:08:05,000
Good.

1088
01:08:05,000 --> 01:08:11,320
There will be a second interesting thing that you will see in your exercise is that

1089
01:08:11,320 --> 01:08:21,400
The change that [name] sent and that I merged, which was a new pasta recipe, pasta this one,

1090
01:08:21,400 --> 01:08:27,840
it is now on the main branch in this exercise repository.

1091
01:08:27,840 --> 01:08:32,680
But if I, if we, maybe we can again switch perspective and [name] takes the screen from

1092
01:08:32,680 --> 01:08:39,360
me and if we go back to his view on his fork, we will see the change is not there on the

1093
01:08:39,360 --> 01:08:40,200
the main branch.

1094
01:08:42,660 --> 01:08:43,500
Exactly.

1095
01:08:43,500 --> 01:08:45,220
So I'm now in my book.

1096
01:08:45,220 --> 01:08:46,860
And if I take a look at the commits,

1097
01:08:46,860 --> 01:08:49,340
I will only see the initial commit.

1098
01:08:49,340 --> 01:08:52,340
So whatever has been committed to the main branch now

1099
01:08:52,340 --> 01:08:55,100
of the original repository is not appearing here.

1100
01:08:55,980 --> 01:08:56,820
Yeah.

1101
01:08:56,820 --> 01:08:58,020
If I take, we'll take a look at that.

1102
01:08:58,020 --> 01:09:00,260
And I would see there's already four commits.

1103
01:09:03,300 --> 01:09:05,660
And these come from the pull request.

1104
01:09:05,660 --> 01:09:06,500
Yes.

1105
01:09:06,500 --> 01:09:08,340
So two of them were one,

1106
01:09:08,340 --> 01:09:09,860
when one was your pull request,

1107
01:09:09,860 --> 01:09:13,100
the second one was where we fixed the spelling mistake.

1108
01:09:14,120 --> 01:09:16,140
And then the last one, which is the merge,

1109
01:09:16,140 --> 01:09:16,980
it's a merge commit.

1110
01:09:16,980 --> 01:09:18,240
So that's why we have four.

1111
01:09:19,740 --> 01:09:22,800
And then going back to your fork,

1112
01:09:22,800 --> 01:09:25,980
and there is, we can actually see that it's behind

1113
01:09:25,980 --> 01:09:28,180
because it tells us there,

1114
01:09:28,180 --> 01:09:29,940
this branch is three commits behind

1115
01:09:32,020 --> 01:09:34,500
the upstream repository.

1116
01:09:35,580 --> 01:09:37,940
And now there is a two-click way of updating it

1117
01:09:37,940 --> 01:09:39,740
and you will do that in the exercise.

1118
01:09:40,860 --> 01:09:41,700
That is this.

1119
01:09:41,700 --> 01:09:42,740
Click on sync fork.

1120
01:09:42,740 --> 01:09:44,060
Exactly.

1121
01:09:44,060 --> 01:09:45,300
If you want, you can compare,

1122
01:09:45,300 --> 01:09:47,580
but I mean, we already know what the difference is.

1123
01:09:47,580 --> 01:09:50,060
It will be, it's just this one document.

1124
01:09:50,060 --> 01:09:51,660
So I can click on update branch.

1125
01:09:55,900 --> 01:09:57,380
And now it's identical again.

1126
01:09:57,380 --> 01:09:59,540
So if I now take a look at the full commits,

1127
01:10:01,300 --> 01:10:04,040
it will be the same as in the upstream branch.

1128
01:10:04,040 --> 01:10:09,040
So that will be an exercise step.

1129
01:10:11,760 --> 01:10:16,660
And this was easy because we have been careful

1130
01:10:16,660 --> 01:10:19,880
of not really modifying the main branch.

1131
01:10:19,880 --> 01:10:24,880
It can be useful to, okay, I'll just capture the screen.

1132
01:10:25,040 --> 01:10:27,960
It can be useful to consider the main branch

1133
01:10:27,960 --> 01:10:31,000
or the default branch as read-only.

1134
01:10:31,000 --> 01:10:33,560
For every new pull request, we create a new branch.

1135
01:10:34,040 --> 01:10:37,240
And then it will be easy.

1136
01:10:37,240 --> 01:10:41,540
Our main branch in the fork will always be either up to date

1137
01:10:41,540 --> 01:10:44,460
or a little bit behind, but we'll never be ahead.

1138
01:10:46,140 --> 01:10:48,500
And then updating will be without any mistakes

1139
01:10:48,500 --> 01:10:49,840
and any problems.

1140
01:10:52,340 --> 01:10:53,340
You could just for fun,

1141
01:10:53,340 --> 01:10:55,780
try to actually modify your own main branch

1142
01:10:55,780 --> 01:10:58,660
and see what happens then if you try to update your fork,

1143
01:10:58,660 --> 01:11:00,580
whether this will work and what will happen.

1144
01:11:00,580 --> 01:11:03,500
So that can be an interesting thing to try.

1145
01:11:04,040 --> 01:11:13,400
And now looking at the time, timing is really good.

1146
01:11:13,400 --> 01:11:19,200
So we will soon start the exercise session and we have an exercise block here and it

1147
01:11:19,200 --> 01:11:23,620
will be, we will give you half an hour, which might be too much time, but it's also nice

1148
01:11:23,620 --> 01:11:29,960
to try some of these fun things out and, or maybe catch up with what didn't work well

1149
01:11:29,960 --> 01:11:30,960
earlier.

1150
01:11:30,960 --> 01:11:38,240
A couple of things are already familiar, and what is really new is listed here.

1151
01:11:38,240 --> 01:11:42,960
And again, at the bottom of the page, we have screenshots of how does it look, where to

1152
01:11:42,960 --> 01:11:45,880
click.

1153
01:11:45,880 --> 01:11:53,960
And then if you finish with the exercise before half an hour, have a look at the last section

1154
01:11:53,960 --> 01:11:57,840
where there are some thoughts, and this can then form a basis for a discussion.

1155
01:11:57,840 --> 01:12:02,640
So the last half an hour of today will be a Q&A session,

1156
01:12:02,640 --> 01:12:04,640
where we really open this up.

1157
01:12:05,560 --> 01:12:09,120
So I suggest that we will be back at 55 past.

1158
01:12:14,840 --> 01:12:16,160
We will be back here with a jingle.

1159
01:12:16,160 --> 01:12:17,040
I will say a few words.

1160
01:12:17,040 --> 01:12:18,940
We will then go into a short break,

1161
01:12:19,880 --> 01:12:22,840
and then we will come back for a Q&A session.

1162
01:12:22,840 --> 01:12:25,160
So prepare many cues, many questions.

1163
01:12:27,840 --> 01:12:30,680
Have fun at the exercise, hope that works well.

1164
01:12:30,680 --> 01:12:33,080
Again, it will really help us if you let us know

1165
01:12:34,120 --> 01:12:36,560
whether this worked well or where you are

1166
01:12:36,560 --> 01:12:37,720
in the exercise step.

1167
01:12:39,160 --> 01:12:41,680
Good luck, I just need to find the right button

1168
01:12:41,680 --> 01:12:43,240
in my remote control.

1169
01:12:43,240 --> 01:12:44,400
See you in half an hour.

1170
01:12:50,600 --> 01:12:51,440
Good, welcome back.

1171
01:12:51,440 --> 01:12:55,120
It seems that this worked reasonably well.

1172
01:12:55,120 --> 01:12:56,720
It's also really fun to see that

1173
01:12:57,840 --> 01:13:00,960
In my network graph, I see all of your changes.

1174
01:13:02,080 --> 01:13:04,640
And you didn't even have right permissions.

1175
01:13:04,640 --> 01:13:06,360
You didn't even have to ask for permissions

1176
01:13:06,360 --> 01:13:07,200
to make these changes.

1177
01:13:07,200 --> 01:13:09,720
You could suggest them, I could review them,

1178
01:13:09,720 --> 01:13:11,560
and we could all collaborate.

1179
01:13:11,560 --> 01:13:13,880
And now we have a model to work on,

1180
01:13:13,880 --> 01:13:17,540
in principle, any repository that is open.

1181
01:13:19,720 --> 01:13:21,640
We will take a 10 minute break,

1182
01:13:21,640 --> 01:13:23,800
and it will be nice if when we come back from the break,

1183
01:13:23,800 --> 01:13:26,040
that we have lots of questions about today,

1184
01:13:26,040 --> 01:13:29,480
about the previous days and then we open it up

1185
01:13:29,480 --> 01:13:33,320
and we will try to answer everything.

1186
01:13:33,320 --> 01:13:35,960
Maybe we can show something here live.

1187
01:13:35,960 --> 01:13:38,360
So please come back with lots of Git and GitHub,

1188
01:13:38,360 --> 01:13:39,740
GitLab questions.

1189
01:13:40,720 --> 01:13:43,440
See you then five minutes past the hour.

1190
01:13:44,940 --> 01:13:47,840
Five minutes past the hour, we'll be back here on stream.

1191
01:13:48,880 --> 01:13:49,800
Have a nice break.

1192
01:13:56,040 --> 01:14:08,440
My interface is still playing, I hope it's not, it has finished.

1193
01:14:08,440 --> 01:14:10,440
I think we are back.

1194
01:14:10,440 --> 01:14:13,440
Welcome everybody.

1195
01:14:13,440 --> 01:14:16,040
We have 20 minutes left.

1196
01:14:16,040 --> 01:14:18,320
And in these 20 minutes, we would like to open it up.

1197
01:14:18,320 --> 01:14:23,600
Please ask us lots of questions on the document.

1198
01:14:23,600 --> 01:14:25,200
and there are some really good questions

1199
01:14:25,200 --> 01:14:27,160
that I want to reconnect.

1200
01:14:28,720 --> 01:14:31,880
But this document is the only way we can really see you.

1201
01:14:31,880 --> 01:14:34,680
I hope we could just see you here and we could talk,

1202
01:14:34,680 --> 01:14:37,680
talk together, but let's talk through this document

1203
01:14:37,680 --> 01:14:38,760
and we will try to answer.

1204
01:14:38,760 --> 01:14:40,160
Maybe we can show something,

1205
01:14:41,520 --> 01:14:43,040
anything about GitHub.

1206
01:14:44,620 --> 01:14:47,120
And in the meantime, while the questions are coming,

1207
01:14:47,120 --> 01:14:49,760
I can give you a preview of what to expect next week.

1208
01:14:49,760 --> 01:14:54,760
we will know that we have a really good basis

1209
01:14:56,160 --> 01:14:57,720
of version control.

1210
01:14:57,720 --> 01:15:01,540
This is really only one component of reproducible research.

1211
01:15:02,800 --> 01:15:07,280
And because then when we develop our scripts

1212
01:15:07,280 --> 01:15:09,560
and visualization pipelines,

1213
01:15:09,560 --> 01:15:12,280
there is often more than just versions.

1214
01:15:12,280 --> 01:15:14,560
We have environments, we need to keep track of those.

1215
01:15:14,560 --> 01:15:17,960
We have dependencies and we will learn that next week

1216
01:15:18,920 --> 01:15:22,440
about how to make our environments more reproducible,

1217
01:15:22,440 --> 01:15:26,260
how to reuse other people's code.

1218
01:15:28,520 --> 01:15:30,600
We will talk about how to document codes,

1219
01:15:30,600 --> 01:15:35,600
how to test codes, how to collaborate in notebooks,

1220
01:15:37,120 --> 01:15:39,640
and then how to organize programs

1221
01:15:39,640 --> 01:15:42,200
so that it becomes, again, more understandable,

1222
01:15:42,200 --> 01:15:45,580
more usable, copy-pastable.

1223
01:15:46,540 --> 01:15:47,900
So all of that will be next week.

1224
01:15:53,900 --> 01:15:55,740
Yeah, so for questions.

1225
01:15:57,260 --> 01:16:00,380
For questions, maybe I can start with this one here, which is a really good one.

1226
01:16:02,540 --> 01:16:06,460
So still a bit confused about difference between a branch and a fork and a clone.

1227
01:16:07,580 --> 01:16:09,420
And because they feel really similar.

1228
01:16:09,420 --> 01:16:22,480
So fork, fork and clone, they make copy of the entire repository.

1229
01:16:22,480 --> 01:16:30,080
Branches are something that they live inside a repository.

1230
01:16:30,080 --> 01:16:34,200
Let me go to the one that we just practice with.

1231
01:16:34,200 --> 01:16:35,640
And I will go to network.

1232
01:16:35,640 --> 01:16:41,880
But I wonder whether this is a good example.

1233
01:16:41,880 --> 01:16:50,480
So if I go to the network, I see that there are, so all of these colored lines, they are

1234
01:16:50,480 --> 01:17:00,360
branches that live right now, they actually live now inside the repository.

1235
01:17:00,360 --> 01:17:02,440
But then there are also some branches that live outside.

1236
01:17:02,440 --> 01:17:07,440
So these are forks, these are copies of the repository.

1237
01:17:11,200 --> 01:17:12,800
And maybe I can clarify even better

1238
01:17:12,800 --> 01:17:16,700
if I go to where we started today, to these pictures.

1239
01:17:17,920 --> 01:17:19,220
We had this cloud picture.

1240
01:17:22,520 --> 01:17:23,360
And there was this one-

1241
01:17:23,360 --> 01:17:24,320
Could we say that just,

1242
01:17:24,320 --> 01:17:28,440
yes, they are really quite similar.

1243
01:17:28,440 --> 01:17:31,840
And if it seems like we're using them in the same sense,

1244
01:17:32,440 --> 01:17:39,680
don't worry too much. Think about the thing you want to accomplish and how to

1245
01:17:39,680 --> 01:17:46,640
do it and don't worry too much about the terminology. Because someone could say

1246
01:17:46,640 --> 01:17:53,160
oh I have a fork of this on my computer when it's a clone of it. They're both

1247
01:17:53,160 --> 01:18:00,920
correct. GitHub has a fork but it's probably still the same data so yeah.

1248
01:18:00,920 --> 01:18:06,920
I agree, like, don't worry about fork versus clone, but about the question, well, what

1249
01:18:06,920 --> 01:18:11,320
is the difference between branching and forking?

1250
01:18:11,320 --> 01:18:15,160
So branches are the things that live inside a repository.

1251
01:18:15,160 --> 01:18:21,200
And then now when you start using it for your own work and in your own group, you probably

1252
01:18:21,200 --> 01:18:23,600
don't need forks.

1253
01:18:23,600 --> 01:18:28,200
We wanted to show you that so that you know what that means and so that you can make changes

1254
01:18:28,200 --> 01:18:34,640
to anybody's repository almost, but for your own work, maybe start with autoforking.

1255
01:18:34,640 --> 01:18:40,600
You can all add yourselves, add your colleagues, your students to the repository, and then

1256
01:18:40,600 --> 01:18:45,780
you can all create branches and commits inside the same repository.

1257
01:18:45,780 --> 01:18:49,200
And maybe that's just easier to understand.

1258
01:18:49,200 --> 01:18:58,040
And then later, if needed, if it becomes too big, then maybe you can decide that, well,

1259
01:18:58,040 --> 01:19:02,040
want to use rather the forking. Yeah.

1260
01:19:03,400 --> 01:19:07,720
What about github? Why is github or is there more?

1261
01:19:07,720 --> 01:19:14,200
That was good. Yeah. Why is github important and necessary?

1262
01:19:14,200 --> 01:19:17,080
Is github good?

1263
01:19:19,640 --> 01:19:23,400
Why it is important and necessary and why do we teach it?

1264
01:19:23,400 --> 01:19:26,280
Because it

1265
01:19:26,280 --> 01:19:29,840
It is one of the standard platforms.

1266
01:19:29,840 --> 01:19:39,300
It is likely that the code that you want to use or change is probably there.

1267
01:19:39,300 --> 01:19:40,960
It is popular.

1268
01:19:40,960 --> 01:19:43,160
It is a very convenient platform.

1269
01:19:43,160 --> 01:19:45,160
It is not the only one.

1270
01:19:45,160 --> 01:19:51,080
But it makes some of the steps that we did today are implemented in a very convenient

1271
01:19:51,080 --> 01:19:52,080
way.

1272
01:19:52,080 --> 01:19:54,060
Click, click, click, and it's done.

1273
01:19:54,060 --> 01:19:58,460
You can do many of these things also on the command line, but then it's more steps are

1274
01:19:58,460 --> 01:20:01,220
needed.

1275
01:20:01,220 --> 01:20:02,220
It can be used.

1276
01:20:02,220 --> 01:20:08,980
No, I just wanted to add that most of the large software projects that are relevant

1277
01:20:08,980 --> 01:20:13,260
to research are on GitHub, like NumPy, like Julia, the language itself, SciPy, and so

1278
01:20:13,260 --> 01:20:14,260
on.

1279
01:20:14,260 --> 01:20:19,500
So if you're looking for something, chances are very, very high you will find it there.

1280
01:20:19,500 --> 01:20:20,500
Yeah.

1281
01:20:20,500 --> 01:20:26,900
it is fair to ask, is it good that one company owns this one platform that everyone uses?

1282
01:20:27,540 --> 01:20:33,380
This is probably not great for society in general. But there have been times in the past

1283
01:20:33,380 --> 01:20:39,220
when I've tried to teach people what I thought was best and not what was most common, and well,

1284
01:20:40,980 --> 01:20:44,980
it's just not as useful. So yeah, I mean,

1285
01:20:44,980 --> 01:20:49,580
I mean, why is it important?

1286
01:20:49,580 --> 01:20:52,460
It's important because it enables collaboration.

1287
01:20:52,460 --> 01:20:55,380
But other things do that also.

1288
01:20:55,380 --> 01:20:57,340
Why is it necessary?

1289
01:20:57,340 --> 01:20:58,860
It's not strictly necessary.

1290
01:20:58,860 --> 01:21:03,220
It's possible to use most of the tools we have without GitHub.

1291
01:21:03,220 --> 01:21:07,580
And even really, it's possible to use Git without GitHub,

1292
01:21:07,580 --> 01:21:10,060
or GitLab, or Bitbucket, or any of these platforms.

1293
01:21:10,060 --> 01:21:13,540
You can use it completely alone.

1294
01:21:13,540 --> 01:21:18,500
I can add here that one advantage of having your code

1295
01:21:18,500 --> 01:21:21,120
somewhere on the internet visible

1296
01:21:21,120 --> 01:21:22,840
compared to just having it on your hard drive

1297
01:21:22,840 --> 01:21:26,120
is that what if you apply later for a job

1298
01:21:26,120 --> 01:21:30,120
that is maybe not a researcher, professor,

1299
01:21:30,120 --> 01:21:32,560
but you apply for a job that is more focused

1300
01:21:32,560 --> 01:21:33,820
on computing programming.

1301
01:21:35,000 --> 01:21:36,840
And then people will want to look at,

1302
01:21:36,840 --> 01:21:38,000
well, what did you work on?

1303
01:21:38,000 --> 01:21:39,040
How do you write a code?

1304
01:21:39,040 --> 01:21:41,560
And then if you can show that here,

1305
01:21:41,560 --> 01:21:45,320
if our projects have a look, it can work like a CD.

1306
01:21:46,280 --> 01:21:47,600
Yes, definitely.

1307
01:21:50,120 --> 01:21:51,600
The next question is also good.

1308
01:21:51,600 --> 01:21:54,880
We have a self-hosted GitLab instance at the lab.

1309
01:21:54,880 --> 01:21:58,160
We're wondering best practices to know when to use

1310
01:21:58,160 --> 01:22:00,520
that GitLab or GitHub and so on.

1311
01:22:02,080 --> 01:22:07,040
And so what are the disadvantages of GitHub?

1312
01:22:07,040 --> 01:22:10,760
So if the data is very confidential,

1313
01:22:10,760 --> 01:22:19,400
there's security restrictions, well, you might not have whatever signed document you need to store it

1314
01:22:19,400 --> 01:22:34,440
on GitHub itself. And well, you lose the control over it. So basically, then GitHub is like,

1315
01:22:34,440 --> 01:22:38,600
you know, at any time GitHub could decide, oh, we don't want to do business with you,

1316
01:22:38,600 --> 01:22:45,160
and then you lose access to your whole workflow. A self-hosted GitLab gives you that full control

1317
01:22:45,160 --> 01:22:50,440
and full responsibility. But then on the other hand,

1318
01:22:54,760 --> 01:23:01,160
the GitLab, the disadvantage is you have to do more maintenance yourself on it to even keep the

1319
01:23:01,160 --> 01:23:07,560
thing running. And then if other people are working on it, they need a separate account,

1320
01:23:07,560 --> 01:23:12,440
you need to give people access to this GitLab in order to collaborate with them.

1321
01:23:13,080 --> 01:23:17,800
So it's sort of a balance. So I'd say if you're collaborating with, like if you want something

1322
01:23:17,800 --> 01:23:24,680
where anyone in the world can contribute to your code and it's completely open, then

1323
01:23:25,880 --> 01:23:30,600
may as well use GitHub or public GitLab or something that people have account on.

1324
01:23:30,600 --> 01:23:40,280
on. If it's private stuff, then that's the time to start thinking, okay, yeah, maybe

1325
01:23:40,280 --> 01:23:45,520
one of the self-hosted labs is better.

1326
01:23:45,520 --> 01:23:54,560
And one use case that could be to have what some projects like to do is that all the unpublished

1327
01:23:54,560 --> 01:24:02,080
results, everything that is not yet published, that is, you keep it on branches, on your

1328
01:24:02,080 --> 01:24:06,520
own server. And then you can, for instance, decide that everything that is on the main

1329
01:24:06,520 --> 01:24:14,140
branch has been already published. And this you can then so-called mirror, you copy it,

1330
01:24:14,140 --> 01:24:19,740
the main branch to GitHub, it's publicly accessible, anybody can see it and other people can base

1331
01:24:19,740 --> 01:24:25,540
their work on top of it. You will then at some point have a bit of, if it becomes very

1332
01:24:25,540 --> 01:24:30,240
popular, you will have a problem to keep, because you will get pull requests on GitHub,

1333
01:24:30,240 --> 01:24:35,560
but you will also get your merge requests on GitLab. And to keep it synchronized, that

1334
01:24:35,560 --> 01:24:40,760
will be your next challenge. It's possible. Yeah. But you can then, it can be practical

1335
01:24:40,760 --> 01:24:50,520
to have one branch, which is public, published, and define that as a base of work.

1336
01:24:50,520 --> 01:24:54,200
Should we move on to the next one? Check is not so clear to me. What is a check? Who creates

1337
01:24:54,200 --> 01:24:58,760
it and how does it work? If that refers to the automated tests so that, you know, the

1338
01:24:58,760 --> 01:25:04,320
green check and the we introduced it without much explaining, we wanted to show you only

1339
01:25:04,320 --> 01:25:10,720
that it's possible to do. We will learn how to really create it and how this really works

1340
01:25:10,720 --> 01:25:19,280
Next week, right now, in short, is that at least on GitHub, if you put a script into .github

1341
01:25:19,280 --> 01:25:24,480
slash workflows, you can define that it should be run at certain events, and this is what

1342
01:25:24,480 --> 01:25:25,480
we did there.

1343
01:25:25,480 --> 01:25:26,480
Yeah.

1344
01:25:26,480 --> 01:25:28,240
But more details next week.

1345
01:25:28,240 --> 01:25:30,840
This is only, now we know it's possible.

1346
01:25:30,840 --> 01:25:32,840
Next week, we will see how to do it.

1347
01:25:32,840 --> 01:25:33,840
Yeah.

1348
01:25:33,840 --> 01:25:36,320
Maybe, like, long story short, it's something like this.

1349
01:25:36,320 --> 01:25:41,800
So last night we said, should we give a demonstration of the checkmark?

1350
01:25:41,800 --> 01:25:46,000
So we wrote some quick code that would...

1351
01:25:46,000 --> 01:25:47,780
It's a Python script.

1352
01:25:47,780 --> 01:25:49,740
It's called the checkrecipe.py.

1353
01:25:49,740 --> 01:25:54,720
It runs and it gives an error message if there's warnings.

1354
01:25:54,720 --> 01:26:01,440
And then we would tell GitHub, okay, for every pull request and every push, then run this

1355
01:26:01,440 --> 01:26:05,720
code and see, like, report the status.

1356
01:26:05,720 --> 01:26:14,440
And that's basically it, so it can be whatever you want, and there's many things that are

1357
01:26:14,440 --> 01:26:15,440
already made.

1358
01:26:15,440 --> 01:26:25,960
But yeah, I mean, next, exactly one week from now, we'll go over this in much more detail.

1359
01:26:25,960 --> 01:26:26,960
So let's talk then.

1360
01:26:26,960 --> 01:26:29,960
Yes, thanks for this one.

1361
01:26:29,960 --> 01:26:32,120
Feedback questions, we have them at the bottom.

1362
01:26:32,120 --> 01:26:33,920
So you can already start filling out feedback.

1363
01:26:33,920 --> 01:26:36,480
What did you like about today?

1364
01:26:36,480 --> 01:26:37,480
What is there to improve?

1365
01:26:37,480 --> 01:26:42,840
So this is at the end of the document, so I will scroll down, have a quick peek here

1366
01:26:42,840 --> 01:26:45,240
and then scroll back up again.

1367
01:26:45,240 --> 01:26:48,640
If you like what we're doing today, it's even more of this next week.

1368
01:26:48,640 --> 01:26:50,840
So next week will be more demo oriented.

1369
01:26:50,840 --> 01:26:57,600
But if this week was learning version control, next week is using it in practice, which of

1370
01:26:57,600 --> 01:27:01,600
course is the best way to really learn it.

1371
01:27:02,560 --> 01:27:08,480
What's the practical difference between branching and pulling versus forking and pulling?

1372
01:27:10,080 --> 01:27:16,800
The fork you only need if you cannot, if you are not allowed to create branches

1373
01:27:17,520 --> 01:27:21,840
in the repository. And of course you cannot ask the people, so if these are people you know you

1374
01:27:21,840 --> 01:27:29,120
can ask them, can you add me? If you don't have right permissions then your only option is to,

1375
01:27:29,120 --> 01:27:36,340
to, and if you want to have to copy on GitHub the only option is to fork.

1376
01:27:36,340 --> 01:27:41,500
And then fork is interesting for very big projects because then it would be, well, chaos

1377
01:27:41,500 --> 01:27:47,500
if there were 2000 branches inside the same repository.

1378
01:27:47,500 --> 01:27:49,980
Yeah.

1379
01:27:49,980 --> 01:27:53,660
How user-friendly is the GitHub interface for beginner developers?

1380
01:27:53,660 --> 01:27:57,700
Yeah, what do you think?

1381
01:27:57,700 --> 01:28:00,220
I think it is, they did a lot of improvement

1382
01:28:00,220 --> 01:28:03,060
in terms of convenience, and so is GitLab.

1383
01:28:03,060 --> 01:28:06,020
These services are, they put a lot of thought

1384
01:28:06,020 --> 01:28:09,920
and a lot of work into convenience.

1385
01:28:11,660 --> 01:28:13,300
Sometimes it can create a bit of,

1386
01:28:14,940 --> 01:28:18,860
since it can hide the technical details

1387
01:28:18,860 --> 01:28:21,140
and it can sometimes add a bit of the confusion.

1388
01:28:21,140 --> 01:28:24,700
We have seen it when we talked about tag and release.

1389
01:28:27,700 --> 01:28:31,120
But I don't know, what do you all think?

1390
01:28:31,120 --> 01:28:38,700
Should we give some history of how we ended up where we are now?

1391
01:28:38,700 --> 01:28:43,300
Last time we gave this, we started straight from the command line, and the GitHub web interface

1392
01:28:43,300 --> 01:28:48,260
was sort of an afterthought or a side thing we would look at.

1393
01:28:48,260 --> 01:28:54,100
And compared to that, the GitHub web interface is pretty easy.

1394
01:28:54,100 --> 01:28:58,900
Of course, it's true that it's not perfect, and if you start with GitHub Web Interface

1395
01:28:58,900 --> 01:29:06,220
and move to local work, it's hard, but I mean, at least it allows you to do many things

1396
01:29:06,220 --> 01:29:11,660
without lots of, like, setup yourself.

1397
01:29:11,660 --> 01:29:13,700
So, yeah.

1398
01:29:13,700 --> 01:29:21,820
Yeah, our hope was that, well, we know that everybody, people work really differently.

1399
01:29:21,820 --> 01:29:28,300
Just if we would do a poll, there would probably be 10 different editors.

1400
01:29:28,300 --> 01:29:33,140
And we don't want to tell people like this is the best editor and this is the best platform.

1401
01:29:33,140 --> 01:29:39,460
Our goal is to give you all an understanding of what is a commit, what is a branch, what

1402
01:29:39,460 --> 01:29:41,360
is code review.

1403
01:29:41,360 --> 01:29:49,780
And we were hoping that by starting with on GitHub with an existing repository that you

1404
01:29:49,780 --> 01:29:51,820
get this understanding sooner

1405
01:29:53,100 --> 01:29:56,220
and that we get this understanding without frustrations.

1406
01:29:56,220 --> 01:29:59,540
And we have seen in past workshops is that it's pity

1407
01:29:59,540 --> 01:30:02,100
if somebody is really excited about learning Git,

1408
01:30:02,100 --> 01:30:04,860
but then it gets stuck about something very technical

1409
01:30:04,860 --> 01:30:07,900
in the command line, which they have never seen before,

1410
01:30:07,900 --> 01:30:09,940
which is unrelated to Git.

1411
01:30:09,940 --> 01:30:14,500
And we wanted to try something new

1412
01:30:14,500 --> 01:30:16,220
and hopefully it was an improvement,

1413
01:30:16,220 --> 01:30:18,500
but that's why we need the feedback.

1414
01:30:18,500 --> 01:30:21,140
What I like about this project is that we experiment.

1415
01:30:22,140 --> 01:30:23,260
So this was an experiment.

1416
01:30:23,260 --> 01:30:26,480
And this was also today's lesson was an experiment.

1417
01:30:29,660 --> 01:30:32,340
How important is GitHub for job applications?

1418
01:30:32,340 --> 01:30:36,560
So for programming jobs, I think it is very important

1419
01:30:36,560 --> 01:30:37,720
and not GitHub itself,

1420
01:30:37,720 --> 01:30:41,860
but the fact that you can somewhere show your code.

1421
01:30:41,860 --> 01:30:44,940
Like a portfolio, basically, like it says there.

1422
01:30:45,800 --> 01:30:46,640
Oh yeah.

1423
01:30:46,640 --> 01:30:47,480
Yeah.

1424
01:30:47,480 --> 01:30:48,300
Yeah.

1425
01:30:48,300 --> 01:30:50,300
So, you know, is it GitHub or whatever?

1426
01:30:51,300 --> 01:30:53,300
There. I can give an example.

1427
01:30:53,300 --> 01:30:55,300
So, we were looking on hiring someone,

1428
01:30:55,300 --> 01:30:57,300
and one of the job applications

1429
01:30:57,300 --> 01:30:59,300
had actually submitted a

1430
01:30:59,300 --> 01:31:01,300
pull request to some relatively

1431
01:31:01,300 --> 01:31:03,300
large project.

1432
01:31:05,300 --> 01:31:07,300
What was that? MapPlotLib or something like that.

1433
01:31:08,300 --> 01:31:10,300
And this was really impressive because

1434
01:31:10,300 --> 01:31:12,300
it shows that, one, they

1435
01:31:12,300 --> 01:31:14,300
really know how to use version control

1436
01:31:14,300 --> 01:31:16,300
well enough, so they're not going to be

1437
01:31:16,300 --> 01:31:25,180
afraid of the simpler stuff we do, and they were able to navigate the

1438
01:31:25,180 --> 01:31:32,700
requirements for submitting it, and how to interact with people, and so on. So we

1439
01:31:32,700 --> 01:31:44,380
saw both the social and the technical skills based on this public work. So I'd

1440
01:31:44,380 --> 01:31:51,740
say pretty important. Yeah. Can you comment on test-driven development and its application

1441
01:31:51,740 --> 01:31:56,700
in research? More about that next week, but I can say now briefly that... Can we define

1442
01:31:56,700 --> 01:32:03,420
test-driven development first? So what is test-driven development? It would be that...

1443
01:32:04,860 --> 01:32:07,500
So imagine you have a code and then you have a way to test it.

1444
01:32:07,500 --> 01:32:16,300
it. But now imagine you write the test before you even write the code. So that sounds strange.

1445
01:32:16,300 --> 01:32:22,420
But the approach here is that. And there is also documentation driven development. The

1446
01:32:22,420 --> 01:32:30,340
approach is that you first describe what the code should do in documentation or in a test.

1447
01:32:30,340 --> 01:32:36,780
And then you write the code so that the test works.

1448
01:32:36,780 --> 01:32:41,820
The advantage of it is that it can make you think a little bit more about how it should

1449
01:32:41,820 --> 01:32:42,820
behave.

1450
01:32:42,820 --> 01:32:45,460
What do we want it to do?

1451
01:32:45,460 --> 01:32:50,180
We think maybe a little bit more about the interface instead of starting coding.

1452
01:32:50,180 --> 01:32:54,940
And then it's not, it doesn't mean that this is the best approach.

1453
01:32:54,940 --> 01:32:57,300
It's, it's, it's an approach is complimentary.

1454
01:32:57,300 --> 01:33:01,620
want to find a balance and then next week we will have an exercise on that I think.

1455
01:33:02,740 --> 01:33:08,260
And it really helps you modularize your code so having small functions, small classes and so on

1456
01:33:08,260 --> 01:33:11,860
instead of one humongous one which typically results from just starting and not knowing

1457
01:33:11,860 --> 01:33:18,900
exactly where to go. Yeah I guess there's test-driven development and using any kind of

1458
01:33:18,900 --> 01:33:24,900
tests. And, well, we talk about all of this next week.

1459
01:33:27,540 --> 01:33:29,620
So it has its place in research, for sure.

1460
01:33:31,060 --> 01:33:36,340
Whenever you've done research before, like research code, when you were an academic researcher,

1461
01:33:36,340 --> 01:33:45,300
did you do, did you have tests for most of your stuff? Let's say before you became

1462
01:33:45,300 --> 01:33:55,140
became, like you are now, the level of professionalness.

1463
01:33:55,140 --> 01:33:57,180
How much of your research code was well-tested?

1464
01:33:57,180 --> 01:34:03,180
Shall I start, or are you going to do another one?

1465
01:34:03,180 --> 01:34:04,180
Yeah, go ahead.

1466
01:34:04,180 --> 01:34:05,180
Okay, go.

1467
01:34:05,180 --> 01:34:09,500
So during my postdoc, I probably procrastinated the whole year with turning all of our code

1468
01:34:09,500 --> 01:34:10,500
into packages in Python.

1469
01:34:10,500 --> 01:34:11,500
Oh, okay.

1470
01:34:11,500 --> 01:34:16,260
These all had tests, at the end at least, at the beginning they didn't.

1471
01:34:16,260 --> 01:34:20,180
So I think for these parts of the code which were not used only by myself, but by the whole

1472
01:34:20,180 --> 01:34:25,940
group, probably also by people outside of the group, for that case it was very useful

1473
01:34:25,940 --> 01:34:26,940
to add tests.

1474
01:34:26,940 --> 01:34:33,340
But for scripts that I had for my everyday work, I have to admit, tests were sometimes

1475
01:34:33,340 --> 01:34:34,340
not important.

1476
01:34:34,340 --> 01:34:40,420
Yeah, so it's like the bigger projects you tested better, and the smaller ones were.

1477
01:34:40,420 --> 01:34:43,980
But I mean, that's how it should be, shouldn't it?

1478
01:34:43,980 --> 01:34:52,300
The more people that are using it, the more refined it has to be, and so on.

1479
01:34:52,300 --> 01:34:53,300
So yeah.

1480
01:34:53,300 --> 01:34:54,300
Good.

1481
01:34:54,300 --> 01:35:00,660
Should we talk about the difference between sync and merge?

1482
01:35:00,660 --> 01:35:04,540
And maybe this refers to the sync when we were updating forks.

1483
01:35:04,540 --> 01:35:05,540
Right.

1484
01:35:05,540 --> 01:35:06,540
Right.

1485
01:35:06,540 --> 01:35:10,940
And if that was it, then actually under the hood.

1486
01:35:10,940 --> 01:35:15,140
So under the DICE button and the word sync under the hood somewhere there is a merge.

1487
01:35:15,140 --> 01:35:16,140
Yeah.

1488
01:35:16,140 --> 01:35:18,220
So technically it's the same thing.

1489
01:35:18,220 --> 01:35:19,660
Is that a VS code?

1490
01:35:19,660 --> 01:35:22,140
Is that VS code terminology?

1491
01:35:22,140 --> 01:35:27,020
For maybe I think maybe it refers to the like the button on GitHub where you where you sync

1492
01:35:27,020 --> 01:35:28,020
your work.

1493
01:35:28,020 --> 01:35:29,020
Right.

1494
01:35:29,020 --> 01:35:30,020
Yeah.

1495
01:35:30,020 --> 01:35:31,020
Yeah.

1496
01:35:31,020 --> 01:35:32,020
Yeah.

1497
01:35:32,020 --> 01:35:33,020
And then it's it is a merge.

1498
01:35:33,020 --> 01:35:34,020
So it will do a merge for you.

1499
01:35:34,020 --> 01:35:35,020
It will actually.

1500
01:35:35,020 --> 01:35:41,820
pull the changes from the other repositories repository and it will merge it into your

1501
01:35:41,820 --> 01:35:49,460
local well into your branch on the fork that's what happens yeah so i guess we could say

1502
01:35:49,460 --> 01:35:55,800
sync means synchronize so that means make the two make what you're working on local

1503
01:35:55,800 --> 01:36:02,060
make two things look the same and to do that you would do merges both ways so whatever

1504
01:36:02,060 --> 01:36:07,700
is new in one, you merge to the other, and vice versa.

1505
01:36:07,700 --> 01:36:10,060
Is that your interpretation?

1506
01:36:10,060 --> 01:36:11,460
OK.

1507
01:36:11,460 --> 01:36:13,660
Then we have three minutes left, two questions left.

1508
01:36:13,660 --> 01:36:14,540
We will make it.

1509
01:36:14,540 --> 01:36:17,700
One is, can we use your learning materials

1510
01:36:17,700 --> 01:36:18,660
that you have published?

1511
01:36:18,660 --> 01:36:19,220
Yes, please.

1512
01:36:19,220 --> 01:36:21,340
So they are reusable.

1513
01:36:21,340 --> 01:36:24,180
Please use them, change them.

1514
01:36:24,180 --> 01:36:25,740
One thing that is nice for us, if you

1515
01:36:25,740 --> 01:36:28,900
let us know how you use them, because that makes it easier

1516
01:36:28,900 --> 01:36:32,300
for us to report to the people who give us funding

1517
01:36:32,300 --> 01:36:35,940
that our work is important and to please give us more money

1518
01:36:35,940 --> 01:36:38,300
and more positions and more people.

1519
01:36:38,300 --> 01:36:40,580
So let us know how you use it.

1520
01:36:40,580 --> 01:36:42,940
We are also working on,

1521
01:36:42,940 --> 01:36:45,660
and that will hopefully happen now in April,

1522
01:36:45,660 --> 01:36:48,180
to make all the lessons citable.

1523
01:36:48,180 --> 01:36:51,540
So they will all have a digital object identifier.

1524
01:36:51,540 --> 01:36:52,660
They will become citable.

1525
01:36:52,660 --> 01:36:53,660
You can then cite them.

1526
01:36:53,660 --> 01:36:57,340
And then at some point from the citation metrics,

1527
01:36:57,340 --> 01:37:00,740
we'll be able to see where they are used

1528
01:37:00,740 --> 01:37:02,540
and we'll be able to report about it.

1529
01:37:04,820 --> 01:37:07,780
What if I want to part of the repository private

1530
01:37:07,780 --> 01:37:09,520
but the rest public?

1531
01:37:09,520 --> 01:37:10,720
That's a great question.

1532
01:37:11,700 --> 01:37:16,340
In Git, it's either public or private.

1533
01:37:16,340 --> 01:37:17,740
You cannot have part of it.

1534
01:37:19,220 --> 01:37:24,220
But what you can do is that you have one repository

1535
01:37:24,220 --> 01:37:29,220
which is private and you consider one of the branches public.

1536
01:37:30,700 --> 01:37:33,580
And I would suggest keep the main branch

1537
01:37:33,580 --> 01:37:35,260
the one that is public where you have

1538
01:37:35,260 --> 01:37:38,440
to publish non-secret code.

1539
01:37:39,620 --> 01:37:41,660
And then you can mirror the one branch

1540
01:37:41,660 --> 01:37:43,740
over to another place, another repository

1541
01:37:43,740 --> 01:37:44,980
which is the public one.

1542
01:37:45,920 --> 01:37:49,020
It is relatively easy to synchronize branches

1543
01:37:49,020 --> 01:37:52,340
between repositories and then you can distinguish them

1544
01:37:52,340 --> 01:37:53,580
by the branch.

1545
01:37:53,580 --> 01:37:55,100
And you can even call it,

1546
01:37:55,100 --> 01:37:56,100
if you don't want to call it main,

1547
01:37:56,100 --> 01:37:58,100
you can call one of your branches public.

1548
01:38:00,360 --> 01:38:02,660
But the repository itself has to be either or.

1549
01:38:06,020 --> 01:38:08,260
Then somebody mentioned that you can also use sub-modules.

1550
01:38:08,260 --> 01:38:09,820
Sub-modules is a way of,

1551
01:38:09,820 --> 01:38:13,740
you can have Git repositories inside other Git repositories.

1552
01:38:13,740 --> 01:38:15,780
We didn't show that because that's another layer

1553
01:38:15,780 --> 01:38:18,520
of possible complexity and options.

1554
01:38:22,340 --> 01:38:30,740
In our remaining time, should we talk about what to expect for next week?

1555
01:38:30,740 --> 01:38:33,500
We can come back to more random Q&A.

1556
01:38:33,500 --> 01:38:40,100
So under day three, if you scroll up a bit, I started some news there.

1557
01:38:40,100 --> 01:38:43,600
So today we covered the things listed on the schedule.

1558
01:38:43,600 --> 01:38:47,480
There were three exercises there.

1559
01:38:47,480 --> 01:38:49,340
Next week will be different than this week.

1560
01:38:49,340 --> 01:38:58,780
So instead of having lots of time for the exercises, we will have more time, we'll have

1561
01:38:58,780 --> 01:39:00,500
more demonstrations.

1562
01:39:00,500 --> 01:39:05,700
So we'll show something more advanced, and then it will be up to you to do it yourself

1563
01:39:05,700 --> 01:39:11,640
after the course if you would like.

1564
01:39:11,640 --> 01:39:18,940
This is something new we're trying this week, and this is partly because the exercises start

1565
01:39:18,940 --> 01:39:27,100
to get so involved that everyone has their own pathway to do it. So we can't really support it

1566
01:39:27,100 --> 01:39:36,620
and it just needs more time than we can give during the session itself. But you will see

1567
01:39:36,620 --> 01:39:41,900
the same, like it's the same spirit of what we're doing this week. But instead of focusing on just

1568
01:39:41,900 --> 01:39:51,660
the git technology we focus on how to use git plus a lot of other things to make better research so

1569
01:39:53,020 --> 01:39:59,500
yeah there will still if you then want to work on exercises on your own you can

1570
01:40:00,220 --> 01:40:04,540
but the nice thing about week two is that invite your friends invite your colleagues they can come

1571
01:40:04,540 --> 01:40:09,500
for just one session and they can come unprepared they don't have to install anything right it's

1572
01:40:09,500 --> 01:40:14,020
It's really about watching and asking questions and getting inspired.

1573
01:40:14,020 --> 01:40:16,280
That's the goal for next week.

1574
01:40:16,280 --> 01:40:17,620
So we really hope to see you there.

1575
01:40:17,620 --> 01:40:24,280
We will start then on Tuesday, 9 o'clock Stockholm time, 10 o'clock Finland time.

1576
01:40:24,280 --> 01:40:25,940
Is there some summer time change?

1577
01:40:25,940 --> 01:40:26,940
Maybe?

1578
01:40:26,940 --> 01:40:27,940
So let's be careful.

1579
01:40:27,940 --> 01:40:30,220
I don't know when the summer time shift is.

1580
01:40:30,220 --> 01:40:32,020
Is it this weekend?

1581
01:40:32,020 --> 01:40:33,380
Yeah.

1582
01:40:33,380 --> 01:40:38,820
Nice thing about our schedule is that it automatically adapts to your time zone on the workshop schedule.

1583
01:40:38,820 --> 01:40:48,700
should hopefully all work. Yeah. I think we have amazing timing. We are. That was a good

1584
01:40:48,700 --> 01:40:57,580
day a good week. Yeah, right on time. I'd say all of [Name]'s efforts at rewriting the

1585
01:40:57,580 --> 01:41:07,900
stuff or improving the stuff definitely paid off. So do we head out then?

1586
01:41:08,700 --> 01:41:12,620
Yes, let's thank to everybody involved in first week. There is a lot of work that is

1587
01:41:12,620 --> 01:41:20,140
not immediately visible to make this run smooth. We will work on publishing the Q&A.

1588
01:41:22,460 --> 01:41:25,500
Praying for week two. We hope to see you all there and even more people.

1589
01:41:25,500 --> 01:41:31,260
And thanks, [name]. Thanks, [Name]. Thanks, everybody else. And have a nice afternoon and

1590
01:41:31,260 --> 01:41:36,220
rest of the week. There's one more thing I wanted to say. So yeah, so this we're really

1591
01:41:36,220 --> 01:41:41,820
proud of this course and think that it's a really high quality course in the academic

1592
01:41:41,820 --> 01:41:48,460
like university system. So if you like this, please tell your friends. And in order for

1593
01:41:48,460 --> 01:41:54,220
it to continue, we need more people to help us because we're just a few people. There's many

1594
01:41:54,220 --> 01:42:03,820
watchers were getting tired. So tell people around your organizations and sometime we will be looking

1595
01:42:03,820 --> 01:42:10,460
for more partners to sustain this in the future. Maybe the best thing to do is sign up to the Code

1596
01:42:10,460 --> 01:42:19,020
Refinery newsletter or follow us on one of the social medias and see whenever we ask for help,

1597
01:42:19,020 --> 01:42:28,380
help, references, partners, then send us to people at your institution and ask if you

1598
01:42:28,380 --> 01:42:29,380
can join.

1599
01:42:29,380 --> 01:42:30,380
Yes.

1600
01:42:30,380 --> 01:42:31,380
Okay.

1601
01:42:31,380 --> 01:42:32,380
That's it.

1602
01:42:32,380 --> 01:42:33,380
So, we'll keep answering questions, as usual.

1603
01:42:33,380 --> 01:42:34,380
Super.

1604
01:42:34,380 --> 01:42:35,380
Yeah.

1605
01:42:35,380 --> 01:42:36,380
Great.

1606
01:42:36,380 --> 01:42:37,380
Thanks, everybody.

1607
01:42:37,380 --> 01:42:38,380
I will click on the button.

1608
01:42:38,380 --> 01:42:39,380
I don't know whether Jingle plays or not, but see you soon.

1609
01:42:39,380 --> 01:42:40,380
Bye.

1610
01:42:40,380 --> 01:42:41,380
Bye.

1611
01:42:41,380 --> 01:42:42,380
Bye.

1612
01:42:42,380 --> 01:42:43,380
Bye.

1613
01:42:43,380 --> 01:42:44,380
Bye.

1614
01:42:44,380 --> 01:42:45,380
Bye.

1615
01:42:45,380 --> 01:42:46,380
Bye.

1616
01:42:46,380 --> 01:42:47,380
Bye.

1617
01:42:47,380 --> 01:42:48,380
Bye.

1618
01:42:48,380 --> 01:42:50,380
See you soon. Thanks, everybody

1619
01:42:51,540 --> 01:42:53,540
Bye bye

