1
00:00:00,000 --> 00:00:10,480
Hello, and welcome back.

2
00:00:10,480 --> 00:00:13,880
You hopefully can hear us now.

3
00:00:13,880 --> 00:00:19,440
Let's see, I'm adjusting something here.

4
00:00:19,440 --> 00:00:28,880
So, yeah, hopefully you had a good lunch break.

5
00:00:28,880 --> 00:00:30,440
So what do we have now?

6
00:00:30,440 --> 00:00:37,400
Well, first off, we should tell you if the things from the previous lesson were a bit

7
00:00:37,400 --> 00:00:40,060
difficult.

8
00:00:40,060 --> 00:00:45,120
We have these things called bring your own code sessions, where you can basically bring

9
00:00:45,120 --> 00:00:49,200
your work and we can look at it and provide a little bit more

10
00:00:49,200 --> 00:00:54,120
hands-on support in using these tools for your own work.

11
00:00:54,120 --> 00:00:57,080
So there's not much we can do.

12
00:00:57,080 --> 00:01:01,400
We can't help everyone, but we can at least get you started.

13
00:01:01,400 --> 00:01:05,400
If you do have more questions and you have collaborators

14
00:01:05,400 --> 00:01:10,320
or support people locally, try talking to them.

15
00:01:10,320 --> 00:01:13,000
And you can show them the Code Refinery lesson saying,

16
00:01:13,000 --> 00:01:16,840
Oh, I saw this, I would like to use it, can you help me?

17
00:01:16,840 --> 00:01:20,800
And they can probably help quite a bit.

18
00:01:20,800 --> 00:01:27,160
So what we have next, the lesson, is called Social Coding and Software Licensing.

19
00:01:27,160 --> 00:01:33,400
This used to be called Software Licensing and was about, well, the permissions of reusing

20
00:01:33,400 --> 00:01:34,400
software.

21
00:01:34,400 --> 00:01:38,400
But it's been changed so it's much more broad now.

22
00:01:38,400 --> 00:01:43,280
So in the previous lesson, we talked about ways to make it where your code could be used

23
00:01:43,280 --> 00:01:44,940
by other people.

24
00:01:44,940 --> 00:01:47,080
But do they have permission?

25
00:01:47,080 --> 00:01:51,940
And do they have permission to contribute back to your code and make this whole cycle

26
00:01:51,940 --> 00:01:56,240
of all the different things going together?

27
00:01:56,240 --> 00:02:04,040
Yeah, so, is there any other introduction or should I send it straight to you all?

28
00:02:04,040 --> 00:02:14,440
You can send it to us, we should maybe say briefly who we are and give it over to you.

29
00:02:14,440 --> 00:02:18,240
So yeah, who are our instructors for this lesson?

30
00:02:18,240 --> 00:02:22,640
We have [name], who I think is new here.

31
00:02:22,640 --> 00:02:23,640
Yeah.

32
00:02:23,640 --> 00:02:32,200
Hello, I'm [name], I work at Aalto University as a research software engineer and well,

33
00:02:32,200 --> 00:02:33,200
I suppose that's enough.

34
00:02:33,200 --> 00:02:34,200
Yeah.

35
00:02:34,200 --> 00:02:38,880
And [name], I think you know from last week.

36
00:02:38,880 --> 00:02:45,480
Yes, University of Tromso, Norway, research software engineering and support for computing

37
00:02:45,480 --> 00:02:49,080
software development, high performance computing.

38
00:02:49,080 --> 00:02:50,960
And I'm really looking forward to this lesson.

39
00:02:50,960 --> 00:02:53,240
It's a really important topic.

40
00:02:53,240 --> 00:02:55,480
It's something that we all need to think about.

41
00:02:55,480 --> 00:02:59,600
And I like how it nicely connects to the earlier session from today.

42
00:02:59,600 --> 00:03:03,040
is about, it's again about reuse,

43
00:03:03,040 --> 00:03:08,040
but less on the technical level, more on the social level.

44
00:03:08,240 --> 00:03:10,080
And what I will try to do is I will be here,

45
00:03:10,080 --> 00:03:11,840
be [name]'s sidekick.

46
00:03:11,840 --> 00:03:14,640
I will be watching the notes

47
00:03:15,560 --> 00:03:17,000
and hopefully we get lots of questions.

48
00:03:17,000 --> 00:03:19,520
I will try to keep a really lively discussion.

49
00:03:20,640 --> 00:03:22,720
So for everybody, the best way to participate

50
00:03:22,720 --> 00:03:27,720
is that you watch and listen what we do.

51
00:03:27,720 --> 00:03:34,120
there will there will not be any exercises here we will have some we will try to involve you through

52
00:03:34,120 --> 00:03:37,800
the document we will ask you some questions through the document we hope to get many answers

53
00:03:38,840 --> 00:03:42,760
and i will try to lift some questions also here into the discussion

54
00:03:45,080 --> 00:03:52,280
so this is more of a discussion session than a um well than an exercise or a demonstration

55
00:03:52,280 --> 00:03:58,280
but we'll still try to spend a good amount of time in actual discussion.

56
00:03:58,280 --> 00:04:04,280
Should we get to it?

57
00:04:04,280 --> 00:04:09,280
I will also have questions for [name], because he's actually the expert here.

58
00:04:09,280 --> 00:04:12,280
But I'll also try to keep this on track.

59
00:04:12,280 --> 00:04:16,280
Yeah, I'm not sure about the expert part, but I'm also sure that I will have questions to you too.

60
00:04:16,280 --> 00:04:18,280
So let's keep it really...

61
00:04:18,280 --> 00:04:19,280
We'll see.

62
00:04:19,280 --> 00:04:20,280
Let's see.

63
00:04:20,280 --> 00:04:24,040
Yeah. So yeah, social coding and open software. So

64
00:04:25,320 --> 00:04:30,520
yeah, this is a relatively broad section. It's about how you

65
00:04:33,080 --> 00:04:37,640
some things you need to think about when publishing your software and how to get credit

66
00:04:37,640 --> 00:04:44,280
and allow people to reuse it and in general how to interact with people around your published code.

67
00:04:44,280 --> 00:04:51,280
So let's get down to it.

68
00:04:51,280 --> 00:04:59,280
This is the plan for the course, for this section.

69
00:04:59,280 --> 00:05:03,280
So we'll first talk about social coding, general topic.

70
00:05:03,280 --> 00:05:10,280
Some about licensing and then how to get people to or how to enable people to cite your software.

71
00:05:10,280 --> 00:05:13,280
And what to consider when sharing data.

72
00:05:13,280 --> 00:05:19,440
data. So it's more about laying out things that you need to, or

73
00:05:19,760 --> 00:05:23,640
that are good to think about when you are publishing your

74
00:05:23,640 --> 00:05:31,960
work. And kind of prodding a bit at your brains and getting

75
00:05:32,800 --> 00:05:36,080
getting some ideas out so that they come to mind when you are

76
00:05:36,080 --> 00:05:42,720
actually working on this. So let's get directly to the

77
00:05:42,720 --> 00:05:50,400
or actually i can click through here social coding section and here we have our first

78
00:05:51,920 --> 00:05:57,120
exercise discussion topic so maybe i should copy this to the notes

79
00:05:58,640 --> 00:06:07,040
yeah i'm working on it so i can i'm testing okay thanks it's it's in there now okay so yeah so

80
00:06:07,040 --> 00:06:09,920
So there's a few things about,

81
00:06:09,920 --> 00:06:12,560
initial thoughts about social coding.

82
00:06:12,560 --> 00:06:15,600
So why would you want to share your code?

83
00:06:17,920 --> 00:06:19,600
Of course, talked about this already.

84
00:06:19,600 --> 00:06:23,360
Hopefully there's some ideas out there.

85
00:06:27,760 --> 00:06:30,760
So can you click to the collaborative notes?

86
00:06:30,760 --> 00:06:32,040
Yes.

87
00:06:32,040 --> 00:06:33,360
So here, what we would like is,

88
00:06:33,360 --> 00:06:36,400
we would like you all to add your votes.

89
00:06:36,400 --> 00:06:40,080
you can vote by adding these little O's

90
00:06:41,680 --> 00:06:44,160
and you can choose many in question one.

91
00:06:46,400 --> 00:06:48,200
Yeah, so we'll get a little paragraph

92
00:06:48,200 --> 00:06:49,440
and feel free to add something

93
00:06:49,440 --> 00:06:53,120
if you see something missing.

94
00:06:53,120 --> 00:06:55,120
Yeah, and here we want to hear from you.

95
00:06:56,400 --> 00:06:59,040
Yeah, what are your motivations to share code?

96
00:06:59,040 --> 00:07:01,200
What are your concerns?

97
00:07:01,200 --> 00:07:03,520
So have a look at also the other questions,

98
00:07:03,520 --> 00:07:05,240
question one, two, three, four,

99
00:07:05,240 --> 00:07:08,240
And then together now with [name], as we discuss,

100
00:07:08,240 --> 00:07:11,480
we will then return to your answers.

101
00:07:11,480 --> 00:07:13,120
And we are really curious to see

102
00:07:13,120 --> 00:07:17,600
which ones are the most motivating, most concerning.

103
00:07:22,060 --> 00:07:25,400
So why would you not share your software, basically?

104
00:07:25,400 --> 00:07:27,200
Well, why share your software?

105
00:07:27,200 --> 00:07:28,240
Why would you not?

106
00:07:30,400 --> 00:07:32,640
Yeah, how is software different from papers?

107
00:07:32,640 --> 00:07:41,240
There's a lot to talk about there, we'll come back to.

108
00:07:41,240 --> 00:07:49,440
So how about, how is it for you, [name], when, when question one, what are for you?

109
00:07:49,440 --> 00:07:50,440
Why share them?

110
00:07:50,440 --> 00:07:53,240
Out of these, which ones are the most, which one?

111
00:07:53,240 --> 00:07:54,240
Yeah, I guess.

112
00:07:54,240 --> 00:08:00,480
I mean, as a research software engineer, we mainly work for, with open software.

113
00:08:00,480 --> 00:08:08,600
So it also comes from there, but just thinking of my own projects, which are not all research

114
00:08:08,600 --> 00:08:10,320
projects.

115
00:08:10,320 --> 00:08:14,680
One big thing is to just have it out there so that I don't lose it.

116
00:08:14,680 --> 00:08:19,220
That's a really actually important motivation for sharing.

117
00:08:19,220 --> 00:08:24,480
So you never lose access to it yourself.

118
00:08:24,480 --> 00:08:25,480
That's a good one.

119
00:08:25,480 --> 00:08:26,480
Also for me.

120
00:08:26,480 --> 00:08:31,680
Jay, answer is important to me.

121
00:08:31,680 --> 00:08:36,720
How about the good for your CV, is that important for you?

122
00:08:36,720 --> 00:08:40,400
I mean, to an extent, I'm not looking for a job, or I'm not expecting to be looking

123
00:08:40,400 --> 00:08:48,440
for a job very soon, but yeah, it is an important point, especially after working as a software

124
00:08:48,440 --> 00:08:53,720
engineer for a while, if you don't have any code out there that people can see, that would

125
00:08:53,720 --> 00:09:00,360
be a bit concerning, but as a researcher, yeah, as well.

126
00:09:00,360 --> 00:09:06,440
And yeah, I mean, it is good to keep accumulating your portfolio as you go.

127
00:09:06,440 --> 00:09:13,640
But yeah, I mean, actually one of the main reasons though is that I want feedback on

128
00:09:13,640 --> 00:09:14,640
what I'm doing.

129
00:09:14,640 --> 00:09:19,080
I want to see if people are actually interested, and if they're not, then I will work on something

130
00:09:19,080 --> 00:09:20,160
else.

131
00:09:20,160 --> 00:09:23,040
So yeah, that is the main thing.

132
00:09:23,040 --> 00:09:32,040
I want people to actually see it, read it and I want to know if it's if other people

133
00:09:32,040 --> 00:09:36,560
think it's interesting because if I'm doing some research that nobody cares about then

134
00:09:36,560 --> 00:09:40,560
I should work on something else.

135
00:09:40,560 --> 00:09:47,180
What's the most concerning thing for you when sharing or and maybe what what used to be

136
00:09:47,180 --> 00:09:57,660
and what is it now? Yeah, like 10 years ago when starting my career, I was afraid that the code

137
00:09:57,660 --> 00:10:06,140
looked bad and people would just think it looks bad basically. I don't know what the downside of

138
00:10:06,140 --> 00:10:12,220
that actually would be, what would be the problem with people thinking my code looks ugly, but

139
00:10:12,220 --> 00:10:16,660
But that was a real concern.

140
00:10:16,660 --> 00:10:30,740
And right now, I think the main thing is,

141
00:10:30,740 --> 00:10:33,780
there's a definite thing on my mind.

142
00:10:33,780 --> 00:10:37,820
It's mainly that if something better already

143
00:10:37,820 --> 00:10:51,820
if I haven't actually noticed it and I'm somehow taking some eyes off the better version of it.

144
00:10:51,820 --> 00:11:10,900
How about you? What is your main reason for sharing and also for not?

145
00:11:10,900 --> 00:11:18,880
It's the, so that ideally I can reuse it in future. So I share it with everybody else

146
00:11:18,880 --> 00:11:21,440
but I also don't share it with my future self.

147
00:11:21,440 --> 00:11:22,520
So the answer, J.

148
00:11:22,520 --> 00:11:25,240
And the CV part is important,

149
00:11:25,240 --> 00:11:28,080
and the job search doesn't have to be this year, next year,

150
00:11:28,080 --> 00:11:30,600
but how about in five years, what, in 10 years?

151
00:11:30,600 --> 00:11:33,640
I would like to be able to show what I worked on,

152
00:11:34,880 --> 00:11:36,160
which means that if I have the choice

153
00:11:36,160 --> 00:11:40,120
between working on a project that is open

154
00:11:40,120 --> 00:11:43,000
and where my contribution will be visible

155
00:11:43,000 --> 00:11:44,440
and one which is completely closed

156
00:11:44,440 --> 00:11:45,720
and I cannot show it to anybody,

157
00:11:45,720 --> 00:11:48,800
I will probably choose the more open one.

158
00:11:48,800 --> 00:11:51,760
So it works also, it can also work the other way

159
00:11:51,760 --> 00:11:54,300
in attracting collaborators.

160
00:11:55,160 --> 00:11:57,680
So a project that is open will,

161
00:11:57,680 --> 00:11:59,960
is more likely to attract me to work on it

162
00:11:59,960 --> 00:12:02,680
because then I can show my work inside there.

163
00:12:02,680 --> 00:12:04,480
And how about the worries?

164
00:12:05,560 --> 00:12:07,800
Also, I used to think a lot about

165
00:12:08,880 --> 00:12:11,160
that somebody will like go in and, I don't know,

166
00:12:11,160 --> 00:12:12,200
steal the idea.

167
00:12:13,200 --> 00:12:15,720
I'm not worried about it because,

168
00:12:15,720 --> 00:12:17,560
I mean, I have a hard time understanding my own code.

169
00:12:17,560 --> 00:12:20,600
I don't think anybody else will figure it out before I do.

170
00:12:22,040 --> 00:12:24,560
And an ugly code.

171
00:12:24,560 --> 00:12:26,480
And I think if we look at the answers,

172
00:12:26,480 --> 00:12:31,000
so the answer B, it will expose my in quotes ugly code.

173
00:12:31,000 --> 00:12:33,080
It's the answer that wins today.

174
00:12:33,080 --> 00:12:35,640
And it's the answer that wins every single time.

175
00:12:35,640 --> 00:12:38,680
And hopefully it is nice for all of us to see

176
00:12:38,680 --> 00:12:41,720
that we all think that way.

177
00:12:41,720 --> 00:12:43,680
And it actually doesn't matter and nobody will judge

178
00:12:43,680 --> 00:12:47,200
and the code is never finished and it's okay.

179
00:12:47,560 --> 00:12:56,560
And when you go and find somebody else's code and it's useful and it does what you want it to do, you are happy about it.

180
00:12:56,560 --> 00:12:59,560
I mean, you don't think, well, this is ugly.

181
00:12:59,560 --> 00:13:02,560
So I find it really comforting to see.

182
00:13:02,560 --> 00:13:11,560
On the positive side, there is the more general, I mean, not just the CV, but the reputation you get.

183
00:13:11,560 --> 00:13:18,680
it's a social reward you get for publishing something that is maybe more important than

184
00:13:18,680 --> 00:13:27,080
the professional side of it. It is natural to think that if your code looks ugly then

185
00:13:27,080 --> 00:13:30,600
maybe that would kind of go in the wrong direction, maybe people don't like it,

186
00:13:31,320 --> 00:13:38,120
but in practice it's more important that there's something out there that kind of works and people

187
00:13:38,120 --> 00:13:44,200
will always be happy to find anything and I mean of course if it if it's nice and if it's ready

188
00:13:44,200 --> 00:13:50,680
and if it's usable that's good but it's still better to find something than nothing

189
00:13:56,840 --> 00:13:59,800
okay should we look at the other questions

190
00:14:02,360 --> 00:14:02,860
so

191
00:14:02,860 --> 00:14:16,460
So software is different from papers, which is true.

192
00:14:16,460 --> 00:14:25,140
So yeah, in my mind, the analogy is between software and papers.

193
00:14:25,140 --> 00:14:29,900
Papers are often usually mainly about the results, about the scientific results.

194
00:14:29,900 --> 00:14:37,900
A software publication is kind of like a publication that describes your methodology,

195
00:14:37,900 --> 00:14:46,700
your experimental setup. So if you're running an experiment or especially if you're building

196
00:14:46,700 --> 00:14:54,780
a device to run the experiment then it's also important to describe the entire process in

197
00:14:54,780 --> 00:15:01,260
detail so that people can repeat your and reproduce your study. So yeah, publishing the

198
00:15:01,260 --> 00:15:06,780
software is kind of analogous to publishing the blueprints for your experimental device or

199
00:15:06,780 --> 00:15:16,060
publishing the entire methodology of your study. And here I can say that there are

200
00:15:16,060 --> 00:15:22,060
journals that specialize on where you can publish, you can describe the software part.

201
00:15:22,060 --> 00:15:31,500
But it's not so much about publishing the research results used with the software, but

202
00:15:31,500 --> 00:15:33,700
where you can focus on the software part.

203
00:15:33,700 --> 00:15:39,140
And hopefully, towards the end of this session, we will have time to mention those and discuss

204
00:15:39,140 --> 00:15:40,140
those.

205
00:15:40,140 --> 00:15:41,140
Yeah.

206
00:15:41,140 --> 00:15:49,060
Question four is essentially, well, it's a large part of what we'll come back to.

207
00:15:49,060 --> 00:15:53,060
I don't know actually if there's a huge difference in software for question 3.

208
00:15:53,060 --> 00:16:01,060
There's about publishing rights, so I'm assuming who can publish what and what is considered plagiarism.

209
00:16:01,060 --> 00:16:05,060
I don't know that there is a huge difference there.

210
00:16:05,060 --> 00:16:15,060
Software licensing works differently because software is something you can run, you can use to do something.

211
00:16:15,060 --> 00:16:18,980
a paper is mainly the it is the text that you just read

212
00:16:18,980 --> 00:16:22,100
um so software can be used in different ways

213
00:16:22,100 --> 00:16:28,900
in more different ways than papers but in general i i think the publication

214
00:16:28,900 --> 00:16:34,180
rights work almost completely the same way

215
00:16:34,340 --> 00:16:38,900
good point and i think we will return to that to that aspect also question four

216
00:16:38,900 --> 00:16:44,180
here we wanted to hear from you but we will discuss that also in a little

217
00:16:44,180 --> 00:16:51,780
moment, I believe, or should we go there now in question for,

218
00:16:52,620 --> 00:16:55,020
um, well, I mean, we can do that.

219
00:16:55,320 --> 00:16:55,880
I don't mind.

220
00:16:56,660 --> 00:17:00,540
Um, so what do you look at?

221
00:17:00,660 --> 00:17:03,560
Um, should we answer this ourselves first?

222
00:17:03,560 --> 00:17:11,000
What's the first thing you look at when you find a, um, software written by

223
00:17:11,000 --> 00:17:13,140
someone else that you could use in your project?

224
00:17:14,180 --> 00:17:19,180
So this is about, you want to do something,

225
00:17:20,380 --> 00:17:21,900
you search for it, has anybody done it?

226
00:17:21,900 --> 00:17:25,580
And now you see that, aha, there is a repository on GitHub.

227
00:17:25,580 --> 00:17:28,580
And it's very similar to what I wanted.

228
00:17:28,580 --> 00:17:30,500
Can I just reuse it and change it?

229
00:17:31,780 --> 00:17:36,780
And the things that I would look at is license.

230
00:17:38,860 --> 00:17:39,700
Yeah.

231
00:17:40,500 --> 00:17:42,320
So can I even change it?

232
00:17:42,320 --> 00:17:45,320
and am I allowed to change it?

233
00:17:45,320 --> 00:17:48,880
And especially, as we will see in a moment,

234
00:17:48,880 --> 00:17:50,120
I can do almost anything

235
00:17:50,120 --> 00:17:51,720
if I just keep it on my own computer.

236
00:17:51,720 --> 00:17:56,000
But the important question is, am I allowed to change it

237
00:17:56,000 --> 00:17:58,120
and then publish the result?

238
00:17:58,120 --> 00:18:00,440
Because that's what I really want to do.

239
00:18:00,440 --> 00:18:02,080
So can I change it and share it?

240
00:18:03,060 --> 00:18:07,040
Because publishing and sharing is often related.

241
00:18:07,040 --> 00:18:09,500
So that's one thing I would look at,

242
00:18:09,500 --> 00:18:12,280
but there are many other good answers there.

243
00:18:12,280 --> 00:18:20,040
Yes. So how is the project still alive? How recent are the most recent commits? Are there

244
00:18:20,040 --> 00:18:29,000
open issues or pull requests? So yeah, is it being developed? And if it's old enough,

245
00:18:29,000 --> 00:18:33,000
it might not run or you might need to do a lot of work to get it to work.

246
00:18:35,160 --> 00:18:35,800
Yeah.

247
00:18:35,800 --> 00:18:39,880
It's of course also nice if it stays up to date and people can use it later.

248
00:18:39,880 --> 00:18:46,920
yeah and i do look at that when was the last change um will it be hard to install yeah but

249
00:18:46,920 --> 00:18:52,440
then if you see a project that hasn't been touched in three years i think it's it's nice if we are

250
00:18:52,440 --> 00:19:01,800
also uh it's i mean i also understand the other side i mean i have many projects that i started

251
00:19:01,800 --> 00:19:07,640
i worked on them and then i stopped working on them because if i if i would support every

252
00:19:07,640 --> 00:19:09,840
every single project that I ever started,

253
00:19:09,840 --> 00:19:12,760
at some point, I would not be able to start anything new.

254
00:19:12,760 --> 00:19:15,800
So it's a normal process that many projects,

255
00:19:15,800 --> 00:19:17,500
most projects at some point stop.

256
00:19:19,040 --> 00:19:22,760
And it's nice if we are constructive about it

257
00:19:22,760 --> 00:19:23,600
and nice about it.

258
00:19:23,600 --> 00:19:24,800
So you could also be the person

259
00:19:24,800 --> 00:19:27,200
who then finds a project that has stopped

260
00:19:27,200 --> 00:19:29,120
and takes it up and revives it.

261
00:19:32,320 --> 00:19:34,280
So sometimes I feel bad when I get,

262
00:19:34,280 --> 00:19:35,640
I see comments on my own projects,

263
00:19:35,640 --> 00:19:41,960
this is this this is a dead project nobody has the issues are not followed up the pull requests

264
00:19:41,960 --> 00:19:49,480
are not merged yeah well uh yeah maybe somebody else can do that this is open source and at some

265
00:19:49,480 --> 00:19:54,280
point i need to move on to other projects yeah it's always better to have it out there than

266
00:19:55,320 --> 00:20:01,160
not so even if you cannot actually continually develop it you just need it for your current

267
00:20:01,160 --> 00:20:04,360
thing and then it's done it's still better to have it out there

268
00:20:08,840 --> 00:20:13,000
of course it is also good to communicate clearly that you are no longer developing it so that

269
00:20:15,400 --> 00:20:22,440
other people feel free to pick it up and yeah continue working on great question on

270
00:20:23,240 --> 00:20:27,400
line 247 so what exactly is software if i write a python code

271
00:20:27,400 --> 00:20:32,400
a script that does an analysis to get the result of a paper.

272
00:20:33,880 --> 00:20:36,960
So is that part of software?

273
00:20:36,960 --> 00:20:38,120
Is this what we're talking about here?

274
00:20:38,120 --> 00:20:40,720
Should we then, do we need to think about licenses?

275
00:20:42,920 --> 00:20:44,120
And it's a rhetorical question.

276
00:20:44,120 --> 00:20:45,880
So yes, yes, it is software.

277
00:20:45,880 --> 00:20:48,000
It can even be, it can be a short script.

278
00:20:48,880 --> 00:20:50,560
And then we don't have to do much.

279
00:20:50,560 --> 00:20:53,720
We can add a license file or on top of the script,

280
00:20:53,720 --> 00:20:56,220
we can write that this script is shared under the,

281
00:20:57,400 --> 00:21:02,160
MIT license or GPL, and we will see what they mean

282
00:21:03,240 --> 00:21:06,800
in a moment, so it can be, that can be enough.

283
00:21:07,960 --> 00:21:11,840
But basically anything to reproduce the results,

284
00:21:11,840 --> 00:21:15,960
data, software, we need to think about license.

285
00:21:20,080 --> 00:21:21,840
Because I made a little script that

286
00:21:23,080 --> 00:21:25,120
maybe it takes me 20 minutes to write.

287
00:21:25,120 --> 00:21:27,140
Maybe it will save somebody else days.

288
00:21:27,400 --> 00:21:30,680
somebody else will be really grateful if they don't have to write it and can reuse it.

289
00:21:31,400 --> 00:21:34,600
Yeah, or even if it takes 20 minutes that's still time saved.

290
00:21:36,840 --> 00:21:41,720
So especially it is important if this is actually something you've used to

291
00:21:41,720 --> 00:21:48,120
produce a figure or a result in your paper to actually publish it in such a way that it can

292
00:21:48,120 --> 00:21:53,880
actually someone else can use it to reproduce the results in your paper and then go from there to

293
00:21:53,880 --> 00:22:02,520
add on to it. Yeah, it is important to publish that. And it is software, so it needs a software

294
00:22:02,520 --> 00:22:08,360
license and all of that.

295
00:22:08,360 --> 00:22:12,400
So I'm watching as questions will go on, and I might trace them, but maybe, yeah, maybe

296
00:22:12,400 --> 00:22:14,200
you can move on and follow up.

297
00:22:14,200 --> 00:22:23,040
Yes, let's go on to. Yeah, so, well, comparing, sharing papers and sharing code is exactly

298
00:22:23,040 --> 00:22:30,240
what we were just talking about.

299
00:22:30,240 --> 00:22:37,280
Something we didn't really go into is academic credit, which all researchers roughly know

300
00:22:37,280 --> 00:22:38,880
how it works.

301
00:22:38,880 --> 00:22:44,600
You use an idea from another paper, you're not directly using any text from the paper,

302
00:22:44,600 --> 00:22:49,200
you just read the paper and then you are continuing to work.

303
00:22:49,200 --> 00:22:57,120
you cite the paper in your own publications. And that is kind of the currency of academia in a way

304
00:22:59,680 --> 00:23:02,640
that shows that people are actually interested in your work and

305
00:23:03,520 --> 00:23:08,720
you are building or you are adding something important to a field of science.

306
00:23:11,920 --> 00:23:18,880
So yeah, the thing you want to do as a scientist is put papers out there, have people cite them

307
00:23:18,880 --> 00:23:22,000
and you never want to put any restrictions on them or anything like that

308
00:23:23,360 --> 00:23:29,520
yeah good point and often there are restrictions but they come from maybe from the journalists but

309
00:23:30,400 --> 00:23:34,480
not from the researchers you want maximum visibility for your papers

310
00:23:35,600 --> 00:23:40,720
yeah of course I mean yeah if you publish in a journal then it might not be openly available

311
00:23:42,160 --> 00:23:44,320
hopefully there is an openly available version somewhere

312
00:23:44,320 --> 00:23:59,600
Okay, so software or code can or works a bit differently, so you can kind of mix and match

313
00:23:59,600 --> 00:24:04,560
and well, I mean, you can mix and match research trials in a way you create some understanding

314
00:24:04,560 --> 00:24:06,520
of a topic and then you cite them.

315
00:24:06,520 --> 00:24:11,560
But here you can actually take blocks off or copies of lines of code from something

316
00:24:11,560 --> 00:24:17,080
or you can use a library that someone else has written. So you can mix and match in a more

317
00:24:17,080 --> 00:24:27,720
complicated way and build on top of other people's work. So one quick question is,

318
00:24:27,720 --> 00:24:33,560
should you cite software that you use? When should you cite it? Should you cite

319
00:24:34,360 --> 00:24:40,280
the Linux operating system? How far do you go? I guess we will come back to that.

320
00:24:42,120 --> 00:24:49,160
that question at some point. But yeah, with software the situation gets more complicated.

321
00:24:49,160 --> 00:24:56,360
So there's the dependencies on which you build your software and then there is

322
00:24:56,920 --> 00:25:02,040
the algorithms, the scientific methodology that is kind of implied by the software.

323
00:25:02,600 --> 00:25:05,560
So there's a lot more considerations there.

324
00:25:05,560 --> 00:25:19,500
Okay, so I mean a lot of journals require you to share that share your code much should

325
00:25:19,500 --> 00:25:25,400
we go in there we spend a good amount of time looking at the questions but this didn't actually

326
00:25:25,400 --> 00:25:26,400
come up

327
00:25:26,400 --> 00:25:33,760
We can just summarize that yeah today we and in future we might not have the choice whether

328
00:25:33,760 --> 00:25:37,520
we like want to share it or don't want to share it and it's a good thing I think there

329
00:25:37,520 --> 00:25:42,720
is a yeah so it seems that in future we will be required to personally I find it a good

330
00:25:42,720 --> 00:25:48,960
development but it also means for us now that we we have to start thinking about it so whatever

331
00:25:48,960 --> 00:25:54,400
I use now I have to be ready so that if I then share it in five years when the project

332
00:25:54,400 --> 00:26:03,360
is done and we are publishing then I need to be able to share it yeah yeah so when from

333
00:26:03,360 --> 00:26:08,520
From the start, you need to think about this licensing and these sorts of things so that

334
00:26:08,520 --> 00:26:11,040
you can actually share the code when the time comes.

335
00:26:11,040 --> 00:26:12,040
Yeah.

336
00:26:12,040 --> 00:26:13,040
Okay.

337
00:26:13,040 --> 00:26:19,480
We got a couple of great questions, so maybe we have time, I just want to raise them.

338
00:26:19,480 --> 00:26:26,040
So what was the biggest thing that raised your awareness of this, like the biggest event

339
00:26:26,040 --> 00:26:29,240
and led you to adopt better practices?

340
00:26:29,240 --> 00:26:31,720
Was it seeing other people using these practices?

341
00:26:31,720 --> 00:26:50,360
Is it that conferences I think in my original field where I was most of my work most of

342
00:26:50,360 --> 00:26:56,920
my time as a researcher where I was developing the code there wasn't really a tradition of

343
00:26:56,920 --> 00:27:04,200
sharing or publishing openly, anything. It took quite a while. I think I was actually

344
00:27:04,200 --> 00:27:09,640
a research software engineer by the time I properly started sharing my own research codes.

345
00:27:12,360 --> 00:27:18,280
I think the main thing was actually seeing it done in other fields, but also I was often

346
00:27:18,280 --> 00:27:29,520
frustrated when two groups came up with different results for what is essentially the same question

347
00:27:29,520 --> 00:27:37,580
and there was no clear way of checking, even checking that their code produces that result

348
00:27:37,580 --> 00:27:40,280
because you didn't have access to their code.

349
00:27:40,280 --> 00:27:46,900
So yeah, that was quite frustrating and of course then you see people just publishing

350
00:27:46,900 --> 00:27:53,700
their code that is the obvious solution to the problem of course it's still good to have both

351
00:27:53,700 --> 00:27:58,340
codes that produce those different results so that you can actually figure out what's going on but

352
00:27:59,140 --> 00:28:04,340
yeah not publishing it is the original problem there is one more question that but it's more

353
00:28:04,340 --> 00:28:08,500
general i wonder do we have time now for one more question or should i postpone it it's not

354
00:28:08,500 --> 00:28:14,260
it can also wait well i think we should have time the questions that are now on the screen

355
00:28:14,260 --> 00:28:16,500
are actually something we already talked about.

356
00:28:17,620 --> 00:28:21,460
Yeah, one thing that I wanted to discuss a little bit

357
00:28:21,460 --> 00:28:23,540
is this, whether we can give examples

358
00:28:23,540 --> 00:28:26,340
of repositories we've worked on.

359
00:28:26,340 --> 00:28:27,620
And I'm paraphrasing here.

360
00:28:27,620 --> 00:28:28,980
So the person says that,

361
00:28:30,020 --> 00:28:33,460
I'm working on one project over many years.

362
00:28:34,740 --> 00:28:35,940
And is the project too big

363
00:28:35,940 --> 00:28:37,380
or am I just really inefficient?

364
00:28:37,380 --> 00:28:39,700
And I just wanted to say, no, I mean, probably not.

365
00:28:39,700 --> 00:28:40,340
It's normal.

366
00:28:40,340 --> 00:28:41,540
I would say that's the normal thing

367
00:28:41,540 --> 00:28:44,900
that I think many researchers will work years,

368
00:28:44,900 --> 00:28:47,500
maybe even decades on one coding project.

369
00:28:47,500 --> 00:28:49,220
And there's nothing wrong with it.

370
00:28:49,220 --> 00:28:51,340
Because then you really know it well.

371
00:28:51,340 --> 00:28:54,140
You know all the ins and outs, you know what it can do.

372
00:28:54,140 --> 00:28:56,020
You can implement new ideas in it quickly

373
00:28:56,020 --> 00:28:57,780
because you know it so well.

374
00:28:58,900 --> 00:29:01,500
We as research software engineers

375
00:29:01,500 --> 00:29:02,900
would typically help researchers.

376
00:29:02,900 --> 00:29:06,740
So we often jump from project to project

377
00:29:06,740 --> 00:29:08,700
because at least in my case,

378
00:29:08,700 --> 00:29:11,300
I'm now often, I'm not driving the project.

379
00:29:11,300 --> 00:29:17,140
is somebody else and I help out. So then I do more jumping from project to project. But

380
00:29:17,700 --> 00:29:20,420
I just wanted to say that there's nothing wrong with it. I think that's the normal

381
00:29:20,420 --> 00:29:30,340
situation. I think it's a good sign if you end up spending a lot of time on a single

382
00:29:30,340 --> 00:29:37,380
coding project. I have some that were kind of one and done, wrote down an algorithm and

383
00:29:37,380 --> 00:29:39,420
and publish the paper on it.

384
00:29:39,420 --> 00:29:42,900
And then I have a few where the project evolved

385
00:29:42,900 --> 00:29:44,660
for years and years and years

386
00:29:44,660 --> 00:29:46,980
and someone else is now working on it.

387
00:29:46,980 --> 00:29:49,180
And those second ones are of course the ones

388
00:29:49,180 --> 00:29:51,860
where other people are actually interested in the results.

389
00:29:51,860 --> 00:29:52,980
The first ones are the ones

390
00:29:52,980 --> 00:29:55,700
where the paper didn't really get cited

391
00:29:55,700 --> 00:29:57,500
and I moved on to something else.

392
00:29:58,380 --> 00:30:01,580
That is why I didn't continue developing them.

393
00:30:03,540 --> 00:30:05,180
Yeah, great.

394
00:30:05,180 --> 00:30:07,100
Okay, let's move on to licenses.

395
00:30:07,100 --> 00:30:09,860
Should we talk about licenses the next episode?

396
00:30:09,860 --> 00:30:14,380
Yes, we did we talk about reusability yet?

397
00:30:14,380 --> 00:30:17,820
Well, that is actually something we will talk about

398
00:30:17,820 --> 00:30:19,220
in the next section as well.

399
00:30:21,380 --> 00:30:26,380
What from here do we need to bring up before we go on?

400
00:30:27,100 --> 00:30:28,980
The thing that I would bring up here

401
00:30:28,980 --> 00:30:33,220
is also contribution guide.

402
00:30:33,220 --> 00:30:36,460
It can be nice to see in a project how to contribute.

403
00:30:36,460 --> 00:30:37,300
Yeah.

404
00:30:37,300 --> 00:30:38,120
How to get started?

405
00:30:38,120 --> 00:30:39,460
What is the decision process?

406
00:30:41,580 --> 00:30:43,660
Especially in a bigger project,

407
00:30:43,660 --> 00:30:48,300
it can be a bit daunting to just see a huge bunch of files

408
00:30:48,300 --> 00:30:50,540
where you have no idea how everything interacts

409
00:30:50,540 --> 00:30:51,780
with everything else.

410
00:30:51,780 --> 00:30:53,700
It is important to have a good style guide

411
00:30:53,700 --> 00:30:57,220
and contribution guide so that you know how to get started.

412
00:30:57,220 --> 00:31:02,220
And yeah, mostly everything else we have already talked about.

413
00:31:07,420 --> 00:31:08,780
So let's move on

414
00:31:11,340 --> 00:31:20,220
and talk about licenses. Okay so this is obviously a very important topic when it comes to publishing

415
00:31:20,220 --> 00:31:25,820
your code without a license no one can really do much with your code you're just kind of putting it

416
00:31:25,820 --> 00:31:34,380
out there for people to read but with the license you state what people can actually do

417
00:31:34,380 --> 00:31:41,260
with with the code that you publish so we'll need to talk about derivative work

418
00:31:41,260 --> 00:31:48,220
what actually is derivative work so when you take someone else's project or actually well

419
00:31:48,220 --> 00:31:54,060
I'll just finish the sentence so when you take somebody else's project and make some changes to

420
00:31:54,060 --> 00:31:59,580
it when does it count as derivative work and when not when can you just share it and when do you need

421
00:31:59,580 --> 00:32:05,660
to follow the license and I guess the answer to that the way I just said it is kind of obvious

422
00:32:05,660 --> 00:32:10,940
because if you're actually working on someone else's code that is the route to work but it

423
00:32:10,940 --> 00:32:18,380
can be even more than that. And then we'll talk about available licenses and what do they mean

424
00:32:19,180 --> 00:32:25,660
and give some practical advice. So what you should take away from here is basically

425
00:32:25,660 --> 00:32:33,420
when do you need to think about licenses and where to go and check what my license means what.

426
00:32:34,860 --> 00:32:39,020
And we will try to keep it really practical so we will not go through all the different licenses and

427
00:32:39,980 --> 00:32:43,420
discuss the pros and cons but we want to give you practical advice of where to start,

428
00:32:43,420 --> 00:32:52,380
where to look for, how to compare and what to do in your repository to be ready for this.

429
00:32:52,380 --> 00:32:56,380
So there's a few things around this general concept of copyright.

430
00:32:56,380 --> 00:33:03,380
We'll mainly talk about copyright specifically, but there's trademarks.

431
00:33:03,380 --> 00:33:06,380
So the trademark is a name for something.

432
00:33:06,380 --> 00:33:09,380
It could be, of course, the name of your software,

433
00:33:09,380 --> 00:33:13,380
but in general, it's just a name that is public,

434
00:33:13,380 --> 00:33:19,380
the sort of public face of a product or a thing.

435
00:33:19,380 --> 00:33:28,580
A patent is a technical invention, that's novel and non-obvious, but the basic idea

436
00:33:28,580 --> 00:33:34,360
is that it is a technical invention rather than a product or a thing you can just kind

437
00:33:34,360 --> 00:33:40,380
of look at or it's not an object, it's not a file.

438
00:33:40,380 --> 00:33:43,480
And then copyright applies to almost everything else.

439
00:33:43,480 --> 00:33:55,920
So it applies to creative expressions, something you spend time on creating.

440
00:33:55,920 --> 00:34:07,380
So it could be software, writing, graphics, photos, books, movies, and yeah, copyright.

441
00:34:07,380 --> 00:34:13,980
you have right to the things that you create for basically forever from your point of view.

442
00:34:13,980 --> 00:34:19,340
So lifetime of the author plus 70 years. I don't know what jurisdiction that is but it's

443
00:34:19,340 --> 00:34:27,300
roughly correct in almost any jurisdiction. Yeah, of course, try to reproduce it and 70

444
00:34:27,300 --> 00:34:33,260
years later. So let's see what is the running but the yeah. So the important takeaway is

445
00:34:33,260 --> 00:34:39,580
we we create creative work so we are creative people when we write code and scripts it falls

446
00:34:39,580 --> 00:34:45,660
under copyright and then [name] you mentioned that you have copyright so the question is who is you

447
00:34:45,660 --> 00:34:51,020
it could be the person it could be your employer so that sometimes it depends

448
00:34:52,300 --> 00:34:56,780
it depends on the country depends on the employer yeah depends on your contract

449
00:34:56,780 --> 00:35:02,460
so this is also something to think about and practically speaking that can be complicated

450
00:35:02,460 --> 00:35:09,660
even if like people try to make it sometimes as clear as possible so maybe it's that the

451
00:35:10,540 --> 00:35:16,060
company always owns everything or maybe it's the idea is that you or the person who writes it the

452
00:35:16,060 --> 00:35:19,820
employer owns like if you're working in a university you might own the copyright to

453
00:35:19,820 --> 00:35:26,700
everything but it can still get complicated so it is just easier to make sure you handle the

454
00:35:26,700 --> 00:35:33,020
copyright situation immediately so that it doesn't get into so that you don't get into

455
00:35:33,020 --> 00:35:39,100
a complicated situation which means deciding on a license and publishing under a license

456
00:35:41,980 --> 00:35:50,700
and a great question on on the notes is that now that we have generative AI and we have AI

457
00:35:50,700 --> 00:35:57,180
artificial intelligence assisted coding. Yeah. It opens a whole new set of questions

458
00:35:57,180 --> 00:36:03,820
about licenses, about copyright, about ethics of it.

459
00:36:03,820 --> 00:36:10,360
And we, I guess we may have a section on it, but most of these services, all of these services

460
00:36:10,360 --> 00:36:17,340
as far as I know right now, they do give the user the copyright, they give it away or you

461
00:36:17,340 --> 00:36:25,020
buy it from them. But even if they do that, you only have copyright if it's not derivative

462
00:36:25,020 --> 00:36:31,500
work or if it's not a direct copy of something that already exists, which is something you

463
00:36:31,500 --> 00:36:36,820
just have to check yourself. You cannot trust that the system will take care of that for

464
00:36:36,820 --> 00:36:37,820
you.

465
00:36:37,820 --> 00:36:41,860
Yeah, but it's also hard to check. It's hard to know where this code comes from. And a

466
00:36:41,860 --> 00:36:42,940
completely different question,

467
00:36:42,940 --> 00:36:45,420
which is really hard to answer is,

468
00:36:45,420 --> 00:36:49,540
the original creators, do they get credit?

469
00:36:49,540 --> 00:36:50,540
Are they credited?

470
00:36:50,540 --> 00:36:52,780
Are they, did they agree to it?

471
00:36:52,780 --> 00:36:55,500
And was their license respected?

472
00:36:55,500 --> 00:36:57,860
So that's a completely different set of questions.

473
00:36:57,860 --> 00:36:58,700
Yeah.

474
00:37:00,420 --> 00:37:04,220
Yeah, there, if you are thinking

475
00:37:04,220 --> 00:37:05,860
that there might be an original author,

476
00:37:05,860 --> 00:37:08,740
then the simplest case would be that,

477
00:37:08,740 --> 00:37:11,660
oh, the best way out of it would be

478
00:37:11,660 --> 00:37:15,280
to just assume that they have copyright and respect it

479
00:37:15,280 --> 00:37:17,680
because then you will not get in trouble.

480
00:37:17,680 --> 00:37:19,020
Yeah.

481
00:37:19,020 --> 00:37:20,760
So [name], what is derivative work

482
00:37:20,760 --> 00:37:23,040
and why is it so important for us

483
00:37:23,040 --> 00:37:26,100
when we write and change software?

484
00:37:27,520 --> 00:37:28,360
Yeah.

485
00:37:28,360 --> 00:37:30,280
So derivative works, the name says,

486
00:37:30,280 --> 00:37:32,840
basically means you have taken something

487
00:37:32,840 --> 00:37:34,500
and made changes to it.

488
00:37:35,840 --> 00:37:38,800
It may be even completely re-implemented it,

489
00:37:38,800 --> 00:37:41,920
but it is somehow derived from someone else's

490
00:37:41,920 --> 00:37:43,420
copyrighted work.

491
00:37:43,420 --> 00:37:44,960
So it's derived from something

492
00:37:44,960 --> 00:37:46,600
where someone else has copyright.

493
00:37:48,000 --> 00:37:49,720
And it could be sampling.

494
00:37:49,720 --> 00:37:53,520
We have some nice images of historical images

495
00:37:53,520 --> 00:37:55,920
of actual resampling going on.

496
00:37:55,920 --> 00:37:56,760
Yes.

497
00:37:56,760 --> 00:37:57,720
It works on many levels there.

498
00:37:57,720 --> 00:37:58,960
I think we have a clip for people.

499
00:37:58,960 --> 00:38:00,360
I will copy it to the notes.

500
00:38:00,360 --> 00:38:02,800
You can, you can,

501
00:38:02,800 --> 00:38:03,640
Yeah.

502
00:38:03,640 --> 00:38:04,800
You can vote on it.

503
00:38:04,800 --> 00:38:06,120
Yeah.

504
00:38:06,120 --> 00:38:08,560
So there's some examples

505
00:38:08,560 --> 00:38:11,200
and the question is if they are derivative work or not.

506
00:38:11,200 --> 00:38:12,580
So I don't know if I should,

507
00:38:12,580 --> 00:38:16,320
well, I'll give the quick guide to how to answer it.

508
00:38:16,320 --> 00:38:19,300
But when you are,

509
00:38:20,140 --> 00:38:22,180
yeah, like I said, when you're taking something

510
00:38:22,180 --> 00:38:26,140
and changing it, that's kind of clearly derivative work,

511
00:38:26,140 --> 00:38:28,060
but often it's also derivative work

512
00:38:28,060 --> 00:38:31,220
if you are taking an idea from something,

513
00:38:31,220 --> 00:38:35,100
but not like you're using someone else's code,

514
00:38:35,100 --> 00:38:37,300
for example, to write it in a different language

515
00:38:37,300 --> 00:38:44,580
just rewrite it, that might still be derivative work. As long as it's derived from a copyrighted

516
00:38:44,580 --> 00:38:52,820
work, it is derivative work. It depends on the field. If you are taking ideas from a painting

517
00:38:52,820 --> 00:38:56,340
and creating your own painting, usually we don't consider that derivative work.

518
00:38:57,380 --> 00:39:02,820
If you are translating a Python library into R, even if you are completely rewriting it,

519
00:39:02,820 --> 00:39:09,380
it's still considered derivative working well usually so I hope I didn't give out the answer

520
00:39:09,380 --> 00:39:15,860
to a direct question maybe I did but that's kind of the general guideline so it can be quite expensive

521
00:39:18,260 --> 00:39:24,420
and so we have to we have to think about it both when we if I find some code on the internet

522
00:39:25,460 --> 00:39:32,260
then I change it I have to think about derivative work let's go and we have to think the other way

523
00:39:32,260 --> 00:39:36,420
to think about derivative work is do you want to make it easy or difficult for other people to

524
00:39:36,420 --> 00:39:42,340
change things and that you can also then steer a little bit with the choice of license

525
00:39:46,900 --> 00:39:53,300
yeah so yeah the license can give you can give it people the right to create derivative work

526
00:39:53,300 --> 00:40:02,100
as much as they want or it can restrict it a lot okay um should we start going through this

527
00:40:02,260 --> 00:40:08,420
i guess so yeah so a couple of them are maybe not so surprising the thing that was surprising

528
00:40:08,420 --> 00:40:15,940
to me many years ago is that when even changing the whole language nothing is left from the old

529
00:40:15,940 --> 00:40:21,460
code not not a single character everything has completely changed i i was surprised that

530
00:40:21,460 --> 00:40:29,700
that is that is derivative work yeah so nobody has voted for linking to libraries

531
00:40:29,700 --> 00:40:36,980
But, in fact, if a library is published under the traditional, standard GNU public license,

532
00:40:36,980 --> 00:40:43,540
for example, and you statically link to it, that can still be considered, that is still

533
00:40:43,540 --> 00:40:46,500
considered derivative work.

534
00:40:46,500 --> 00:40:50,860
So for some licenses, it depends how we link to it.

535
00:40:50,860 --> 00:40:57,300
I think maybe that's a little bit technical, we will not go into too much details.

536
00:40:57,300 --> 00:41:02,540
So for plugins and libraries, typically it's not derivative work, but it can be depending

537
00:41:02,540 --> 00:41:06,620
how it is included, linked into your project.

538
00:41:06,620 --> 00:41:10,660
And maybe it's a bit arcane because this is mainly talking about compiled languages and

539
00:41:10,660 --> 00:41:16,640
like old engine stuff like C and C++, but I mean, people are actually still of course

540
00:41:16,640 --> 00:41:17,640
using them.

541
00:41:17,640 --> 00:41:22,860
And the reason I bring it up is because I was using this when I found out about this

542
00:41:22,860 --> 00:41:26,780
and I was kind of surprised and had to change some things.

543
00:41:26,780 --> 00:41:33,700
But answers, so questions H and I, they, so when we, when you, so H means clean room design,

544
00:41:33,700 --> 00:41:40,380
it means that you don't see, you never see the code, but somebody explains you what the

545
00:41:40,380 --> 00:41:46,300
code does, how it works, you can think of explains you the algorithm, and then you write

546
00:41:46,300 --> 00:41:47,300
the code.

547
00:41:47,300 --> 00:41:49,060
So that is typically not derivative work.

548
00:41:49,060 --> 00:41:55,340
Also, if you read the paper, read the algorithm and write the code based on the algorithm,

549
00:41:55,340 --> 00:42:00,060
typically not derivative work so an algorithm is typically not something that can be copyrighted

550
00:42:02,460 --> 00:42:06,860
yeah yeah so if you're implementing an algorithm that's not derivative work

551
00:42:07,820 --> 00:42:13,740
if somebody describes you what the code does um on a more detailed level and you just write down

552
00:42:13,740 --> 00:42:17,580
what they're telling you telling to go to do then that actually probably is derivative work

553
00:42:20,460 --> 00:42:24,860
so yeah i mean clean room design means you know the algorithm but you don't know the actual code

554
00:42:25,340 --> 00:42:39,380
Okay. So containers. Okay. So yeah, recipes are like source code. Containers are like

555
00:42:39,380 --> 00:42:46,860
a program. But we didn't actually talk about specifically the licenses yet. Okay. Let's

556
00:42:46,860 --> 00:42:55,320
go there. Because this is an important topic. It's about choosing which license to use

557
00:42:55,320 --> 00:43:02,720
use and also what it means when a code has been published under a specific license.

558
00:43:02,720 --> 00:43:07,320
So there's, well, there's proprietary licenses, which generally mean you have sold a piece

559
00:43:07,320 --> 00:43:12,960
of software and you have rather restrictive, you sell a rather restrictive license that

560
00:43:12,960 --> 00:43:16,800
they can, only this person can use it for this purpose.

561
00:43:16,800 --> 00:43:21,840
Yeah, that's because you're actually selling it and getting money from it.

562
00:43:21,840 --> 00:43:25,220
But mainly talk about open source licenses.

563
00:43:25,220 --> 00:43:34,380
So they range from strong copyleft, which means derivative work has to be published

564
00:43:34,380 --> 00:43:38,000
also under a strong copyleft license.

565
00:43:38,000 --> 00:43:45,860
You can think of it as the license kind of infects everything it touches.

566
00:43:45,860 --> 00:43:54,100
So everything that uses a strongly copyleft piece of code also will be strongly copyleft

567
00:43:54,100 --> 00:43:55,960
or at least copyleft.

568
00:43:55,960 --> 00:43:58,780
So I guess that the main difference here

569
00:43:58,780 --> 00:44:02,660
between strong copyleft and copyleft is that

570
00:44:04,260 --> 00:44:07,660
copyleft is the less strong version is usually designed

571
00:44:07,660 --> 00:44:10,580
so that you can actually link against it or use it,

572
00:44:10,580 --> 00:44:13,160
use the products, use the library

573
00:44:13,160 --> 00:44:16,300
without having to publish your code as copyleft.

574
00:44:17,700 --> 00:44:19,540
Whereas strong copyleft is kind of,

575
00:44:19,540 --> 00:44:22,220
it just tries to make everything copyleft

576
00:44:22,220 --> 00:44:24,700
as much as possible.

577
00:44:24,700 --> 00:44:29,800
And I think it's useful to not think in too much in terms of using because the using could

578
00:44:29,800 --> 00:44:31,980
be linking plugin.

579
00:44:31,980 --> 00:44:34,420
Maybe let's think in terms of remixing.

580
00:44:34,420 --> 00:44:38,280
You take a couple of codes from different places and you remix them with your own work

581
00:44:38,280 --> 00:44:40,020
and this is your code.

582
00:44:40,020 --> 00:44:43,480
So remixing and then what is interesting are the little arrows.

583
00:44:43,480 --> 00:44:49,980
So in the in the image that Tiano is sharing there are these fields and the arrows between

584
00:44:49,980 --> 00:44:52,140
they actually show the compatibility.

585
00:44:52,140 --> 00:44:55,200
What license can you combine with another license?

586
00:44:56,980 --> 00:45:00,660
The one on top, so the so-called strong copy left,

587
00:45:01,620 --> 00:45:03,160
the arrow goes only one way.

588
00:45:05,020 --> 00:45:09,400
Then if we go a little bit lower towards the dark green,

589
00:45:09,400 --> 00:45:11,460
we have the permissive licenses,

590
00:45:11,460 --> 00:45:12,460
and they are called permissive

591
00:45:12,460 --> 00:45:15,860
because they can be combined with almost anything,

592
00:45:15,860 --> 00:45:18,340
even with proprietary licenses.

593
00:45:18,340 --> 00:45:20,660
but you can see that the arrow there goes only one way.

594
00:45:20,660 --> 00:45:25,060
So you can take a code that has been licensed MIT

595
00:45:25,060 --> 00:45:26,880
and if you want, you can make it proprietary.

596
00:45:26,880 --> 00:45:29,660
You can sell it, you can close it.

597
00:45:29,660 --> 00:45:31,020
So all of this is possible.

598
00:45:34,020 --> 00:45:34,860
Right.

599
00:45:36,180 --> 00:45:37,600
Yeah, and yeah.

600
00:45:37,600 --> 00:45:42,600
So a copy left software cannot be used in a,

601
00:45:43,400 --> 00:45:49,400
software cannot be used in in a well yeah there's there's often a separate proprietary

602
00:45:49,400 --> 00:45:54,360
license for a copyleft library but that license cannot be directly used in a proprietary thing

603
00:45:57,000 --> 00:46:02,280
oh it cannot be it cannot be distributed together with a proprietary thing and um

604
00:46:03,080 --> 00:46:08,600
which means that now now let's think in two different perspectives one is that

605
00:46:08,600 --> 00:46:14,360
that I just want to use the code. That's one perspective. But the other perspective is

606
00:46:14,360 --> 00:46:19,320
we develop the code. And now you can decide what do you want with your code to happen?

607
00:46:19,320 --> 00:46:27,280
Do you want it to be used in as many places as possible, proprietary, not proprietary,

608
00:46:27,280 --> 00:46:32,360
then you would prefer probably a permissive license. If you want to make it as easy as

609
00:46:32,360 --> 00:46:37,680
possible for everybody else. On the other hand, if you want to make sure that your code

610
00:46:37,680 --> 00:46:42,680
is not distributed with another proprietary code,

611
00:46:44,080 --> 00:46:47,460
then you probably want to move up on that green pyramid

612
00:46:47,460 --> 00:46:51,440
and choose a more so-called copyleft license.

613
00:46:54,500 --> 00:46:58,320
Right, yes, this is mainly about distributing, not running.

614
00:46:58,320 --> 00:47:00,040
If you're just running on your own machine

615
00:47:00,040 --> 00:47:01,820
or even making changes on your own machine,

616
00:47:01,820 --> 00:47:04,680
that's usually not something we think about.

617
00:47:07,680 --> 00:47:13,120
So the license doesn't really restrict you from just running or even changing it on

618
00:47:13,120 --> 00:47:17,440
like locally and never showing it to anyone. Although it's kind of hard to

619
00:47:18,640 --> 00:47:22,800
never show something to anyone, but in principle that's allowed.

620
00:47:24,240 --> 00:47:27,760
So it is mainly about distributing. Somebody's asking, what is the

621
00:47:27,760 --> 00:47:33,360
difference between MIT and Creative Commons? Because here they are on the same image.

622
00:47:33,360 --> 00:47:43,680
Yes. MIT and BSD are traditionally software licenses and Apache. The differences between

623
00:47:43,680 --> 00:47:53,400
them are small. Creative Commons is traditionally more for data and for both artistic things

624
00:47:53,400 --> 00:48:00,060
like books, like lecture materials, and not so much for software that's intended to run

625
00:48:00,060 --> 00:48:06,180
and produce a result, for example. So there are differences in the way it's written. And

626
00:48:06,180 --> 00:48:12,260
I would basically just use software licenses for software and creative commons for other

627
00:48:12,260 --> 00:48:15,500
things. What if you have both earlier in the session,

628
00:48:15,500 --> 00:48:22,420
we had on we had a repository example repository, there was data and there were scripts and

629
00:48:22,420 --> 00:48:27,380
read me's and maybe a manuscript. So what can you do if you have data and code in the

630
00:48:27,380 --> 00:48:34,160
same place. And I can answer it myself. You can, you can put, you can then put both licenses.

631
00:48:34,160 --> 00:48:41,000
You can say that, well, all the data, all the slides are licensed creative commons attribution

632
00:48:41,000 --> 00:48:47,120
and all the code is licensed MIT. And that's what we do in, in our code refinery lessons.

633
00:48:47,120 --> 00:48:54,440
So that's how we license our material. Yeah. So yeah, nothing forces you to just use one

634
00:48:54,440 --> 00:48:59,720
license for an entire repository, you can have different licenses per folder or per file.

635
00:49:02,280 --> 00:49:07,080
The only thing to take into account there is that you have to then, well you have to look at those

636
00:49:07,080 --> 00:49:13,880
arrows there, you are distributing them at the same time if they are in the same repository.

637
00:49:15,480 --> 00:49:21,880
So there might be some compatibility issues. Also even there you can have the data be

638
00:49:21,880 --> 00:49:28,360
creative commons and have a gpl strong copy left license for the software that will not be a

639
00:49:28,360 --> 00:49:34,920
problem the software is not so directly linked with the data that that would be a problem

640
00:49:36,600 --> 00:49:40,200
but still you you in that case you do need to take those arrows into account

641
00:49:43,320 --> 00:49:50,840
okay um well well something we didn't really mention is this lowest level here which is

642
00:49:51,880 --> 00:49:55,720
It's so permissive that there's not really even a license there.

643
00:49:55,720 --> 00:50:05,360
It's just published as public domain and anyone can do anything they want with it.

644
00:50:05,360 --> 00:50:09,960
Often these lower levels here might require at least attribution.

645
00:50:09,960 --> 00:50:20,680
You need to tell where you got the code or the data.

646
00:50:20,680 --> 00:50:26,880
So yeah, there's a great resource here for this join up licensing assistant is very useful

647
00:50:26,880 --> 00:50:32,160
when you're trying to actually figure out what license to use.

648
00:50:32,160 --> 00:50:35,840
Should we, it's 10 to two, I should say.

649
00:50:35,840 --> 00:50:38,720
I think what I would like to do before, we will take a break soon.

650
00:50:38,720 --> 00:50:43,840
I would say maybe in five minutes, what we could try to do in before the break into five

651
00:50:43,840 --> 00:50:50,280
minutes is that we, there were some good questions that I want to bring up later when we discuss

652
00:50:50,280 --> 00:50:54,040
But one question that we could talk about now is what should we do practically?

653
00:50:54,040 --> 00:51:00,040
So we have this overview, let's say we choose a specific license, but what should I do then

654
00:51:00,040 --> 00:51:03,240
practically with my repository?

655
00:51:03,240 --> 00:51:11,200
And so one thing that we advise you to do, and I think this is so in the material people

656
00:51:11,200 --> 00:51:14,140
you can find it a little bit below that scheme,

657
00:51:14,140 --> 00:51:19,140
is add a license file to your,

658
00:51:20,760 --> 00:51:22,920
it can be either a file called license,

659
00:51:22,920 --> 00:51:26,880
or it can be, if you need multiple licenses,

660
00:51:26,880 --> 00:51:29,040
you can create a directory called licenses,

661
00:51:30,740 --> 00:51:35,740
and add the license text into the repository.

662
00:51:37,680 --> 00:51:39,640
The other practical advice is to do it

663
00:51:39,640 --> 00:51:40,720
early in the project.

664
00:51:41,200 --> 00:51:47,120
because when there is nothing there, when the project is small, it's only one person,

665
00:51:47,760 --> 00:51:54,720
it's easy to change it. When the project already exists for 15 years and there are 20 people there

666
00:51:55,520 --> 00:51:59,600
from five different institutions, then it's more difficult to change the license.

667
00:52:05,520 --> 00:52:09,440
Unfortunately, a common problematic situation which we did run into with those

668
00:52:09,440 --> 00:52:17,440
long existing codes in the field of science where stuff wasn't really published when I was there.

669
00:52:17,440 --> 00:52:25,440
Several of those software were published later and somebody did actually figure out where I was working at

670
00:52:25,440 --> 00:52:36,440
and write an email to my work address and ask if they can publish the changes I made to the code under a specific license.

671
00:52:36,440 --> 00:52:41,360
So, you have to do that with every author that has made changes to your projects.

672
00:52:41,360 --> 00:52:43,840
And when it's just you or just your team, it's really easy.

673
00:52:43,840 --> 00:52:45,520
So yeah, do it then.

674
00:52:45,520 --> 00:52:49,480
And when somebody has left and gone through five different postdoc positions and is now

675
00:52:49,480 --> 00:52:55,000
working as a research software engineer in, well, you have no idea where, it's really

676
00:52:55,000 --> 00:52:56,000
hard.

677
00:52:56,000 --> 00:52:57,000
Yeah.

678
00:52:57,000 --> 00:53:01,040
Because then you need to possibly reach out to all of them and get their agreement.

679
00:53:01,040 --> 00:53:02,040
Yeah.

680
00:53:02,040 --> 00:53:04,680
So, do it early.

681
00:53:04,680 --> 00:53:09,620
For most projects, a license file is enough.

682
00:53:09,620 --> 00:53:15,520
On top of your code, you can add that this code is licensed under this and that.

683
00:53:15,520 --> 00:53:17,260
It's not strictly necessary.

684
00:53:17,260 --> 00:53:22,900
So you don't have to add the copyright header for it to have the copyright.

685
00:53:22,900 --> 00:53:26,960
And then another thing that we recommend is to have this discussion with your group.

686
00:53:26,960 --> 00:53:32,940
So if maybe have a discussion with your supervisor, or if you are the supervisor, have a discussion

687
00:53:32,940 --> 00:53:35,080
with your students at the beginning of a project.

688
00:53:35,080 --> 00:53:38,980
Discuss, it's a little bit like a data,

689
00:53:40,640 --> 00:53:41,480
what is it called?

690
00:53:41,480 --> 00:53:42,920
Data management plan.

691
00:53:42,920 --> 00:53:44,000
Like, what is your plan?

692
00:53:44,000 --> 00:53:45,760
What is our plan to do now,

693
00:53:45,760 --> 00:53:48,080
three years later when the code is done?

694
00:53:48,080 --> 00:53:49,200
How do we want to share it?

695
00:53:49,200 --> 00:53:50,320
What is the license strategy?

696
00:53:50,320 --> 00:53:52,200
This is, discuss it with your colleagues,

697
00:53:52,200 --> 00:53:53,100
with your project.

698
00:53:56,080 --> 00:53:57,240
Discuss the ownership.

699
00:53:57,240 --> 00:54:03,160
Yes.

700
00:54:03,160 --> 00:54:08,600
And the copyright matters, ownership matters, because only those who have the copyright

701
00:54:08,600 --> 00:54:13,720
can change the license, and it may be your employer.

702
00:54:13,720 --> 00:54:21,320
Yeah, and it is also, so a lot of these bigger projects, for example, will have this contribution

703
00:54:21,320 --> 00:54:26,280
guide or contribution agreement that essentially states that you are giving away copyright

704
00:54:26,280 --> 00:54:28,160
or you're publishing it under this license.

705
00:54:28,160 --> 00:54:30,160
So if it's an MIT license, for example,

706
00:54:30,160 --> 00:54:33,600
then it's enough that you publish under that license.

707
00:54:33,600 --> 00:54:37,560
But they might actually ask you to give away your copyright

708
00:54:37,560 --> 00:54:41,040
to that change that you're making to a big project

709
00:54:41,040 --> 00:54:43,560
because then they don't have to chase you up

710
00:54:43,560 --> 00:54:46,160
if they want to change the license.

711
00:54:46,160 --> 00:54:50,040
So that's also something good to talk about

712
00:54:50,040 --> 00:54:52,560
already in the beginning with your team.

713
00:54:52,560 --> 00:54:54,000
If somebody leaves the team,

714
00:54:54,000 --> 00:54:56,160
then do they give away the copyright?

715
00:54:56,160 --> 00:55:03,520
do you does your team have permission to do whatever with the code which I mean usually

716
00:55:03,520 --> 00:55:09,800
it should it is good to have so how about we take a 10 minute break then we can think about

717
00:55:09,800 --> 00:55:14,360
more questions hopefully we will see more questions and then in the last half an hour

718
00:55:14,360 --> 00:55:20,120
we will talk about software citations data and hopefully we get lots of questions that

719
00:55:20,120 --> 00:55:21,640
that we can hear discuss.

720
00:55:24,480 --> 00:55:25,560
Does this sound like a good idea?

721
00:55:25,560 --> 00:55:28,440
If yes, then let's be back five minutes after the hour.

722
00:55:28,440 --> 00:55:30,260
So a 10 minute break.

723
00:55:32,940 --> 00:55:33,780
Okay.

724
00:55:33,780 --> 00:55:35,640
Yes, let's take a break, walk around.

725
00:55:35,640 --> 00:55:36,480
See you.

726
00:55:37,480 --> 00:55:38,600
Bye.

727
00:55:38,600 --> 00:55:39,440
Bye.

728
00:55:40,000 --> 00:55:55,040
Hello. We are back. Hopefully you can hear us. And I hope you had a good break. Stretch

729
00:55:55,040 --> 00:56:02,200
your legs a little bit will be another talky section but we'll have some well we'll have

730
00:56:02,200 --> 00:56:08,400
a lot of interaction with the notes like in the previous section hopefully.

731
00:56:08,400 --> 00:56:12,640
So you wanted to bring up a question which I'm conveniently already have visible here.

732
00:56:12,640 --> 00:56:13,640
Yes.

733
00:56:13,640 --> 00:56:14,640
Yeah.

734
00:56:14,640 --> 00:56:16,840
So I wanted to say thanks to all the really good questions.

735
00:56:16,840 --> 00:56:19,660
Please keep them coming also for the remaining 20 minutes.

736
00:56:19,660 --> 00:56:22,600
This is the best way of creating the session.

737
00:56:22,600 --> 00:56:25,860
And one thing that we thought would be good to discuss

738
00:56:25,860 --> 00:56:27,500
is the question that,

739
00:56:31,440 --> 00:56:32,280
so the one,

740
00:56:33,660 --> 00:56:35,700
so what happens if somebody actually uses a code

741
00:56:35,700 --> 00:56:36,640
without permission?

742
00:56:41,560 --> 00:56:42,400
Is that the one?

743
00:56:42,400 --> 00:56:43,220
Yes.

744
00:56:43,220 --> 00:56:44,060
Yeah.

745
00:56:44,060 --> 00:56:44,880
How can you show that they used it?

746
00:56:44,880 --> 00:56:45,720
And what can you do?

747
00:56:45,720 --> 00:56:57,720
I mean, there's the legal side of this, and then there's how things work in academia.

748
00:56:57,720 --> 00:57:03,680
Because universities or researchers don't want to be fighting each other in court, especially

749
00:57:03,680 --> 00:57:09,040
when they are in different countries and different jurisdictions anyway.

750
00:57:09,040 --> 00:57:13,600
But I mean, legally speaking, it is actually breaking the law.

751
00:57:13,600 --> 00:57:22,400
doing something illegal and there are systems to handle this. It might be too minor to really

752
00:57:22,400 --> 00:57:27,120
get a lot of attention and like I said, you probably don't want to go to court with it.

753
00:57:29,520 --> 00:57:35,520
But that is at least for big companies or universities that might be something

754
00:57:36,800 --> 00:57:41,920
that they think about. And more practically speaking though, if somebody publishes a

755
00:57:41,920 --> 00:57:48,640
paper using your code and doesn't credit you or does it breaks the license when they do it,

756
00:57:48,640 --> 00:57:55,280
does it against the license text, that is academic misconduct. That's like if they publish the paper

757
00:57:56,000 --> 00:58:01,920
then the journal would probably take it into account and maybe retract the paper.

758
00:58:03,760 --> 00:58:08,640
It's also true that academia works a lot through reputation.

759
00:58:08,640 --> 00:58:20,240
So, um, basically just talking about it is, um, is part of the solution to the problem.

760
00:58:20,240 --> 00:58:21,240
Yeah.

761
00:58:21,240 --> 00:58:29,800
And it can be another motivation also to, to open up our own code and put it on Git,

762
00:58:29,800 --> 00:58:34,840
because at least if somebody steals my code, at least I can show it because I can show

763
00:58:34,840 --> 00:58:40,120
the git history and i can show that well that's weird the code that they published looks exactly

764
00:58:40,120 --> 00:58:48,360
like the one that i put on github 2014 how come so at least you have a you have a basis

765
00:58:48,360 --> 00:58:52,920
for an argument so this can maybe help us to motivate to share our own codes

766
00:58:52,920 --> 00:59:04,920
Another thing we didn't mention about licenses at the end of the previous section.

767
00:59:04,920 --> 00:59:18,920
So at the end of the licenses section there is a part about choosing a license in case what you're publishing is not derivative work, you're starting from scratch and you actually have to choose a license.

768
00:59:18,920 --> 00:59:25,360
There's a lot of practical tips here, it's a useful read when you're actually choosing

769
00:59:25,360 --> 00:59:28,360
a license, it's good to come back to this.

770
00:59:28,360 --> 00:59:34,760
But one important thing is it's just practically not a good idea to invent your own license.

771
00:59:34,760 --> 00:59:42,080
So these standards exist for a reason, they've been written by lawyers and you don't really

772
00:59:42,080 --> 00:59:45,840
want to try to do the work of the lawyers.

773
00:59:45,840 --> 00:59:54,760
plenty of standard license texts available and importantly this this is

774
00:59:54,760 --> 01:00:01,480
tools around that people use that recognize standard licenses so if your

775
01:00:01,480 --> 01:00:06,240
license is not standard people will not know what to do with it the lawyers will

776
01:00:06,240 --> 01:00:11,120
probably say just don't use it I don't know what to do and if you if you can

777
01:00:11,120 --> 01:00:13,360
Let's scroll up a little bit to that image again.

778
01:00:14,600 --> 01:00:17,440
It's, what's the scenario here?

779
01:00:17,440 --> 01:00:19,240
It's really about the compatibility.

780
01:00:19,240 --> 01:00:22,920
So these are the arrows between licenses.

781
01:00:22,920 --> 01:00:24,800
And if you invent your own,

782
01:00:24,800 --> 01:00:28,680
it will not be clear what it is compatible with.

783
01:00:28,680 --> 01:00:30,080
So that's really the problem.

784
01:00:30,080 --> 01:00:31,720
So don't invent your own license

785
01:00:33,480 --> 01:00:35,440
or take one of the standard ones.

786
01:00:35,440 --> 01:00:39,920
And [name], which, what is your most favorite license?

787
01:00:39,920 --> 01:00:45,200
Which one do you typically take for your projects when you have to choose?

788
01:00:45,200 --> 01:00:53,560
When I'm starting and there's no reason to choose any specific license, then I would

789
01:00:53,560 --> 01:00:55,520
probably go with MIT.

790
01:00:55,520 --> 01:00:56,520
And why?

791
01:00:56,520 --> 01:00:57,520
Just by default.

792
01:00:57,520 --> 01:01:06,800
It's the most permissive license that allows people to do anything they want with it, but

793
01:01:06,800 --> 01:01:16,720
still requires that they acknowledge you. I don't want it to be completely in public domain because

794
01:01:16,720 --> 01:01:22,880
I still want people to acknowledge that I've done some of the work, maybe slightly selfishly, but

795
01:01:22,880 --> 01:01:32,240
it's not very selfish though to put it under MIT. I want it to be as widely used as possible,

796
01:01:32,240 --> 01:01:38,960
but i also want to be recognized um yeah what's your favorite

797
01:01:40,800 --> 01:01:47,680
it's either so mit for the things that i just want to share and i don't really mind so much

798
01:01:47,680 --> 01:01:55,600
what happens to that code yeah sometimes i i want to make sure that when people make changes

799
01:01:55,600 --> 01:02:01,380
changes to the code that they are obliged to share the changes.

800
01:02:01,380 --> 01:02:04,820
And then I go for the share alike, the reciprocal.

801
01:02:04,820 --> 01:02:08,780
So here it's on this image is called reciprocal licenses.

802
01:02:08,780 --> 01:02:16,900
For instance, the MPL, the Mozilla public license or the EUPL, the European public license.

803
01:02:16,900 --> 01:02:24,300
So often I go for those if I want to make sure that whatever people come up with all

804
01:02:24,300 --> 01:02:31,100
improvements i can remix them into my own projects also so it goes both ways so when i want to insist

805
01:02:31,100 --> 01:02:37,340
on the both ways i go for the reciprocal licenses but they are a little bit more restrictive

806
01:02:38,140 --> 01:02:42,380
if i don't care yeah or if it's such a like a little project and

807
01:02:43,340 --> 01:02:47,260
probably nobody will do anything with it anyway than mit

808
01:02:47,260 --> 01:03:01,820
Yeah. At some point, I think I've maybe done it once. I could move from MIT to a reciprocal

809
01:03:01,820 --> 01:03:08,340
license, but I would generally start with MIT just by default. When there's no other

810
01:03:08,340 --> 01:03:18,100
file in the project, except the license file, then it's MIT.

811
01:03:18,100 --> 01:03:25,100
That's how early I think it's good to start thinking about licenses.

812
01:03:25,100 --> 01:03:29,820
Shall we talk more about the credit part and the technology of it?

813
01:03:29,820 --> 01:03:34,740
So how to cite, how does it work, software citation and software publication?

814
01:03:34,740 --> 01:03:37,380
And this is also about academic citation.

815
01:03:37,380 --> 01:03:40,340
So the MIT license requires acknowledgment,

816
01:03:40,340 --> 01:03:45,140
but that's not quite the same thing as a citation

817
01:03:45,140 --> 01:03:47,100
as researchers think about it.

818
01:03:47,100 --> 01:03:50,740
So this enables also citing software

819
01:03:50,740 --> 01:03:52,420
as an academic publication.

820
01:03:53,900 --> 01:03:56,580
Well, that's one thing we'll talk about.

821
01:03:56,580 --> 01:04:01,280
So a couple of questions there that we'll try to answer.

822
01:04:02,340 --> 01:04:04,780
If you put your code on GitHub, GitLab and so on,

823
01:04:04,780 --> 01:04:05,780
is that publishing?

824
01:04:05,780 --> 01:04:07,220
We already talked about licenses.

825
01:04:07,220 --> 01:04:10,180
So assume you also put a license there.

826
01:04:10,180 --> 01:04:12,700
Is that publishing?

827
01:04:12,700 --> 01:04:15,020
Where do you publish software?

828
01:04:15,020 --> 01:04:16,940
How can it be cited?

829
01:04:16,940 --> 01:04:18,300
How do you make it cited?

830
01:04:18,300 --> 01:04:20,220
How do you make the software citable?

831
01:04:24,100 --> 01:04:25,420
Yeah, so let's get into it.

832
01:04:28,300 --> 01:04:32,980
So just putting your software on GitHub and GitLab,

833
01:04:32,980 --> 01:04:36,980
that is a good part of publishing.

834
01:04:36,980 --> 01:04:41,620
We've mentioned these FAIR principles, I think last week at least.

835
01:04:44,180 --> 01:04:52,580
It's a collection of four words to think about when it comes to publishing and doing

836
01:04:52,580 --> 01:04:55,540
reproducible science in general, so not just software.

837
01:04:56,900 --> 01:05:02,500
It comes from findable, accessible, reusable and interoperable.

838
01:05:02,500 --> 01:05:10,500
So, if you put something on GitHub or GitLab, it's accessible.

839
01:05:10,500 --> 01:05:13,060
If people can find it, it's accessible.

840
01:05:13,060 --> 01:05:15,380
It's also pretty findable.

841
01:05:15,380 --> 01:05:24,260
GitHub is good at indexing things and GitLab, if GitLab here means the official GitLab.org

842
01:05:24,260 --> 01:05:30,920
interface, then it's pretty good at indexing things so that search engines can find it.

843
01:05:30,920 --> 01:05:37,120
doesn't make it reusable necessarily depends on the license and how on the

844
01:05:37,120 --> 01:05:44,000
coding practices and it does not make it interoperable interoperable would mean

845
01:05:44,000 --> 01:05:50,640
that it runs on different system and it plugs into or it can be used in in

846
01:05:50,640 --> 01:05:55,160
different different kinds of situations with different types of data and so on

847
01:05:55,160 --> 01:05:59,640
and there can be also problem with which of the findable there is a very simple

848
01:05:59,640 --> 01:06:05,240
simple trick on how I can make my code not findable anymore. And that is by what if I

849
01:06:05,240 --> 01:06:11,400
delete the repository? What if I delete my account? So it's a good first step, but it's

850
01:06:11,400 --> 01:06:16,200
it's not enough to make it really findable for the next, I don't know, five years, 10

851
01:06:16,200 --> 01:06:20,440
years. Yeah. I don't know what the horizon is that we want to make things findable. So

852
01:06:20,440 --> 01:06:28,240
we want to go a step further. And one way is to really make it citable and persistent.

853
01:06:28,240 --> 01:06:34,880
Yeah. Okay, so we'll talk about making it, well, first citable and then persistent.

854
01:06:37,840 --> 01:06:46,400
Okay, Katz is here. Hello. So, of course, we also already talked about reproducible and

855
01:06:46,400 --> 01:06:54,240
how to make it work after five years. That is also a big deal. But yeah, so let's talk about

856
01:06:54,240 --> 01:07:03,200
that a little bit. So what do you actually need to cite something? And I guess one

857
01:07:04,240 --> 01:07:08,480
pretty important, very important question is what software do you actually cite? So

858
01:07:12,160 --> 01:07:16,240
if you use, I mentioned the Linux operating system, I guess that's an obvious thing.

859
01:07:16,240 --> 01:07:21,840
If you use the Linux operating system, you probably don't cite it. But if you use a

860
01:07:21,840 --> 01:07:29,840
a specifically scientific software library that someone else published with their paper,

861
01:07:29,840 --> 01:07:36,720
then you probably do need to cite it. But there is some balance there. Different fields have

862
01:07:36,720 --> 01:07:43,320
different conventions about what you cite, even when it comes to papers. We never cite

863
01:07:43,320 --> 01:07:49,640
Einstein, for example, in physics these days. No, I mean,

864
01:07:49,720 --> 01:07:51,760
that was about those I said in the wrong way around, I was

865
01:07:51,760 --> 01:07:54,800
about to say we don't cite Newton and not even Einstein,

866
01:07:54,800 --> 01:07:58,800
but I kind of said it the wrong way around. But anyway, so if

867
01:07:58,800 --> 01:08:04,560
something is really fundamental enough, and it has its, it has

868
01:08:04,560 --> 01:08:09,680
intrinsic value already, then it's known enough, you don't

869
01:08:09,680 --> 01:08:12,320
need to cite it. But that, yeah, that depends a lot on the

870
01:08:12,320 --> 01:08:17,600
field and the same applies to software but earlier today we talked about dependencies

871
01:08:17,600 --> 01:08:25,680
so in the other session and so are dependencies fundamental like if i if i want to cite a code

872
01:08:25,680 --> 01:08:30,480
but the code is using five other dependencies and each of them uses five other dependencies

873
01:08:31,600 --> 01:08:38,400
do i need to cite all of those yeah that is a good question and i think my answer would be that

874
01:08:38,400 --> 01:08:41,400
But we don't have to.

875
01:08:41,400 --> 01:08:43,300
So you don't have to cite all the different dependencies.

876
01:08:43,300 --> 01:08:48,520
You cite the libraries that you use, that your code is using.

877
01:08:48,520 --> 01:08:52,880
And then you are hoping that the libraries in turn, when they publish their papers, they

878
01:08:52,880 --> 01:08:56,800
are citing all the other libraries they are using.

879
01:08:56,800 --> 01:09:01,480
So for a lot of things, just having it as a dependency might be enough.

880
01:09:01,480 --> 01:09:07,280
Like if it's a really commonly used library, you might not cite it in a paper.

881
01:09:07,280 --> 01:09:11,600
I would actually, I would maybe follow a citation trail kind of.

882
01:09:11,600 --> 01:09:17,280
So if you are citing a piece of software and that piece of software is citing another piece

883
01:09:17,280 --> 01:09:21,080
of software, then you should consider whether to cite it or not.

884
01:09:21,080 --> 01:09:28,360
But if that other piece of software just has it as a dependency, it's not citing it, then

885
01:09:28,360 --> 01:09:33,200
it's also probably the case that you don't cite it, although it depends on the situation,

886
01:09:33,200 --> 01:09:35,680
depends on how much.

887
01:09:35,680 --> 01:09:40,280
So citations are about the giving credit for the science.

888
01:09:40,280 --> 01:09:46,960
So it and dependency is about being able to run the software.

889
01:09:46,960 --> 01:09:52,760
So you use them for those, for different things.

890
01:09:52,760 --> 01:09:58,840
And one thing that will help so much when citing is in your code, write down how you

891
01:09:58,840 --> 01:10:01,000
want to be cited.

892
01:10:01,000 --> 01:10:02,840
Already this relatively simple thing.

893
01:10:02,840 --> 01:10:05,440
If I can find it easily, how do I will cite you?

894
01:10:05,440 --> 01:10:11,980
I will cite you that way make it easy for me to find out how you want to be cited.

895
01:10:11,980 --> 01:10:19,160
So for that I mean there are things you need to know how to for citing a piece of software

896
01:10:19,160 --> 01:10:24,840
or a piece of paper or a paper or anything and I mean here's a complete list or maybe

897
01:10:24,840 --> 01:10:30,120
an almost complete list but you can make life easier for other people by creating these

898
01:10:30,120 --> 01:10:40,920
citation.cff file and it is a structured way of writing it down in a machine readable way

899
01:10:40,920 --> 01:10:44,680
and it contains all of the information that's needed to cite your software.

900
01:10:46,680 --> 01:10:55,240
So this is a message that's displayed or it says essentially just this is how you cite my software

901
01:10:55,240 --> 01:11:03,160
but yeah this title, version, maybe a digital object identifier or it is actually very good

902
01:11:03,160 --> 01:11:10,680
to have one, we'll come back to that, and then the names of the authors and maybe identifiers for

903
01:11:10,680 --> 01:11:17,400
them. So that's the same information you would look for in a paper to cite it and you just

904
01:11:17,400 --> 01:11:27,800
provide it here in a format that makes it easy to find. Now github for example will read this file

905
01:11:27,800 --> 01:11:33,720
and process it to different standard citation formats so that you can put them into whatever

906
01:11:33,720 --> 01:11:41,480
software you use to write your paper and cite other software. Okay so that's a good thing to

907
01:11:41,480 --> 01:11:47,240
add it's a really these days it became a standard and many services understand this file so if this

908
01:11:47,240 --> 01:11:55,800
file is in your repository, then many services will use it. So have such a file, get a digital

909
01:11:55,800 --> 01:12:02,200
object identifier on services like Zenodo, where you can make your code really persistent. So then

910
01:12:02,200 --> 01:12:09,960
even if I delete my GitHub repository, people can still find the code thanks to the DOI.

911
01:12:09,960 --> 01:12:18,840
Zenodo is nice in that it integrates with GitHub so that whenever you create a new release

912
01:12:18,840 --> 01:12:24,940
on GitHub, if you have enabled Zenodo, then it will create a new release also on Zenodo,

913
01:12:24,940 --> 01:12:32,140
make a new copy so that you don't really have to do much to keep it up to date.

914
01:12:32,140 --> 01:12:38,700
Here's some examples of how to cite software following standard formats.

915
01:12:42,140 --> 01:12:47,180
There's also some journals that allow you to publish software papers. That's another way

916
01:12:47,180 --> 01:12:54,220
of making your software citable. There's a good list of those here.

917
01:12:57,500 --> 01:12:59,820
I think that's all you need to know how to make it citable.

918
01:12:59,820 --> 01:13:02,820
Is this another section?

919
01:13:02,820 --> 01:13:03,820
Yes.

920
01:13:03,820 --> 01:13:04,820
No.

921
01:13:06,820 --> 01:13:09,820
So the last section is about sharing data.

922
01:13:11,820 --> 01:13:12,820
Yes.

923
01:13:12,820 --> 01:13:17,820
So we have a few minutes, so you should probably go there.

924
01:13:20,820 --> 01:13:25,820
But yeah, for getting the DOI, that is a separate section.

925
01:13:29,820 --> 01:13:36,820
Okay, is there anything in the notes about citations?

926
01:13:36,820 --> 01:13:40,520
Yeah, there is this question about citations in the CFF file.

927
01:13:40,520 --> 01:13:43,020
And I think it's a good question because it's very general.

928
01:13:43,020 --> 01:13:52,560
It's about which particular version should people cite when they use the code.

929
01:13:52,560 --> 01:13:56,980
Because one thing you can do on services like Zenodo is that for each version of your code

930
01:13:56,980 --> 01:14:00,020
you can get a different DOI.

931
01:14:00,020 --> 01:14:00,860
Yeah.

932
01:14:00,860 --> 01:14:05,860
And then you can, you can recommend people to, to cite.

933
01:14:06,300 --> 01:14:07,780
So I would probably, my recommendation would be

934
01:14:07,780 --> 01:14:08,900
that people should cite the version

935
01:14:08,900 --> 01:14:10,260
that they've actually used.

936
01:14:11,220 --> 01:14:15,460
But then you are maybe interested in knowing

937
01:14:15,460 --> 01:14:17,940
what is the combined number of citations

938
01:14:17,940 --> 01:14:19,340
that my software has.

939
01:14:19,340 --> 01:14:20,660
Yeah.

940
01:14:20,660 --> 01:14:22,220
And that you can also get this information.

941
01:14:22,220 --> 01:14:23,460
So you would be more interested

942
01:14:23,460 --> 01:14:25,380
in the sum of all of the versions.

943
01:14:25,380 --> 01:14:26,420
but it might be also interesting

944
01:14:26,420 --> 01:14:28,860
to see the evolution of versions.

945
01:14:28,860 --> 01:14:32,620
So Zenodo actually creates this sort of sub-DOIs.

946
01:14:32,620 --> 01:14:37,420
So a DOI that essentially ends with the version number

947
01:14:37,420 --> 01:14:40,420
or a numeric identifier for the version.

948
01:14:40,420 --> 01:14:44,180
And that allows you to,

949
01:14:44,180 --> 01:14:48,760
so you can cite the specific version using that identifier

950
01:14:48,760 --> 01:14:51,100
and it will still count the citation,

951
01:14:51,100 --> 01:14:53,140
all the citations to your software together

952
01:14:53,140 --> 01:14:54,380
when you want to.

953
01:14:54,380 --> 01:14:59,380
So, yeah, I mean, digital object identifiers

954
01:15:01,380 --> 01:15:03,620
actually support versioning directly.

955
01:15:04,860 --> 01:15:07,940
So that's something you can do.

956
01:15:07,940 --> 01:15:09,860
The service will also create one

957
01:15:09,860 --> 01:15:12,900
which will always resolve to the latest version

958
01:15:12,900 --> 01:15:14,520
if you find it practical.

959
01:15:14,520 --> 01:15:17,260
So maybe that's the one that you can have in your readme.

960
01:15:18,540 --> 01:15:19,380
Yeah.

961
01:15:20,820 --> 01:15:22,500
Okay, so.

962
01:15:24,380 --> 01:15:29,380
About sharing data is at the bottom, by the way, if anyone needs to really.

963
01:15:29,380 --> 01:15:30,380
Yeah.

964
01:15:30,380 --> 01:15:31,380
Oh, yeah.

965
01:15:31,380 --> 01:15:33,380
Please do fill in the feedback.

966
01:15:33,380 --> 01:15:38,380
We have five minutes so we can quickly look at sharing data, which is not that different.

967
01:15:38,380 --> 01:15:44,380
But there's a few more considerations you need to take into account.

968
01:15:44,380 --> 01:15:46,380
But also data.

969
01:15:46,380 --> 01:15:48,380
You don't need a software license for data, essentially.

970
01:15:48,380 --> 01:15:57,660
essentially. So it's also a bit simpler in some ways. I think the main thing though with data is

971
01:15:57,660 --> 01:16:03,340
that it tends to be bigger than software. It tends to take more space. So there's some registries

972
01:16:03,340 --> 01:16:11,740
that specialize in publishing data and they can go up to, I mean they have a limit of how much

973
01:16:11,740 --> 01:16:19,660
data you can actually publish there but Zenodo goes up to 50 gigabytes per researcher and

974
01:16:20,700 --> 01:16:28,460
there's a bunch of other options that may have more or may have less. Zenodo is run by CERN

975
01:16:28,460 --> 01:16:34,300
so it's something you can kind of expect to stick around for a really long time

976
01:16:34,300 --> 01:16:38,300
but all of these are good options.

977
01:16:38,300 --> 01:16:44,300
Then there's local options in almost every country

978
01:16:44,300 --> 01:16:48,300
that you can usually use to publish larger datasets.

979
01:16:48,300 --> 01:16:56,300
So giving everyone internationally access to save a lot of huge datasets is hard,

980
01:16:56,300 --> 01:16:59,300
but you can usually have a local service that allows,

981
01:16:59,300 --> 01:17:02,420
allows, for example, all the Finnish researchers can publish

982
01:17:02,420 --> 01:17:10,300
in these places and can publish a much bigger data set

983
01:17:10,300 --> 01:17:15,620
than is possible on Zenodo.

984
01:17:15,620 --> 01:17:17,500
But this is something essentially

985
01:17:17,500 --> 01:17:20,100
that when you get to that problem,

986
01:17:20,100 --> 01:17:23,260
you need to read up on a bit.

987
01:17:23,260 --> 01:17:33,400
So, one practical thing can be that what you really want to do, at some point you want

988
01:17:33,400 --> 01:17:37,420
to have a paper that is citable, that is a DOI, at some point you want to have a software

989
01:17:37,420 --> 01:17:41,780
that has a DOI, and maybe you have also data.

990
01:17:41,780 --> 01:17:45,680
And sometimes they go to three different places, so the paper goes to the journal, the software

991
01:17:45,680 --> 01:17:51,180
goes to, I don't know, Zenodo, and the data goes to one of these services.

992
01:17:51,180 --> 01:17:57,220
And it can be really useful if each of these three sides the other two, so that you Yeah,

993
01:17:57,220 --> 01:18:02,220
somebody who finds the data can find a paper and can find a software and vice versa.

994
01:18:02,220 --> 01:18:07,060
Data is a little bit different than software in terms of sort of licenses are similar but

995
01:18:07,060 --> 01:18:14,860
different in data, we are less concerned about changing, we are more concerned about reusing

996
01:18:14,860 --> 01:18:18,460
in the software, we are very concerned about changing because we want to change software,

997
01:18:18,460 --> 01:18:20,740
we want to create derivative work.

998
01:18:20,740 --> 01:18:23,180
Data, it's more about how is it used?

999
01:18:23,180 --> 01:18:24,520
How is it combined?

1000
01:18:27,020 --> 01:18:30,780
With data, it's much more depends on your community.

1001
01:18:30,780 --> 01:18:32,580
So different academic communities

1002
01:18:32,580 --> 01:18:35,560
have different preferred platforms.

1003
01:18:35,560 --> 01:18:36,860
It depends on the country.

1004
01:18:39,860 --> 01:18:41,420
But the principles are the same.

1005
01:18:41,420 --> 01:18:42,500
You want it to be findable

1006
01:18:42,500 --> 01:18:45,620
and you want to connect the software, the data,

1007
01:18:45,620 --> 01:18:47,740
and the paper because they belong together.

1008
01:18:47,740 --> 01:18:48,820
they all tell a story.

1009
01:18:50,820 --> 01:18:52,900
Yeah, so probably the biggest difference

1010
01:18:52,900 --> 01:18:54,780
is that data tends to be,

1011
01:18:57,860 --> 01:19:00,140
it data doesn't tend to change.

1012
01:19:00,140 --> 01:19:03,440
Once you publish a data set, it usually stays the same

1013
01:19:03,440 --> 01:19:06,780
or you get a few updates, but not very often.

1014
01:19:06,780 --> 01:19:08,180
And software changes a lot.

1015
01:19:11,300 --> 01:19:15,820
Okay, just one more quick thing about AI.

1016
01:19:15,820 --> 01:19:20,820
There's, you, well, you can take the existence of AI

1017
01:19:24,460 --> 01:19:28,220
into account in different ways with data and with software.

1018
01:19:30,860 --> 01:19:35,860
But yeah, so essentially, most licenses allow, for example,

1019
01:19:37,360 --> 01:19:38,860
well, they allow data mining.

1020
01:19:39,720 --> 01:19:43,880
And so they kind of also allow your data

1021
01:19:43,880 --> 01:19:51,560
your software to be used for training AIs. But this is an evolving field. The laws are

1022
01:19:51,560 --> 01:19:59,880
not setting stone in any way when it comes to training AIs. So the current state of affairs

1023
01:19:59,880 --> 01:20:09,880
is we have a bunch of links here but if something is public it's likely okay to train AI on it.

1024
01:20:09,880 --> 01:20:17,600
But yeah, I mean, it's not necessarily very useful to go into much detail because the

1025
01:20:17,600 --> 01:20:21,520
situation is changing so quickly.

1026
01:20:21,520 --> 01:20:25,240
And can we maybe show now that we are out of time on a collaborative document, just

1027
01:20:25,240 --> 01:20:26,240
a feedback form.

1028
01:20:26,240 --> 01:20:31,440
It would be really nice to hear one thing that was good that we should keep and one

1029
01:20:31,440 --> 01:20:34,720
thing that we should change, improve for next time.

1030
01:20:34,720 --> 01:20:38,520
Of course, any other feedback welcome.

1031
01:20:38,520 --> 01:20:43,200
So this is what we would like to hear.

1032
01:20:43,200 --> 01:20:47,320
Also can we prepare news for the day?

1033
01:20:47,320 --> 01:20:57,340
So we are essentially done with the material, we would appreciate feedback, but if you need

1034
01:20:57,340 --> 01:21:05,200
to leave now is the time when we've covered everything.

1035
01:21:05,200 --> 01:21:06,200
So let's see.

1036
01:21:06,200 --> 01:21:20,360
we covered the things mentioned in the schedule. It was more, how do we say,

1037
01:21:20,360 --> 01:21:25,040
more discussion, demonstration. It's a different style. You see from the

1038
01:21:25,040 --> 01:21:30,520
feedback that we see that some things are too advanced. We still believe

1039
01:21:30,520 --> 01:21:35,440
that it will be really useful. Tomorrow we will look more on documentation. How

1040
01:21:35,440 --> 01:21:37,760
How can we document code differently approaches?

1041
01:21:39,760 --> 01:21:41,240
Yeah.

1042
01:21:41,240 --> 01:21:43,760
If anyone is watching just a conclusion

1043
01:21:43,760 --> 01:21:45,760
or reading this later,

1044
01:21:45,760 --> 01:21:48,160
there's many good questions during the day,

1045
01:21:48,160 --> 01:21:49,560
which are in the notes document,

1046
01:21:49,560 --> 01:21:51,820
which will be archived on the website.

1047
01:21:54,760 --> 01:21:57,080
So tomorrow will be,

1048
01:21:57,080 --> 01:21:59,640
well, tomorrow and Thursday for that matter

1049
01:21:59,640 --> 01:22:01,920
will be like today.

1050
01:22:01,920 --> 01:22:08,160
So it will be lots of demos and discussions and time for questions and answers.

1051
01:22:09,120 --> 01:22:14,080
So you don't need to prepare, but if you want to, you can try to follow along.

1052
01:22:15,120 --> 01:22:22,160
There will be things that you can possibly do, but we'll be running it as demo.

1053
01:22:31,920 --> 01:22:46,640
What did he think of this format? So, less exercises and more showing things. I think

1054
01:22:46,640 --> 01:22:51,960
it worked really well because instead of lots of questions about small technical problems

1055
01:22:51,960 --> 01:23:01,320
and things breaking, we had a lot more high-level questions about why things are used. And thus,

1056
01:23:01,320 --> 01:23:10,320
That allows us to focus on, well, the interesting part.

1057
01:23:10,320 --> 01:23:15,480
And then you can review the other things later.

1058
01:23:15,480 --> 01:23:22,220
But it can also feel, I can imagine that for some it can feel many things went too fast.

1059
01:23:22,220 --> 01:23:27,240
But then let's remember that we don't need to remember how we did it.

1060
01:23:27,240 --> 01:23:28,980
We can look it up.

1061
01:23:28,980 --> 01:23:30,860
And the how is not even the main point.

1062
01:23:30,860 --> 01:23:36,620
more the why and what is possible again what is possible why do we do things we know that

1063
01:23:36,620 --> 01:23:45,100
it exists we try to now show many different aspects and focus more on the why so like the

1064
01:23:45,100 --> 01:23:52,460
main takeaway probably yeah the main takeaway from the social coding section would for example

1065
01:23:52,460 --> 01:24:00,500
be that you recognize when you need a license for your software and you remember that the

1066
01:24:00,500 --> 01:24:08,660
material has a lot about it that you can check out when you actually are deciding what license to put

1067
01:24:09,220 --> 01:24:15,060
to use. So it's not something you do as an exercise right now because it's actually pretty trivial to

1068
01:24:15,060 --> 01:24:20,260
just click add license file and choose which license to add. It is much more important to know

1069
01:24:20,260 --> 01:24:25,540
what the differences are and remember that that information is on the course website that you can

1070
01:24:25,540 --> 01:24:31,940
check and the same kind of also goes for the for the first section so it's more important to know

1071
01:24:31,940 --> 01:24:39,860
that the tools are there and to recognize when you need them than it is to actually have used them

1072
01:24:40,740 --> 01:24:54,260
in an example yeah and i mean yeah yeah like it's there's lots of things saying today was too

1073
01:24:54,260 --> 01:25:01,460
advanced. I mean, yes, we know what we're doing is sort of advanced stuff using SnakeMake,

1074
01:25:01,460 --> 01:25:07,940
Conda Environments, or Containers. Any one of these things could become its own whole workshop.

1075
01:25:09,060 --> 01:25:18,500
So, don't feel that you're left behind or left out. Feel that you know what you...

1076
01:25:18,500 --> 01:25:29,480
feel that feel inspired to learn something in the future so it is so it

1077
01:25:29,480 --> 01:25:36,680
is true that doing an exercise forces you to be more concentrated and allows

1078
01:25:36,680 --> 01:25:45,500
you to learn something more deeply so if there's a topic that you think you need

1079
01:25:45,500 --> 01:25:50,220
to learn better, you can always repeat the demonstrations

1080
01:25:50,220 --> 01:25:54,540
or do some of the exercises in the notes.

1081
01:25:54,540 --> 01:25:56,700
And well, at least I don't think

1082
01:25:56,700 --> 01:25:58,860
it's any problem to ask questions

1083
01:25:58,860 --> 01:26:01,540
about those in the notes.

1084
01:26:01,540 --> 01:26:04,420
We might not be as actively there outside the workshop

1085
01:26:04,420 --> 01:26:07,340
time, but it could still work.

1086
01:26:10,540 --> 01:26:15,140
So tomorrow we cover, is it Jupyter and documentation?

1087
01:26:15,500 --> 01:26:17,820
or documentation in Jupyter.

1088
01:26:17,820 --> 01:26:18,660
Yes.

1089
01:26:18,660 --> 01:26:22,940
So documentation is about how we can use Git repositories to make

1090
01:26:22,940 --> 01:26:29,780
basically websites which are useful for documentation.

1091
01:26:29,780 --> 01:26:34,120
Basically, it shows how we make these lessons themselves.

1092
01:26:34,120 --> 01:26:36,340
We use these same practices.

1093
01:26:36,340 --> 01:26:38,780
Jupyter shows many Jupyter tips and

1094
01:26:38,780 --> 01:26:41,820
tricks for reproducibility that you might not know.

1095
01:26:41,820 --> 01:26:44,020
Then day three is really cool.

1096
01:26:44,020 --> 01:26:49,300
really wraps everything up. There's automated testing, which sort of puts everything together.

1097
01:26:50,340 --> 01:26:57,860
And then modular code development, which is an exciting demo of starting with some small code

1098
01:26:58,420 --> 01:27:03,700
and making it better and better incrementally, hearing the analysis of all of these steps.

1099
01:27:03,700 --> 01:27:17,500
So, anything else? Any other comments to address here?

1100
01:27:17,500 --> 01:27:22,300
Just a big thanks to everybody involved, and we'll be looking forward to tomorrow.

1101
01:27:22,300 --> 01:27:27,260
More time for discussion in a collaborative document. That would be... I guess we can

1102
01:27:27,260 --> 01:27:28,700
try to do that.

1103
01:27:32,220 --> 01:27:33,140
Yeah, OK.

1104
01:27:33,140 --> 01:27:36,380
Well, thanks a lot.

1105
01:27:36,380 --> 01:27:39,500
See you next time, I guess.

1106
01:27:39,500 --> 01:27:40,100
See you then.

1107
01:27:40,100 --> 01:27:41,140
OK, bye.

1108
01:27:41,140 --> 01:27:42,700
Bye.

