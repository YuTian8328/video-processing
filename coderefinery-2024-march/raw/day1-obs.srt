1
00:00:00,000 --> 00:00:02,000
CodeRefinery.org

2
00:00:30,000 --> 00:00:32,060
you

3
00:01:00,000 --> 00:01:02,060
you

4
00:01:30,000 --> 00:01:32,060
you

5
00:02:00,000 --> 00:02:02,060
you

6
00:02:30,000 --> 00:02:32,060
you

7
00:03:00,000 --> 00:03:02,060
you

8
00:03:30,000 --> 00:03:32,060
you

9
00:04:00,000 --> 00:04:02,060
you

10
00:04:30,000 --> 00:04:32,060
you

11
00:05:00,000 --> 00:05:02,060
you

12
00:05:30,000 --> 00:05:32,060
you

13
00:06:00,000 --> 00:06:02,060
you

14
00:06:30,000 --> 00:06:32,060
you

15
00:07:00,000 --> 00:07:02,060
you

16
00:07:30,000 --> 00:07:32,060
you

17
00:14:30,000 --> 00:14:35,000
and

18
00:14:35,000 --> 00:14:40,000
and

19
00:14:40,000 --> 00:14:45,000
and

20
00:14:45,000 --> 00:14:50,000
and

21
00:14:50,000 --> 00:14:55,000
and

22
00:14:55,000 --> 00:15:04,920
O here, or if you have used it in RStudio,

23
00:15:04,920 --> 00:15:07,360
you add your little O here or your zero,

24
00:15:07,360 --> 00:15:10,320
depending on where your finger lands.

25
00:15:10,320 --> 00:15:12,400
So like for example,

26
00:15:12,400 --> 00:15:14,880
we see VS Code there three times,

27
00:15:14,880 --> 00:15:17,600
you can add O's to the VS Code line,

28
00:15:17,600 --> 00:15:21,400
and it's like a little bar graph there.

29
00:15:21,400 --> 00:15:28,400
Yes. And if you have some other way that you have used Git, then you can add it down below here.

30
00:15:28,400 --> 00:15:41,400
Yeah. Should we have a contest who has the best weather right now of all the people there?

31
00:15:41,400 --> 00:15:50,400
I mean, I see some clouds out of my window, but I don't see blue sky right now.

32
00:15:50,400 --> 00:15:58,400
Someone in Finland says that it's sunny, so hopefully it's sunny out there.

33
00:16:06,400 --> 00:16:16,400
Does any of the people here, does anyone else have better weather than central Finland?

34
00:16:16,400 --> 00:16:23,040
no, center Helsinki. Now I see some light coming in my room.

35
00:16:29,280 --> 00:16:36,000
Anyway, so we're seeing this, so any other questions from the audience before we start or

36
00:16:36,000 --> 00:16:41,520
anything to talk about? Well, since this first week is talking about Git, how about we go

37
00:16:41,520 --> 00:16:47,600
to each person here and ask, when did you start using version control?

38
<<<<<<< HEAD
00:16:54,320 --> 00:16:59,760
So I started using sort of the middle of my
||||||| b3e078a
00:42:02,200 --> 00:42:03,040
Thanks so much, Anatole.
=======
00:42:02,200 --> 00:42:03,040
Thanks so much, [name].
>>>>>>> refs/heads/synced/master

39
00:17:02,320 --> 00:17:08,240
bachelor's degree when I started doing research. I'd already been doing computing for some time

40
00:17:08,240 --> 00:17:16,640
and, well, basically I never learned formally. Someone told me this program

41
00:17:16,640 --> 00:17:23,760
called Darks at the time and I was messing with it some and didn't really

42
00:17:23,760 --> 00:17:28,920
think much about it and didn't really use it well for many years or fully

43
00:17:28,920 --> 00:17:34,440
understand why. So next on the screen is Radovan. When did you start using

44
00:17:34,440 --> 00:17:35,680
using version control.

45
00:17:37,320 --> 00:17:38,280
Yeah, good morning.

46
00:17:39,560 --> 00:17:41,000
And before I answer the question,

47
<<<<<<< HEAD
00:17:41,000 --> 00:17:43,240
I will just very slowly take a sip out of my mug
||||||| b3e078a
00:42:21,080 --> 00:42:25,380
My name is Sadovan and together with Gago,
=======
00:42:21,080 --> 00:42:25,380
My name is [name] and together with [name],
>>>>>>> refs/heads/synced/master

48
00:17:43,240 --> 00:17:46,080
and let's see if anybody notices that this is a good mug.

49
00:17:51,960 --> 00:17:54,640
Okay, I started, I just realized

50
00:17:54,640 --> 00:17:58,200
that I started using version control 20 years ago.

51
00:17:58,200 --> 00:18:01,440
Oof, it's almost 20 years ago.

52
00:18:01,440 --> 00:18:06,440
It was CVS at the time, and things got a lot nicer since.

53
00:18:07,800 --> 00:18:09,820
So it's a lot better today.

54
00:18:09,820 --> 00:18:11,020
There are so many more tools.

55
00:18:11,020 --> 00:18:12,200
We will see them today.

56
00:18:12,200 --> 00:18:14,020
I'm really excited about it.

57
00:18:14,020 --> 00:18:16,100
So the usability has improved a lot.

58
00:18:17,900 --> 00:18:22,320
I have used Git since 15 years, something like that.

59
00:18:24,500 --> 00:18:25,340
Okay, yeah.

60
00:18:26,580 --> 00:18:30,380
Samantha, what about you?

61
00:18:30,380 --> 00:18:32,500
At my clock, it's actually 10 o'clock,

62
00:18:32,500 --> 00:18:34,860
but I actually started using version control

63
00:18:34,860 --> 00:18:37,280
really efficiently after visiting

64
00:18:37,280 --> 00:18:40,240
my first code refinery workshop about six years ago.

65
00:18:43,820 --> 00:18:45,820
And Gregor, and then we can start.

66
00:18:47,560 --> 00:18:48,940
I started around nine years ago

67
00:18:48,940 --> 00:18:50,620
when I was writing my master thesis,

68
00:18:50,620 --> 00:18:52,980
which were like thousands of lines of C++ codes.

69
00:18:52,980 --> 00:18:56,980
And after committing every mistake you can think of

70
00:18:56,980 --> 00:18:58,780
that we will also go through today,

71
00:18:58,780 --> 00:19:03,020
and finally decided to go and spend some time reading about Git.

72
00:19:06,780 --> 00:19:13,740
Yeah, I know the feeling. Anyway, I guess it is 10 o'clock now, so I will head off and

73
00:19:13,740 --> 00:19:19,020
Samantha can start with the introduction. Will you play the jingle?

74
00:19:19,740 --> 00:19:22,700
Should I? Yeah, let's play the jingle.

75
00:19:22,700 --> 00:19:27,260
Okay, I'll see you shortly.

76
00:19:29,900 --> 00:19:33,260
Let's see, how does this go?

77
00:57:52,700 --> 00:57:57,700
♪

78
00:57:57,700 --> 00:58:02,700
♪

79
00:58:02,700 --> 00:58:07,720
♪

80
00:58:07,720 --> 00:58:12,720
♪

81
00:58:12,720 --> 00:58:17,720
♪

82
00:58:17,720 --> 00:58:22,260
you can then choose to follow that path.

83
00:58:22,260 --> 00:58:26,780
We also offer all the steps to do also on the command line.

84
00:58:26,780 --> 00:58:28,020
So really you can choose.

85
00:58:30,060 --> 00:58:32,380
And in future we plan to add more parts

86
00:58:32,380 --> 00:58:37,240
also for Jupyter, RStudio, Spyder, PyCharm,

87
00:58:37,240 --> 00:58:38,420
contributions welcome.

88
00:58:39,840 --> 00:58:41,660
And we will start our very first step

89
00:58:42,700 --> 00:58:44,340
and I will demonstrate it,

90
00:58:44,340 --> 00:58:46,540
but you can then do it in the exercise

91
00:58:46,540 --> 00:58:48,900
is I will create a so-called fork.

92
00:58:50,380 --> 00:58:51,860
And fork is a new term.

93
00:58:53,860 --> 00:58:56,420
And think of it as making a copy.

94
00:58:56,420 --> 00:59:01,300
So I will create a copy of something called repository.

95
00:59:02,220 --> 00:59:03,540
And if you want to know a little bit more

96
00:59:03,540 --> 00:59:05,020
about what is really a repository,

97
00:59:05,020 --> 00:59:06,460
you can even click on these.

98
00:59:07,740 --> 00:59:09,420
And it will take you to,

99
00:59:09,420 --> 00:59:11,700
we have a quick reference and a glossary.

100
00:59:11,700 --> 00:59:14,640
So it will explain you if some of the terms

101
00:59:14,640 --> 00:59:16,640
you never heard before, what is a fork?

102
00:59:16,640 --> 00:59:17,820
What is a repository?

103
00:59:18,940 --> 00:59:22,460
You can read these nice descriptions.

104
00:59:26,860 --> 00:59:29,080
So I will show you that, but I want to tell you

105
00:59:29,080 --> 00:59:32,080
that when you create this copy, you can then choose.

106
00:59:32,080 --> 00:59:35,320
We created this recipe book, but we have two versions of it.

107
00:59:36,560 --> 00:59:38,460
And you can choose which one you copy.

108
00:59:39,640 --> 00:59:41,840
There is this one, the recipe book,

109
00:59:41,840 --> 00:59:44,440
and we have one which is called recipe book recorded.

110
00:59:46,120 --> 00:59:50,440
Here on stream, I will only show the recorded one.

111
00:59:50,440 --> 00:59:53,200
And this is just to make sure that those who don't want to,

112
00:59:53,200 --> 00:59:57,320
if you don't want your GitHub account or anything you do

113
00:59:57,320 --> 00:59:59,700
ever to show up in any recording or stream,

114
01:00:00,840 --> 01:00:02,340
then choose this one.

115
01:00:03,420 --> 01:00:08,200
But it will help us if few people work on this repository

116
01:00:08,200 --> 01:00:11,620
because then we have something to show here on stream.

117
01:00:13,040 --> 01:00:14,880
Something that you will do then in the exercises,

118
01:00:14,880 --> 01:00:17,400
you can open it up in a browser tab

119
01:00:19,640 --> 01:00:21,680
and assuming that you have a GitHub account

120
01:00:21,680 --> 01:00:22,560
that you are logged in.

121
01:00:22,560 --> 01:00:23,800
And here we assume that you went

122
01:00:23,800 --> 01:00:25,440
through the install instructions.

123
01:00:27,680 --> 01:00:30,800
The first step you will do is to forget to make a copy.

124
01:00:30,800 --> 01:00:33,240
And I can see that three copies already exist

125
01:00:34,140 --> 01:00:35,800
and I will create the fourth one.

126
01:00:35,800 --> 01:00:40,360
So what the first step will be to click on this fork, boom.

127
01:00:42,960 --> 01:00:47,400
And then you can copy it into your own user account.

128
01:00:47,400 --> 01:00:49,160
And in this case, this is my user.

129
01:00:50,280 --> 01:00:51,960
Yes, I want to keep the name.

130
01:00:51,960 --> 01:00:53,120
There is a description.

131
01:00:54,280 --> 01:00:56,800
Do I want to copy the main branch only?

132
01:00:58,480 --> 01:00:59,320
Yeah, it doesn't matter.

133
01:00:59,320 --> 01:01:00,440
I think I want to copy everything.

134
01:01:00,440 --> 01:01:01,280
Why not?

135
01:01:03,000 --> 01:01:04,720
And we didn't even tell you what is a branch.

136
01:01:04,720 --> 01:01:10,280
we will come back to that. So here doesn't matter so much, but I will, I want to copy

137
01:01:10,280 --> 01:01:20,780
everything. And once I create the fork, I, it takes a few seconds. I have my own copy

138
01:01:20,780 --> 01:01:27,260
of it. And you can see that this is your own copy. If on top left, you see your own username.

139
01:01:27,260 --> 01:01:32,240
And you can also see that this has been copied from forked from this place. And the rest

140
01:01:32,240 --> 01:01:45,120
of the exercise will be, you will do it in this inside this work. So the exercise steps

141
01:01:45,120 --> 01:01:52,780
are here. And we know that you still need to learn how to do this. So below the exercise,

142
01:01:52,780 --> 01:01:59,280
you can find solutions walkthrough screenshots, and you can choose your journey. So choose

143
01:01:59,280 --> 01:02:04,640
your path is it may be GitHub. So if you are unsure, just take the GitHub. If you are sure

144
01:02:04,640 --> 01:02:10,160
you want something else, then then choose a different path. And what we expect from

145
01:02:10,160 --> 01:02:19,280
you is to get an overview, browse the commit history, you will then see visually see what

146
01:02:19,280 --> 01:02:28,480
are commits. What are the changes? You will see the network graph, maybe let me show you

147
01:02:28,480 --> 01:02:36,500
that so that you know what to look out for. So something that we will see in is insights

148
01:02:36,500 --> 01:02:45,580
network. You will see that there are these commits changes versions. You will see that

149
01:02:45,580 --> 01:02:53,480
there are branches that are different people. And then we have a couple of questions for

150
01:02:53,480 --> 01:03:03,280
you like when was a certain recipe in this recipe book modified last how many changes

151
01:03:03,280 --> 01:03:08,800
which recipes include a certain ingredient so you will learn how to search through through

152
01:03:08,800 --> 01:03:17,520
our git repository and you will also learn how to find out when a certain certain line

153
01:03:17,520 --> 01:03:20,740
of code was modified last.

154
01:03:20,740 --> 01:03:24,260
So somebody actually modified the guacamole recipe

155
01:03:24,260 --> 01:03:27,720
and you will find out who added the cilantro to the recipe.

156
01:03:29,180 --> 01:03:30,100
And then some more questions.

157
01:03:30,100 --> 01:03:32,460
Can you use this recipe yourself?

158
01:03:32,460 --> 01:03:34,360
Are you allowed to share modifications?

159
01:03:35,860 --> 01:03:38,160
And also you will learn how to browse issues

160
01:03:38,160 --> 01:03:39,620
and so-called pull requests.

161
01:03:39,620 --> 01:03:44,260
And you should think about like what this might be good for.

162
01:03:44,260 --> 01:03:45,340
We have hints.

163
01:03:45,340 --> 01:03:48,060
So in each of these steps, there is a hint

164
01:03:48,060 --> 01:03:49,520
and then please go through.

165
01:03:50,940 --> 01:03:52,940
So this is not a spoiler, go through the solution,

166
01:03:52,940 --> 01:03:56,540
go through the walk through and try this out.

167
01:03:57,660 --> 01:04:00,900
And I think we will give you 20 minutes.

168
01:04:01,900 --> 01:04:04,860
And then when we get back, we will take a break.

169
01:04:04,860 --> 01:04:07,800
We will take a 10 minute break after the exercise.

170
01:04:07,800 --> 01:04:12,540
And then after the break, Gregor and me will show you

171
01:04:12,540 --> 01:04:15,380
some of the aspects that are the most interesting,

172
01:04:15,380 --> 01:04:16,580
maybe the most problematic,

173
01:04:16,580 --> 01:04:19,780
and we will also react to the questions

174
01:04:19,780 --> 01:04:24,160
that you have on the collaborative notes.

175
01:04:36,140 --> 01:04:38,620
Here on bottom of the collaborative notes,

176
01:04:38,620 --> 01:04:40,420
where we are, what the expectation is.

177
01:04:40,420 --> 01:04:42,260
So this is our first exercise.

178
01:04:42,540 --> 01:04:52,260
It will be not until 55 past but it will be up until six minutes past and then break.

179
01:04:52,260 --> 01:04:55,620
I will modify that.

180
01:04:55,620 --> 01:04:56,620
Try it out.

181
01:04:56,620 --> 01:05:02,700
See you after the exercise but then we will go into break and then we will discuss more

182
01:05:02,700 --> 01:05:04,900
after the break.

183
01:05:04,900 --> 01:05:08,740
Let us also know how it's going through the during the exercise have fun.

184
01:05:08,740 --> 01:05:09,740
See you then.

185
01:05:09,740 --> 01:05:10,240
Bye.

186
01:05:12,540 --> 01:05:14,600
you

187
01:05:42,540 --> 01:05:44,600
you

188
01:06:12,540 --> 01:06:14,600
you

189
01:06:42,540 --> 01:06:44,600
you

190
01:07:12,540 --> 01:07:14,600
you

191
01:07:42,540 --> 01:07:44,600
you

192
01:08:12,540 --> 01:08:14,600
you

193
01:08:42,540 --> 01:08:44,600
you

194
01:09:12,540 --> 01:09:14,600
you

195
01:09:42,540 --> 01:09:44,600
you

196
01:10:12,540 --> 01:10:14,600
you

197
01:10:42,540 --> 01:10:44,600
you

198
01:11:12,540 --> 01:11:14,600
you

199
01:11:42,540 --> 01:11:44,600
you

200
01:12:12,540 --> 01:12:14,600
you

201
01:12:42,540 --> 01:12:44,600
you

202
01:13:12,540 --> 01:13:14,600
you

203
01:13:42,540 --> 01:13:44,600
you

204
01:14:12,540 --> 01:14:14,600
you

205
01:14:42,540 --> 01:14:44,600
you

206
01:15:12,540 --> 01:15:14,600
you

207
01:15:42,540 --> 01:15:44,600
you

208
01:16:12,540 --> 01:16:14,600
you

209
01:16:42,540 --> 01:16:44,600
you

210
01:17:12,540 --> 01:17:14,600
you

211
01:17:42,540 --> 01:17:44,600
you

212
01:18:12,540 --> 01:18:14,600
you

213
01:18:42,540 --> 01:18:44,600
you

214
01:19:12,540 --> 01:19:14,600
you

215
01:19:42,540 --> 01:19:44,600
you

216
01:20:12,540 --> 01:20:14,600
you

217
01:20:42,540 --> 01:20:44,600
you

218
01:21:12,540 --> 01:21:14,600
you

219
01:21:42,540 --> 01:21:44,600
you

220
01:22:12,540 --> 01:22:14,600
you

221
01:22:42,540 --> 01:22:44,600
you

222
01:23:12,540 --> 01:23:14,600
you

223
01:23:42,540 --> 01:23:44,600
you

224
01:24:12,540 --> 01:24:14,600
you

225
01:24:42,540 --> 01:24:52,540
Welcome back from the exercise session.

226
01:24:52,540 --> 01:24:56,540
Oh, I'm just waiting.

227
01:24:56,540 --> 01:24:59,540
Yes, now I see that we have my screen share.

228
01:24:59,540 --> 01:25:04,540
Just wanted to say that the thing I'm sharing here on the bottom part,

229
01:25:04,540 --> 01:25:07,540
the exercise feedback is really helpful for us.

230
01:25:07,540 --> 01:25:11,540
It's really good for us to know whether it worked well or whether it was confusing,

231
01:25:11,540 --> 01:25:15,040
whether you had problems, this is really helpful

232
01:25:15,040 --> 01:25:16,760
because we don't see you.

233
01:25:16,760 --> 01:25:17,800
That's the only way.

234
01:25:17,800 --> 01:25:19,320
And now let's have a break.

235
01:25:19,320 --> 01:25:20,360
Let's have a 10 minute break.

236
01:25:20,360 --> 01:25:22,860
We'll be back 16 minutes past the hour.

237
01:25:23,840 --> 01:25:25,760
And then we will discuss these things.

238
01:25:25,760 --> 01:25:27,480
What did we see here in the exercise?

239
01:25:27,480 --> 01:25:28,320
What did we learn?

240
01:25:28,320 --> 01:25:31,080
We will talk about it and then move on to more.

241
01:25:31,080 --> 01:25:32,280
See you in 10 minutes.

242
01:25:41,540 --> 01:25:43,600
you

243
01:26:11,540 --> 01:26:13,600
you

244
01:26:41,540 --> 01:26:43,600
you

245
01:27:11,540 --> 01:27:13,600
you

246
01:27:41,540 --> 01:27:43,600
you

247
01:28:11,540 --> 01:28:13,600
you

248
01:28:41,540 --> 01:28:43,600
you

249
01:29:11,540 --> 01:29:13,600
you

250
01:29:41,540 --> 01:29:43,600
you

251
01:30:11,540 --> 01:30:13,600
you

252
01:30:41,540 --> 01:30:43,600
you

253
01:31:11,540 --> 01:31:13,600
you

254
01:31:41,540 --> 01:31:43,600
you

255
01:32:11,540 --> 01:32:13,600
you

256
01:32:41,540 --> 01:32:43,600
you

257
01:33:11,540 --> 01:33:13,600
you

258
01:33:41,540 --> 01:33:43,600
you

259
01:34:11,540 --> 01:34:13,600
you

260
01:34:41,540 --> 01:34:46,380
All right, and we are back from the break, hopefully.

261
01:34:46,380 --> 01:34:51,460
I just tried to control the streaming settings and it's a new thing for me.

262
01:34:51,460 --> 01:34:53,540
So hopefully you are back and everything is good.

263
01:34:53,540 --> 01:34:56,740
I have the screen share.

264
01:34:56,740 --> 01:34:58,740
Hope you had a good break.

265
01:34:58,740 --> 01:35:04,020
Now, I want to show you some of the steps from the previous exercise before we move

266
01:35:04,020 --> 01:35:05,740
on to the next episode.

267
01:35:05,740 --> 01:35:11,980
Because I know that there were many new things.

268
01:35:11,980 --> 01:35:16,580
But it was a choice for us because we want to we wanted to really kind of throw you into

269
01:35:16,580 --> 01:35:18,380
something existing.

270
01:35:18,380 --> 01:35:25,440
And our hope is that when you see a commit, you will you will get an understanding of

271
01:35:25,440 --> 01:35:31,740
what it is instead of us first describing it theoretically.

272
01:35:31,740 --> 01:35:35,380
The other thing that we hope is that by providing

273
01:35:35,380 --> 01:35:39,140
these different paths, that it's a little bit like,

274
01:35:39,140 --> 01:35:41,180
if you've seen, there are these books which,

275
01:35:41,180 --> 01:35:44,660
when you open it up on one side of the page is one language

276
01:35:44,660 --> 01:35:47,660
and on the other side is a different language.

277
01:35:47,660 --> 01:35:51,060
And they can really help you learning a new language.

278
01:35:51,060 --> 01:35:53,580
And here the hope is that if you have maybe already

279
01:35:53,580 --> 01:35:56,260
been in GitHub, but you are curious about the command line,

280
01:35:56,260 --> 01:36:00,020
you will recognize some of these things better

281
01:36:00,020 --> 01:36:00,860
and vice versa.

282
01:36:01,740 --> 01:36:05,180
But in a theory, let me show you some of the,

283
01:36:05,180 --> 01:36:06,940
let's go through some of the steps now

284
01:36:06,940 --> 01:36:10,780
before I hand over the mic to Gregor.

285
01:36:10,780 --> 01:36:13,220
So what was the first thing I was supposed to do?

286
01:36:14,860 --> 01:36:17,620
I was supposed to fork, here is my fork.

287
01:36:18,500 --> 01:36:21,580
I was supposed to browse the commit history.

288
01:36:21,580 --> 01:36:26,580
In my repository here, there are 25 commits, 25 changes.

289
01:36:26,580 --> 01:36:37,520
changes. And if I click this time, timeline link, I can see these 25 changes. They all

290
01:36:37,520 --> 01:36:45,120
have an author, they have a timestamp, they have a message. So we have a one line summary.

291
01:36:45,120 --> 01:36:50,240
So it's a little bit like a logbook, keep keeping a logbook of changes as we program

292
01:36:50,240 --> 01:36:58,640
our code. Also notice that each of these changes has a unique identifier. And we will, we might,

293
01:36:58,640 --> 01:37:05,760
when we say commit hash, this is what we mean. It's, this is a short version of it. It's

294
01:37:05,760 --> 01:37:13,280
actually 40 characters. But each of these changes is unique, we can uniquely label them.

295
01:37:13,280 --> 01:37:19,840
Okay, what was the next thing I was supposed to look at the network graph. This is something

296
01:37:19,840 --> 01:37:23,720
I do very often insights at work.

297
01:37:27,120 --> 01:37:28,480
And in the network,

298
01:37:28,480 --> 01:37:32,720
we get this nice visual overview of these other commits.

299
01:37:34,160 --> 01:37:36,420
And here the blue line and the green line,

300
01:37:37,480 --> 01:37:40,440
these were different branches.

301
01:37:40,440 --> 01:37:41,800
So there is a main branch,

302
01:37:41,800 --> 01:37:44,000
there is a little sticky note main,

303
01:37:45,000 --> 01:37:46,500
but there are other branches.

304
01:37:46,500 --> 01:37:53,380
And in the next exercise already, we will learn how to create these branches.

305
01:37:53,380 --> 01:37:57,360
We will also discuss what they are good for.

306
01:37:57,360 --> 01:38:04,040
So here somebody created the branch, experimented with a vegetarian lasagna, and then found

307
01:38:04,040 --> 01:38:08,920
that this was good and wanted to have that in the main, main branch.

308
01:38:08,920 --> 01:38:15,260
So we see that developments got merged, this is a merge point, this is a merge point and

309
01:38:15,260 --> 01:38:17,740
And here's another one.

310
01:38:17,740 --> 01:38:20,220
What else were we supposed to do?

311
01:38:20,220 --> 01:38:25,260
If I go back, when was the file last modified?

312
01:38:25,260 --> 01:38:26,540
You can actually see it here.

313
01:38:26,540 --> 01:38:27,540
So this was last week.

314
01:38:27,540 --> 01:38:31,500
You can see that we created this a week ago.

315
01:38:31,500 --> 01:38:35,620
And if I want to know, how about the salads?

316
01:38:35,620 --> 01:38:37,360
Yeah.

317
01:38:37,360 --> 01:38:42,860
So also here last week.

318
01:38:42,860 --> 01:38:50,700
recipe including green salt. On GitHub, you can search for it up here. But some of you

319
01:38:50,700 --> 01:38:56,380
have noticed that it takes a little bit of time, the very first time you search for anything,

320
01:38:56,380 --> 01:39:02,440
because it needs to create this search index. But now it will list me all the files that

321
01:39:02,440 --> 01:39:08,160
contain that contain salt. So this can be really useful if you look through a code project

322
01:39:08,160 --> 01:39:10,820
and you are not sure in which file was it,

323
01:39:10,820 --> 01:39:13,020
was this error message that I'm looking for.

324
01:39:14,280 --> 01:39:16,780
Okay, now let's go to the guacamole recipe.

325
01:39:18,620 --> 01:39:19,460
Where was it?

326
01:39:19,460 --> 01:39:23,700
It was under sites and guacamole.

327
01:39:24,620 --> 01:39:27,860
And now there is this really useful feature

328
01:39:27,860 --> 01:39:29,620
which has a really unfortunate name,

329
01:39:32,340 --> 01:39:35,740
or blame, so that's historical reasons.

330
01:39:35,740 --> 01:39:37,780
A better name would have been to annotate.

331
01:39:38,160 --> 01:39:48,780
But it's so incredibly useful because it will split my code into two halves.

332
01:39:48,780 --> 01:39:58,760
On the right side, I see the recipe, but on the left side, I see line by line, which commit

333
01:39:58,760 --> 01:40:03,000
modified a specific line, the last.

334
01:40:03,000 --> 01:40:07,600
So now if I'm curious about who added this cilantro,

335
01:40:07,600 --> 01:40:10,460
because personally, I don't like cilantro so much,

336
01:40:11,520 --> 01:40:14,420
I would consider it a bug.

337
01:40:16,960 --> 01:40:19,060
And much more important than who is when.

338
01:40:20,040 --> 01:40:22,620
If I want to know when was this introduced,

339
01:40:22,620 --> 01:40:24,100
I can click on the commit.

340
01:40:26,240 --> 01:40:28,980
And this is the change that introduced it.

341
01:40:28,980 --> 01:40:33,980
So this fantasy person last week introduced

342
01:40:35,780 --> 01:40:37,640
in this commit, this change.

343
01:40:38,780 --> 01:40:41,500
This will be very useful for you in your,

344
01:40:41,500 --> 01:40:42,820
like for reproducibility.

345
01:40:45,980 --> 01:40:48,580
And I get the feedback that I was scrolling really fast

346
01:40:48,580 --> 01:40:51,620
and it's hard to follow where the mouse pointer is.

347
01:40:51,620 --> 01:40:53,480
So I will try to be more careful.

348
01:40:53,480 --> 01:40:55,460
The good news is that everything I show now,

349
01:40:55,460 --> 01:40:56,620
we have screenshots for this

350
01:40:56,620 --> 01:40:58,340
and you can find it in the solution

351
01:40:58,340 --> 01:40:59,440
and in the walkthrough.

352
01:41:02,980 --> 01:41:06,320
Back to the overview, can I use these recipes myself?

353
01:41:06,320 --> 01:41:09,200
The thing that I would look for before using anything

354
01:41:09,200 --> 01:41:11,120
is the license, is there a license file?

355
01:41:11,120 --> 01:41:12,040
Yes, there is one.

356
01:41:13,980 --> 01:41:16,660
And GitHub even recognizes it,

357
01:41:16,660 --> 01:41:20,340
that it's a so-called CC0 license.

358
01:41:20,340 --> 01:41:23,380
We will learn more about licenses next week.

359
01:41:23,380 --> 01:41:27,100
But if I click here on top right,

360
01:41:27,100 --> 01:41:29,780
I can even get some information of,

361
01:41:32,180 --> 01:41:34,480
no, I need to click on the license file itself.

362
01:41:37,140 --> 01:41:38,940
On top, it will give me a summary

363
01:41:38,940 --> 01:41:43,280
of what are things I can do, cannot do,

364
01:41:43,280 --> 01:41:45,980
any conditions, in this case, there are no conditions.

365
01:41:48,460 --> 01:41:49,980
And then there are issues and pull requests,

366
01:41:49,980 --> 01:41:54,980
but we will see more of issues and pull requests

367
01:41:54,980 --> 01:42:03,940
tests in on Thursday. And some people asked, so if I go back to my fork, why don't I see

368
01:42:03,940 --> 01:42:12,100
any issues in my fork? This is something that you can enable in settings. But many projects

369
01:42:12,100 --> 01:42:19,540
decide to keep track of all the issues and bug reports in a central place. So I will

370
01:42:19,540 --> 01:42:27,720
be able to find them if I go back to the place where I forked from. I will go back to the

371
01:42:27,720 --> 01:42:34,440
so called upstream repository. And here I see that there is an issue tab, there is a

372
01:42:34,440 --> 01:42:40,900
pull requests, we will see what they are good for. And issues is not only for problems,

373
01:42:40,900 --> 01:42:50,100
also for sharing an idea. So it can, you can even share an idea for something before starting

374
01:42:50,100 --> 01:43:02,180
all the work. Good. I think I will go How about you take the screen from me. And then

375
01:43:02,180 --> 01:43:09,340
we talk. Now we will take it a step further. And we will instead of just browsing a repository

376
01:43:09,340 --> 01:43:17,020
created by somebody else, we will learn how do we make changes to it on GitHub, but also

377
01:43:17,020 --> 01:43:18,740
locally for those who want to.

378
01:43:18,740 --> 01:43:19,740
Okay.

379
01:43:19,740 --> 01:43:20,740
Yeah.

380
01:43:20,740 --> 01:43:21,740
Thank you.

381
01:43:21,740 --> 01:43:22,740
Another one.

382
01:43:22,740 --> 01:43:32,780
So we will now focus on the second lesson for those of you who want to follow the lesson

383
01:43:32,780 --> 01:43:35,300
yourself, you can find it here.

384
01:43:35,300 --> 01:43:40,860
on the tab commit changes and in this part now in the next hour we will discuss in further

385
01:43:40,860 --> 01:43:47,180
detail commits, branches and also tags.

386
01:43:47,180 --> 01:43:51,500
So you're already familiar to with commits since you've now inspected the history of

387
01:43:51,500 --> 01:43:55,060
an existing repository but now we will discuss how to create commits.

388
01:43:55,060 --> 01:44:03,260
So this is probably the Git feature that you will use the most often since every time you

389
01:44:03,260 --> 01:44:07,460
change a file or create a new file in your Git repository,

390
01:44:07,460 --> 01:44:09,260
and you want to save it, you want to

391
01:44:11,580 --> 01:44:13,540
have it available in the future as well,

392
01:44:13,540 --> 01:44:16,100
through the, when you go back in your history,

393
01:44:16,100 --> 01:44:18,540
then you can create a Git commit.

394
01:44:18,540 --> 01:44:22,960
Now, usually, we will start on the main branch,

395
01:44:22,960 --> 01:44:27,420
so branches are different ways how to structure,

396
01:44:27,420 --> 01:44:30,060
or like how to have different versions of your repository,

397
01:44:30,060 --> 01:44:32,160
so this is indicated here by this nice figure here,

398
01:44:32,160 --> 01:44:37,160
where we have this mascot of a popular programming language,

399
01:44:37,440 --> 01:44:41,120
in this case, it's Go, which is lying on the main branch.

400
01:44:41,120 --> 01:44:44,740
And branches can be thought of lines of development.

401
01:44:45,960 --> 01:44:49,300
So nowadays, all new Git repositories,

402
01:44:49,300 --> 01:44:51,880
if you create a new repository in GitHub or some GitLab,

403
01:44:51,880 --> 01:44:53,280
it will be called the main branch,

404
01:44:53,280 --> 01:44:55,000
but you could name it whatever you want.

405
01:44:55,000 --> 01:44:56,760
In the past, it has been called master,

406
01:44:56,760 --> 01:44:58,200
but because of historical reasons,

407
01:44:58,200 --> 01:45:01,260
people have now decided that main should be the new default.

408
01:45:01,260 --> 01:45:03,160
And in theory, you can still name it whatever you want,

409
01:45:03,160 --> 01:45:07,580
but I think it's a good idea to follow the convention

410
01:45:07,580 --> 01:45:08,580
of calling it the main branch

411
01:45:08,580 --> 01:45:10,700
since that's what's mostly used.

412
01:45:10,700 --> 01:45:15,620
Now, if we now want a whole team work on this code

413
01:45:15,620 --> 01:45:17,860
or like in this painting, let's say,

414
01:45:17,860 --> 01:45:19,820
it would be very difficult if it would be a real painting

415
01:45:19,820 --> 01:45:22,060
to have multiple people working on different parts

416
01:45:22,060 --> 01:45:23,300
of the painting at the same time.

417
01:45:23,300 --> 01:45:27,540
However, with Git, since this is typically code bases

418
01:45:27,540 --> 01:45:31,180
we work with, we can create digital copies

419
01:45:31,180 --> 01:45:32,140
of this branch.

420
01:45:32,140 --> 01:45:33,380
In this case, we create two.

421
01:45:33,380 --> 01:45:35,340
One, which is here, the sunglass branch,

422
01:45:35,340 --> 01:45:38,180
and the other one, which is this graduation hat branch.

423
01:45:38,180 --> 01:45:39,900
And then one part of your team can then focus

424
01:45:39,900 --> 01:45:41,940
on the implementation of the sunglasses.

425
01:45:41,940 --> 01:45:43,500
The other one can focus on the implementation

426
01:45:43,500 --> 01:45:44,660
of something different.

427
01:45:44,660 --> 01:45:45,780
And then if you want later,

428
01:45:45,780 --> 01:45:46,860
and you're happy with the results,

429
01:45:46,860 --> 01:45:49,860
they can be merged back into the main branch.

430
01:45:49,860 --> 01:45:51,940
So these branches here are sometimes also called

431
01:45:51,940 --> 01:45:53,780
developer or the developing branches.

432
01:45:54,900 --> 01:45:57,740
As long as they don't show any conflict,

433
01:45:57,740 --> 01:46:00,100
which means that they work on the same feature

434
01:46:00,100 --> 01:46:02,900
and then try to merge it into the main branch.

435
01:46:02,900 --> 01:46:04,180
This will work just fine,

436
01:46:04,180 --> 01:46:06,580
but we will discuss this in further detail later.

437
01:46:08,900 --> 01:46:11,180
Now, the last thing which is mentioned here,

438
01:46:11,180 --> 01:46:12,820
which you probably have not encountered yet

439
01:46:12,820 --> 01:46:15,300
when you went through the history of the repository before

440
01:46:15,300 --> 01:46:16,900
is called tags.

441
01:46:16,900 --> 01:46:18,940
And these are selected commits

442
01:46:18,940 --> 01:46:23,100
that you can mark as tags with a specific name,

443
01:46:23,100 --> 01:46:26,220
which can be very useful if you want to have one commit

444
01:46:26,220 --> 01:46:29,020
that you want to be easily accessible in the future.

445
01:46:29,020 --> 01:46:31,140
So in the context of this recipe book, for instance,

446
01:46:31,140 --> 01:46:33,340
it could be when we decide to make a printed version

447
01:46:33,340 --> 01:46:35,460
of this book, then of course,

448
01:46:35,460 --> 01:46:37,660
we cannot change the printed version anymore.

449
01:46:37,660 --> 01:46:40,980
So it would be good in the future to have a commit

450
01:46:40,980 --> 01:46:41,940
that we can easily find,

451
01:46:41,940 --> 01:46:44,300
which then is the same version as the one that is printed,

452
01:46:44,300 --> 01:46:46,860
even though the project on GitHub

453
01:46:46,860 --> 01:46:48,980
might still develop in other directions.

454
01:46:48,980 --> 01:46:50,540
Or to be maybe use an example,

455
01:46:50,540 --> 01:46:52,300
which is more relevant for you as researchers.

456
01:46:52,300 --> 01:46:56,460
If you have a manuscript or a publication

457
01:46:56,460 --> 01:46:58,260
that you submit to a journal,

458
01:46:58,260 --> 01:47:00,620
then it could be a very good idea to create a tag

459
01:47:00,620 --> 01:47:02,620
for the version that you submitted.

460
01:47:02,620 --> 01:47:06,420
And then once you receive the reviewer comments

461
01:47:06,420 --> 01:47:09,700
and then you change the repository

462
01:47:09,700 --> 01:47:12,700
which is connected to your publication,

463
01:47:12,700 --> 01:47:15,140
then you can create a new tag for every new version

464
01:47:15,140 --> 01:47:17,220
that you submit and then for the published one as well.

465
01:47:17,220 --> 01:47:19,420
So this can be very useful for this as well.

466
01:47:20,460 --> 01:47:23,660
In my case, when I wrote my PhD thesis three years ago,

467
01:47:23,660 --> 01:47:25,980
it was also very useful to create tags

468
01:47:25,980 --> 01:47:27,780
whenever I wanted to have a version

469
01:47:27,780 --> 01:47:29,020
that I sent to my supervisor,

470
01:47:29,020 --> 01:47:31,100
so he could read through it and give comments on it.

471
01:47:31,100 --> 01:47:32,500
So that way I could have,

472
01:47:35,300 --> 01:47:36,980
I could work on my thesis,

473
01:47:36,980 --> 01:47:38,100
which was written in LaTeX

474
01:47:38,100 --> 01:47:39,940
and therefore easily storable on GitHub.

475
01:47:39,940 --> 01:47:42,620
And then every time I have a version which,

476
01:47:42,620 --> 01:47:43,800
or like a chapter which was done,

477
01:47:43,800 --> 01:47:46,140
I could then create a tag on it

478
01:47:46,140 --> 01:47:48,220
and then send it to someone else to read it.

479
01:47:48,220 --> 01:47:49,580
So there was no problem

480
01:47:49,580 --> 01:47:51,880
with having the latest version, for instance.

481
01:47:53,100 --> 01:47:55,060
Maybe just one more sentence I should mention

482
01:47:55,060 --> 01:47:57,460
for the branches, I was mentioning before

483
01:47:57,460 --> 01:47:59,100
that this is very useful if you have a whole team

484
01:47:59,100 --> 01:48:00,880
which is working on one code base,

485
01:48:00,880 --> 01:48:03,740
but it can also be very useful if you work alone

486
01:48:03,740 --> 01:48:05,940
since you want to experiment,

487
01:48:05,940 --> 01:48:09,100
so you want to, you have an idea about a new feature

488
01:48:09,100 --> 01:48:10,420
or like something which you could implement

489
01:48:10,420 --> 01:48:12,500
in a better way, but you don't want to touch

490
01:48:12,500 --> 01:48:13,860
the main branch since that's the one

491
01:48:13,860 --> 01:48:17,500
that other people might take a look at,

492
01:48:17,500 --> 01:48:19,420
or also you just want to have like a main batch

493
01:48:19,420 --> 01:48:21,660
which is kind of relatively clean in its history,

494
01:48:21,660 --> 01:48:23,780
so you can create a new branch,

495
01:48:23,780 --> 01:48:26,000
try implementing some new code,

496
01:48:26,000 --> 01:48:27,400
and if you're happy with it, you can merge it,

497
01:48:27,400 --> 01:48:30,360
but if it turns out that it doesn't go the way you want,

498
01:48:30,360 --> 01:48:32,460
you see that you haven't pulled through

499
01:48:32,460 --> 01:48:35,820
all the steps necessary, then you can just delete it

500
01:48:35,820 --> 01:48:38,760
without having to do any changes to the main branch.

501
01:48:38,760 --> 01:48:40,640
Of course, in theory, you could have done this also

502
01:48:40,640 --> 01:48:41,480
just to the main branch,

503
01:48:41,480 --> 01:48:43,780
and then kind of deleted the last couple of commits,

504
01:48:43,780 --> 01:48:47,300
but I would say that this is not particularly clean.

505
01:48:48,760 --> 01:48:50,440
Now, we have, again, an exercise set here,

506
01:48:50,440 --> 01:48:52,020
which takes approximately 20 minutes,

507
01:48:52,020 --> 01:48:56,940
where we'll now create commits on top of the branch,

508
01:48:56,940 --> 01:48:59,780
on top of the, sorry, on top of the repository

509
01:48:59,780 --> 01:49:01,980
that you've been working with in the past,

510
01:49:03,020 --> 01:49:04,540
in a new branch, and I will now show

511
01:49:04,540 --> 01:49:06,760
the first two, three steps live,

512
01:49:06,760 --> 01:49:08,900
and then I will leave the remaining steps to you,

513
01:49:08,900 --> 01:49:11,300
and then at the end, we can then,

514
01:49:11,300 --> 01:49:12,980
after the exercises, we can go through

515
01:49:12,980 --> 01:49:14,100
some of the questions.

516
01:49:15,460 --> 01:49:16,940
I will do this now in GitHub,

517
01:49:16,940 --> 01:49:18,660
but if there is time remaining,

518
01:49:18,660 --> 01:49:20,300
I will do the same thing,

519
01:49:20,300 --> 01:49:23,300
or at least show some of the parts also in VS code.

520
01:49:23,300 --> 01:49:27,120
Now I go now to the recipe book recorded repository,

521
01:49:28,420 --> 01:49:33,420
which is in the Code Refinery GitHub project.

522
01:49:35,220 --> 01:49:37,820
And first of all, what I will do is to create a fork.

523
01:49:37,820 --> 01:49:38,860
I've already done this.

524
01:49:38,860 --> 01:49:40,580
So we just create a fork now.

525
01:49:40,580 --> 01:49:42,660
I copy it to my own account.

526
01:49:42,660 --> 01:49:44,460
Just a question, Gregor.

527
01:49:44,460 --> 01:49:47,380
Should we, we should now watch or should we do something?

528
01:49:47,380 --> 01:49:54,400
Um, I will, I will, everything I'm doing now is, is, is also shown in the, in the description.

529
01:49:54,400 --> 01:49:59,880
It's just to, um, it's just the first two steps I thought, so that, um, uh, we make

530
01:49:59,880 --> 01:50:02,920
sure that everyone uses the right repository and, and, uh, first commit.

531
01:50:02,920 --> 01:50:03,920
Yeah.

532
01:50:03,920 --> 01:50:07,640
And the fork people have already done in the previous exercise, but here we show it.

533
01:50:07,640 --> 01:50:12,160
It's good that we show it because just to make sure that everybody's on the same page.

534
01:50:12,160 --> 01:50:15,840
Also, if people joined later, yeah.

535
01:50:15,840 --> 01:50:18,400
So this takes now just a few seconds.

536
01:50:18,400 --> 01:50:21,760
And now we have a copy again of this repository.

537
01:50:21,760 --> 01:50:23,960
And in this case, we are still on the main branch.

538
01:50:23,960 --> 01:50:27,240
However, if I now want to introduce a new feature

539
01:50:27,240 --> 01:50:28,120
or like a new recipe,

540
01:50:28,120 --> 01:50:30,360
I can now create a new branch name.

541
01:50:32,520 --> 01:50:34,340
And then I click on create branch.

542
01:50:35,920 --> 01:50:37,160
And this will now create,

543
01:50:38,600 --> 01:50:40,240
it will copy over all the code

544
01:50:40,240 --> 01:50:43,200
from the previous branch into this new one.

545
01:50:43,200 --> 01:50:44,760
And the last thing I would just quickly show

546
01:50:44,760 --> 01:50:46,520
is then how to create a new commit.

547
01:50:47,400 --> 01:50:49,320
So in my case, I like pasta a lot,

548
01:50:49,320 --> 01:50:52,120
so I want to add a recipe here so I can keep an add file.

549
01:50:55,320 --> 01:50:57,920
I can copy now something into

550
01:51:02,880 --> 01:51:04,240
a new file into,

551
01:51:05,200 --> 01:51:07,660
or like a new recipe.

552
01:51:11,240 --> 01:51:12,520
I need to give it a name in this case

553
01:51:12,520 --> 01:51:13,360
because it's a new file,

554
01:51:13,360 --> 01:51:18,360
So in this case, it's a tomato, basil, recipe.

555
01:51:24,120 --> 01:51:26,120
And I commit the changes.

556
01:51:26,120 --> 01:51:28,680
And now this is the new part for you.

557
01:51:28,680 --> 01:51:30,440
We can now create a commit message.

558
01:51:30,440 --> 01:51:32,600
That's the one that the other one was showing just before.

559
01:51:32,600 --> 01:51:34,920
So this would be this one line message.

560
01:51:34,920 --> 01:51:36,360
And then we have also the option

561
01:51:36,360 --> 01:51:41,360
to give a more extended description of this change.

562
01:51:41,360 --> 01:51:45,360
Now, if you have a small project and it might be necessary

563
01:51:45,360 --> 01:51:47,680
to have like a very detailed extended description here.

564
01:51:47,680 --> 01:51:49,960
And in this case, I think it's not necessary

565
01:51:49,960 --> 01:51:51,620
since it's kind of self-descripted.

566
01:51:51,620 --> 01:51:54,560
But in the future, if you would work with a larger project,

567
01:51:54,560 --> 01:51:56,560
then they might actually have some expectations

568
01:51:56,560 --> 01:51:59,440
or like some rules on how you have to create these commits.

569
01:51:59,440 --> 01:52:03,020
So there might be some template for what to add

570
01:52:03,020 --> 01:52:04,480
into the extension descriptions.

571
01:52:04,480 --> 01:52:06,660
But in this case, we just keep it simple.

572
01:52:08,040 --> 01:52:11,240
And we now see that we have, if you go now to the history,

573
01:52:11,240 --> 01:52:12,880
We have now created a new commit

574
01:52:15,320 --> 01:52:18,640
with the description that we chose before

575
01:52:18,640 --> 01:52:20,640
and also the new hash that was generated for us.

576
01:52:20,640 --> 01:52:22,640
So this is the identifier of this commit.

577
01:52:23,620 --> 01:52:25,880
Okay, I think this is enough for now.

578
01:52:25,880 --> 01:52:30,320
I will now mute myself and in 20 minutes

579
01:52:31,760 --> 01:52:36,160
we will get back and discuss some of the problems

580
01:52:36,160 --> 01:52:37,680
that some people have seen

581
01:52:37,680 --> 01:52:40,360
and maybe discuss some interesting questions.

582
01:52:41,240 --> 01:52:48,760
Yes, so we'll be back of 55 minutes past the hour, and then we will do a quick summary

583
01:52:48,760 --> 01:52:54,680
before we take a longer break, and your task is now to do the steps one to nine.

584
01:52:54,680 --> 01:53:00,520
Again, let us know how it's going on the collaborative notes, ask us questions, and then we can return

585
01:53:00,520 --> 01:53:05,440
to the questions and discuss them here, here on stream.

586
01:53:05,440 --> 01:53:08,440
See you in 20 minutes.

587
01:53:08,440 --> 01:53:08,680
Bye.

588
01:53:11,240 --> 01:53:13,300
you

589
01:53:41,240 --> 01:53:43,300
you

590
01:54:11,240 --> 01:54:13,300
you

591
01:54:41,240 --> 01:54:43,300
you

592
01:55:11,240 --> 01:55:13,300
you

593
01:55:41,240 --> 01:55:43,300
you

594
01:56:11,240 --> 01:56:13,300
you

595
01:56:41,240 --> 01:56:43,300
you

596
01:57:11,240 --> 01:57:13,300
you

597
01:57:41,240 --> 01:57:43,300
you

598
01:58:11,240 --> 01:58:13,300
you

599
01:58:41,240 --> 01:58:43,300
you

600
01:59:11,240 --> 01:59:13,300
you

601
01:59:41,240 --> 01:59:43,300
you

602
02:00:11,240 --> 02:00:13,300
you

603
02:00:41,240 --> 02:00:43,300
you

604
02:01:11,240 --> 02:01:13,300
you

605
02:01:41,240 --> 02:01:43,300
you

606
02:02:11,240 --> 02:02:13,300
you

607
02:02:41,240 --> 02:02:43,300
you

608
02:03:11,240 --> 02:03:13,300
you

609
02:03:41,240 --> 02:03:43,300
you

610
02:04:11,240 --> 02:04:13,300
you

611
02:04:41,240 --> 02:04:43,300
you

612
02:05:11,240 --> 02:05:13,300
you

613
02:05:41,240 --> 02:05:43,300
you

614
02:06:11,240 --> 02:06:13,300
you

615
02:06:41,240 --> 02:06:43,300
you

616
02:07:11,240 --> 02:07:13,300
you

617
02:07:41,240 --> 02:07:43,300
you

618
02:08:11,240 --> 02:08:13,300
you

619
02:08:41,240 --> 02:08:43,300
you

620
02:09:11,240 --> 02:09:13,300
you

621
02:09:41,240 --> 02:09:43,300
you

622
02:10:11,240 --> 02:10:13,300
you

623
02:10:41,240 --> 02:10:43,300
you

624
02:11:11,240 --> 02:11:13,300
you

625
02:11:41,240 --> 02:11:43,300
you

626
02:12:11,240 --> 02:12:13,300
you

627
02:12:41,240 --> 02:12:43,300
you

628
02:13:11,240 --> 02:13:13,300
you

629
02:13:41,240 --> 02:13:43,300
you

630
02:14:11,240 --> 02:14:25,640
Okay, so we are back. We have five minutes before the break starts. So there were two

631
02:14:25,640 --> 02:14:30,520
questions which arose, which I would like to discuss now. And if we have some time,

632
02:14:30,520 --> 02:14:36,680
I can also quickly show how to use VS Code for creating commits. The first thing was

633
02:14:36,680 --> 02:14:40,240
was about comparing and one,

634
02:14:40,240 --> 02:14:43,200
it might be simplest way to create two different branches

635
02:14:43,200 --> 02:14:46,800
or commits is by copying the URL

636
02:14:46,800 --> 02:14:49,040
and just writing compare at the end.

637
02:14:50,640 --> 02:14:53,400
And this will then open this interface

638
02:14:53,400 --> 02:14:56,920
where we can then here choose which branches,

639
02:14:56,920 --> 02:14:58,400
repositories we want to compare.

640
02:14:58,400 --> 02:15:01,560
So in this case, I will now just focus on mine

641
02:15:02,480 --> 02:15:04,320
and we can have here the main branch

642
02:15:04,320 --> 02:15:06,320
and we can compare it to the new recipe branch

643
02:15:06,320 --> 02:15:08,400
that I created previously.

644
02:15:08,400 --> 02:15:11,200
And this way, it will now show us all the differences

645
02:15:11,200 --> 02:15:12,420
between the two branches.

646
02:15:12,420 --> 02:15:15,440
So in this case, the only difference is

647
02:15:15,440 --> 02:15:19,200
that we have the new file that I created previously,

648
02:15:19,200 --> 02:15:22,760
the tomato basil spaghetti recipe in this case.

649
02:15:23,840 --> 02:15:27,680
So you will see something similar

650
02:15:27,680 --> 02:15:28,840
when you create pull requests,

651
02:15:28,840 --> 02:15:32,200
but that's something we will discuss later in this course.

652
02:15:32,200 --> 02:15:33,400
But in my view, that's the simplest way

653
02:15:33,400 --> 02:15:35,320
of comparing it on GitHub itself.

654
02:15:36,320 --> 02:15:39,680
So I hope this answers one of the questions.

655
02:15:39,680 --> 02:15:42,480
Another question was there was some confusion

656
02:15:42,480 --> 02:15:44,480
about the creating a tag.

657
02:15:46,720 --> 02:15:48,800
And on GitHub, this can be some,

658
02:15:48,800 --> 02:15:51,280
maybe a little bit confusing that it has a feature

659
02:15:51,280 --> 02:15:52,720
which is called releases,

660
02:15:52,720 --> 02:15:54,160
which is basically the same thing.

661
02:15:54,160 --> 02:15:55,440
But the simplest way of creating one

662
02:15:55,440 --> 02:15:57,520
is then just, let's just quickly go back.

663
02:15:57,520 --> 02:15:58,880
I click here on this button,

664
02:15:58,880 --> 02:16:00,400
create a new release on the right.

665
02:16:00,400 --> 02:16:05,400
and I can now choose a tag,

666
02:16:07,480 --> 02:16:10,020
and now I need to actually write a new name into it

667
02:16:10,020 --> 02:16:13,060
before I can create a new release or tag.

668
02:16:13,060 --> 02:16:14,720
So I think this is the problem that arose there,

669
02:16:14,720 --> 02:16:18,320
and I think it's kind of counterintuitive in GitHub.

670
02:16:18,320 --> 02:16:20,620
So if I now write new release, for instance,

671
02:16:25,600 --> 02:16:27,640
then I can now give it a title again.

672
02:16:30,400 --> 02:16:37,600
I can provide some more information, which I won't do now and then I can publish a release.

673
02:16:37,600 --> 02:16:40,080
And Gregor, can I ask, can we take a step back?

674
02:16:40,080 --> 02:16:44,440
So when do you use branches and when do you use tags?

675
02:16:44,440 --> 02:16:48,680
And so how are they similar, how are they different and when would you use one or the

676
02:16:48,680 --> 02:16:49,680
other?

677
02:16:49,680 --> 02:16:50,880
It's a very good question.

678
02:16:50,880 --> 02:16:56,160
So branches I would use if I have a project where I still want to develop it or still

679
02:16:56,160 --> 02:17:02,680
make changes to the project with the idea that I would eventually merge them and I would

680
02:17:02,680 --> 02:17:09,080
use tags then when I'm not planning to make any changes to this version of the project,

681
02:17:09,080 --> 02:17:12,320
but I want them to be easily accessible in the future.

682
02:17:12,320 --> 02:17:17,840
For instance, if I want to have like this specific version of a manuscript that I submitted

683
02:17:17,840 --> 02:17:21,560
to a journal, then it makes sense to have it as a tag in my view because branches somehow

684
02:17:21,560 --> 02:17:24,280
imply that I would do some changes.

685
02:17:24,280 --> 02:17:26,440
In fact, I have seen a few projects

686
02:17:26,440 --> 02:17:29,040
where they had like an own branch for the version

687
02:17:29,040 --> 02:17:30,280
that they submitted to a journal

688
02:17:30,280 --> 02:17:33,880
or that was uploaded to archive, for instance,

689
02:17:33,880 --> 02:17:36,180
which I think isn't ideal because these branches

690
02:17:36,180 --> 02:17:37,720
in theory can still be changed.

691
02:17:37,720 --> 02:17:40,200
Now, of course, it can always go to the history.

692
02:17:40,200 --> 02:17:42,400
Since I'm using Git, I can always check

693
02:17:43,360 --> 02:17:45,480
what was the date when I submitted it,

694
02:17:45,480 --> 02:17:47,520
which was the latest branch back then,

695
02:17:47,520 --> 02:17:49,280
but I think a tag makes more sense.

696
02:17:50,360 --> 02:17:52,360
This would be my answer to this question.

697
02:17:52,360 --> 02:17:53,360
Thanks.

698
02:17:53,360 --> 02:17:54,360
Okay.

699
02:17:54,360 --> 02:18:01,800
Shall I very briefly talk about VS code or shall we do that after the break?

700
02:18:01,800 --> 02:18:05,640
What do you think about the one?

701
02:18:05,640 --> 02:18:09,080
Just looking at the time, I think we should do it after the break.

702
02:18:09,080 --> 02:18:14,440
I'm just looking here to whether there's any questions that we should pick up before we

703
02:18:14,440 --> 02:18:21,480
go into the break.

704
02:18:21,480 --> 02:18:24,340
So let me thank everybody for the questions.

705
02:18:24,340 --> 02:18:25,780
Let's have many more questions.

706
02:18:25,780 --> 02:18:28,380
We want to be really overwhelmed by questions.

707
02:18:28,380 --> 02:18:31,260
Let's take a, we will take a one hour break.

708
02:18:31,260 --> 02:18:33,380
This is lunchtime in sometimes zones.

709
02:18:33,380 --> 02:18:36,220
We know that this is not ideal for everybody,

710
02:18:36,220 --> 02:18:40,300
but in that hour, you can a little bit process

711
02:18:40,300 --> 02:18:45,300
what we, what we learned and we will then do a recap.

712
02:18:46,700 --> 02:18:48,580
And after the break,

713
02:18:48,580 --> 02:18:53,580
Our plan is to learn how to merge the changes that we did.

714
02:18:53,620 --> 02:18:56,060
So we learn how to browse, how to create branch,

715
02:18:56,060 --> 02:18:57,980
how to create commits,

716
02:18:57,980 --> 02:19:00,040
but how do we get all of these developments

717
02:19:00,040 --> 02:19:02,440
back into the main branch

718
02:19:02,440 --> 02:19:04,180
that we will learn after the break.

719
02:19:06,540 --> 02:19:09,420
We will be back in one hour, back here on stream.

720
02:19:11,140 --> 02:19:14,380
See you then, have a good break and bye everybody.

721
02:19:18,580 --> 02:19:20,640
you

722
02:19:48,580 --> 02:19:50,640
you

723
02:20:18,580 --> 02:20:20,640
you

724
02:20:48,580 --> 02:20:50,640
you

725
02:21:18,580 --> 02:21:20,640
you

726
02:21:48,580 --> 02:21:50,640
you

727
02:22:18,580 --> 02:22:20,640
you

728
02:22:48,580 --> 02:22:50,640
you

729
02:23:18,580 --> 02:23:20,640
you

730
02:23:48,580 --> 02:23:50,640
you

731
02:24:18,580 --> 02:24:20,640
you

732
02:24:48,580 --> 02:24:50,640
you

733
02:25:18,580 --> 02:25:20,640
you

734
02:25:48,580 --> 02:25:50,640
you

735
02:26:18,580 --> 02:26:20,640
you

736
02:26:48,580 --> 02:26:50,640
you

737
02:27:18,580 --> 02:27:20,640
you

738
02:27:48,580 --> 02:27:50,640
you

739
02:28:18,580 --> 02:28:20,640
you

740
02:28:48,580 --> 02:28:50,640
you

741
02:29:18,580 --> 02:29:20,640
you

742
02:29:48,580 --> 02:29:50,640
you

743
02:30:18,580 --> 02:30:20,640
you

744
02:30:48,580 --> 02:30:50,640
you

745
02:31:18,580 --> 02:31:20,640
you

746
02:31:48,580 --> 02:31:50,640
you

747
02:32:18,580 --> 02:32:20,640
you

748
02:32:48,580 --> 02:32:50,640
you

749
02:33:18,580 --> 02:33:20,640
you

750
02:33:48,580 --> 02:33:50,640
you

751
02:34:18,580 --> 02:34:20,640
you

752
02:34:48,580 --> 02:34:50,640
you

753
02:35:18,580 --> 02:35:20,640
you

754
02:35:48,580 --> 02:35:50,640
you

755
02:36:18,580 --> 02:36:20,640
you

756
02:36:48,580 --> 02:36:50,640
you

757
02:37:18,580 --> 02:37:20,640
you

758
02:37:48,580 --> 02:37:50,640
you

759
02:38:18,580 --> 02:38:20,640
you

760
02:38:48,580 --> 02:38:50,640
you

761
02:39:18,580 --> 02:39:20,640
you

762
02:39:48,580 --> 02:39:50,640
you

763
02:40:18,580 --> 02:40:20,640
you

764
02:40:48,580 --> 02:40:50,640
you

765
02:41:18,580 --> 02:41:20,640
you

766
02:41:48,580 --> 02:41:50,640
you

767
02:42:18,580 --> 02:42:20,640
you

768
02:42:48,580 --> 02:42:50,640
you

769
02:43:18,580 --> 02:43:20,640
you

770
02:43:48,580 --> 02:43:50,640
you

771
02:44:18,580 --> 02:44:20,640
you

772
02:44:48,580 --> 02:44:50,640
you

773
02:45:18,580 --> 02:45:20,640
you

774
02:45:48,580 --> 02:45:50,640
you

775
02:46:18,580 --> 02:46:20,640
you

776
02:46:48,580 --> 02:46:50,640
you

777
02:47:18,580 --> 02:47:20,640
you

778
02:47:48,580 --> 02:47:50,640
you

779
02:48:18,580 --> 02:48:20,640
you

780
02:48:48,580 --> 02:48:50,640
you

781
02:49:18,580 --> 02:49:20,640
you

782
02:49:48,580 --> 02:49:50,640
you

783
02:50:18,580 --> 02:50:20,640
you

784
02:50:48,580 --> 02:50:50,640
you

785
02:51:18,580 --> 02:51:20,640
you

786
02:51:48,580 --> 02:51:50,640
you

787
02:52:18,580 --> 02:52:20,640
you

788
02:52:48,580 --> 02:52:50,640
you

789
02:53:18,580 --> 02:53:20,640
you

790
02:53:48,580 --> 02:53:50,640
you

791
02:54:18,580 --> 02:54:20,640
you

792
02:54:48,580 --> 02:54:50,640
you

793
02:55:18,580 --> 02:55:20,640
you

794
02:55:48,580 --> 02:55:50,640
you

795
02:56:18,580 --> 02:56:20,640
you

796
02:56:48,580 --> 02:56:50,640
you

797
02:57:18,580 --> 02:57:20,640
you

798
02:57:48,580 --> 02:57:50,640
you

799
02:58:18,580 --> 02:58:20,640
you

800
02:58:48,580 --> 02:58:50,640
you

801
02:59:18,580 --> 02:59:20,640
you

802
02:59:48,580 --> 02:59:50,640
you

803
03:00:18,580 --> 03:00:20,640
you

804
03:00:48,580 --> 03:00:50,640
you

805
03:01:18,580 --> 03:01:20,640
you

806
03:01:48,580 --> 03:01:50,640
you

807
03:02:18,580 --> 03:02:20,640
you

808
03:02:48,580 --> 03:02:50,640
you

809
03:03:18,580 --> 03:03:20,640
you

810
03:03:48,580 --> 03:03:50,640
you

811
03:04:18,580 --> 03:04:20,640
you

812
03:04:48,580 --> 03:04:50,640
you

813
03:05:18,580 --> 03:05:20,640
you

814
03:05:48,580 --> 03:05:50,640
you

815
03:06:18,580 --> 03:06:20,640
you

816
03:06:48,580 --> 03:06:50,640
you

817
03:07:18,580 --> 03:07:20,640
you

818
03:07:48,580 --> 03:07:50,640
you

819
03:08:18,580 --> 03:08:20,640
you

820
03:08:48,580 --> 03:08:50,640
you

821
03:09:18,580 --> 03:09:20,640
you

822
03:09:48,580 --> 03:09:50,640
you

823
03:10:18,580 --> 03:10:20,640
you

824
03:10:48,580 --> 03:10:50,640
you

825
03:11:18,580 --> 03:11:20,640
you

826
03:11:48,580 --> 03:11:50,640
you

827
03:12:18,580 --> 03:12:20,640
you

828
03:12:48,580 --> 03:12:50,640
you

829
03:13:18,580 --> 03:13:20,640
you

830
03:13:48,580 --> 03:13:50,640
you

831
03:14:18,580 --> 03:14:20,640
you

832
03:14:48,580 --> 03:14:50,640
you

833
03:15:18,580 --> 03:15:20,640
you

834
03:15:48,580 --> 03:15:50,640
you

835
03:16:18,580 --> 03:16:20,640
you

836
03:16:48,580 --> 03:16:50,640
you

837
03:17:18,580 --> 03:17:20,640
you

838
03:17:48,580 --> 03:17:50,580
You

839
03:22:48,580 --> 03:22:52,740
♪

840
03:22:52,740 --> 03:22:56,920
♪

841
03:22:56,920 --> 03:23:01,080
♪

842
03:23:01,080 --> 03:23:05,240
♪

843
03:23:05,240 --> 03:23:09,460
♪

844
03:23:09,460 --> 03:23:13,660
♪

845
03:23:13,660 --> 03:23:17,700
♪

846
03:23:17,700 --> 03:23:22,020
like one clear idea, like, I don't know, one new feature.

847
03:23:24,340 --> 03:23:27,060
And then finally, what is a repository? What is a git

848
03:23:27,060 --> 03:23:28,700
repository? What is inside?

849
03:23:30,420 --> 03:23:35,420
So the repository is a collection of files that are

850
03:23:35,420 --> 03:23:40,180
covered by one git project. So there's one dot git directory,

851
03:23:40,180 --> 03:23:42,940
we haven't mentioned that yet. So that's, but that's like the

852
03:23:42,940 --> 03:23:46,860
implementation, which covers the whole, all of the all of the

853
03:23:46,860 --> 03:23:49,060
the whole collection of these files.

854
03:23:49,060 --> 03:23:51,220
So if I do some change at some of these files,

855
03:23:51,220 --> 03:23:56,220
it will be registered when I use Git.

856
03:23:56,860 --> 03:23:58,140
So it's basically a collection of files

857
03:23:58,140 --> 03:24:00,140
that again, belong together.

858
03:24:00,140 --> 03:24:00,980
Yeah.

859
03:24:00,980 --> 03:24:03,220
And we can think of a repository as,

860
03:24:03,220 --> 03:24:04,940
it's like all the commits are in there,

861
03:24:04,940 --> 03:24:06,680
all the branches are inside there,

862
03:24:07,580 --> 03:24:09,940
and also the tags, if we have any.

863
03:24:09,940 --> 03:24:11,820
So all the history of the project.

864
03:24:12,820 --> 03:24:14,540
And then one more question that just came in,

865
03:24:14,540 --> 03:24:16,240
which is I think really good.

866
03:24:16,240 --> 03:24:17,540
So when I want to use Git,

867
03:24:17,540 --> 03:24:21,140
do I then always have to connect my project

868
03:24:21,140 --> 03:24:23,220
to a repository on GitHub?

869
03:24:23,220 --> 03:24:26,020
And I can answer that is that, no, you don't have to.

870
03:24:26,020 --> 03:24:29,020
You can also use Git locally

871
03:24:29,020 --> 03:24:30,500
without connecting it to anything.

872
03:24:30,500 --> 03:24:33,060
It can only live, if you want,

873
03:24:33,060 --> 03:24:35,300
the Git repository can stay on your laptop

874
03:24:36,380 --> 03:24:37,300
and it doesn't have to leave.

875
03:24:37,300 --> 03:24:39,820
It doesn't have to be connected to anything.

876
03:24:39,820 --> 03:24:44,820
At some point, you might want to then copy it,

877
03:24:44,820 --> 03:24:49,140
make it available on GitHub, GitLab, and similar services,

878
03:24:49,140 --> 03:24:53,540
because you want to have backup, and because at some point maybe you want

879
03:24:53,540 --> 03:24:57,140
other people to use it or contribute to it.

880
03:24:57,140 --> 03:25:02,660
And we will do a lot more of this tomorrow and on Thursday.

881
03:25:03,380 --> 03:25:09,300
But you can really choose whether you want to work on

882
03:25:09,300 --> 03:25:14,020
on a service like GitHub or whether you want to work locally.

883
03:25:14,020 --> 03:25:19,220
And traditionally, we have given, when we gave this lesson half a year ago and in the past,

884
03:25:20,500 --> 03:25:27,140
we always started from zero, from nothing, and we were trying to build it up in the terminal

885
03:25:28,020 --> 03:25:34,580
and learn Git this way. But this time, we do it completely differently. This time,

886
03:25:34,580 --> 03:25:38,420
we start with something that already exists. Maybe it's a little bit overwhelming. There

887
03:25:38,420 --> 03:25:43,540
are lots of new terms, but we start with an existing repository. But our hope is

888
03:25:43,540 --> 03:25:48,540
that by browsing and contributing to something existing,

889
03:25:49,140 --> 03:25:51,860
you get an understanding of what it is.

890
03:25:51,860 --> 03:25:56,100
And then the details of how do I do it in detail,

891
03:25:56,100 --> 03:25:58,100
like which commands to type.

892
03:25:58,100 --> 03:25:59,180
These you don't have to remember,

893
03:25:59,180 --> 03:26:00,420
you can look them up later.

894
03:26:00,420 --> 03:26:02,980
Our goal is to communicate an understanding.

895
03:26:05,940 --> 03:26:09,080
And now I suggest that we have a look at,

896
03:26:09,080 --> 03:26:12,060
you wanted to show us how we can do that in VS Code.

897
03:26:13,540 --> 03:26:16,900
And this is still the exercise from before the break.

898
03:26:16,900 --> 03:26:20,180
So in there, we did, what did we do?

899
03:26:20,180 --> 03:26:24,200
We created a new branch and we created a couple of commits.

900
03:26:25,500 --> 03:26:27,540
Yeah, so I just very briefly wanted to show

901
03:26:27,540 --> 03:26:30,180
how something like this is usually implemented

902
03:26:30,180 --> 03:26:32,580
in a graphical editor.

903
03:26:33,820 --> 03:26:35,500
In this case, I use VS Code as an example,

904
03:26:35,500 --> 03:26:37,340
but we are not using this code

905
03:26:37,340 --> 03:26:39,220
in order to endorse Microsoft products.

906
03:26:39,220 --> 03:26:41,740
And so probably if you use another type of editor,

907
03:26:41,740 --> 03:26:43,500
it would look very, very similar.

908
03:26:43,500 --> 03:26:46,740
And I will only show how to create a commit

909
03:26:46,740 --> 03:26:49,540
and maybe some of the other features that VS Code provides

910
03:26:49,540 --> 03:26:51,180
or like editors like this provide.

911
03:26:51,180 --> 03:26:52,980
I will not go through all the steps.

912
03:26:54,220 --> 03:26:56,980
But in this case, I'm using VS Code

913
03:26:56,980 --> 03:27:00,140
with only a few extensions installed.

914
03:27:00,140 --> 03:27:02,700
So it should basically the feature that I'm showing now

915
03:27:02,700 --> 03:27:04,340
is already implemented in VS Code.

916
03:27:04,340 --> 03:27:07,080
It's not any additional thing that you have to install.

917
03:27:07,080 --> 03:27:09,780
And typically, you will see a sign like this,

918
03:27:09,780 --> 03:27:13,760
which is called source control on the left side,

919
03:27:15,100 --> 03:27:16,160
which covers Git.

920
03:27:16,160 --> 03:27:17,700
So if you take a look at our project,

921
03:27:17,700 --> 03:27:19,100
in this case, it's again the same,

922
03:27:19,100 --> 03:27:21,780
it's the same repository as we saw before.

923
03:27:21,780 --> 03:27:26,780
And let's say we want to change the amount of cilantro here.

924
03:27:28,780 --> 03:27:29,780
So we could, for instance,

925
03:27:29,780 --> 03:27:32,340
now if we increase the amount of cilantro,

926
03:27:32,340 --> 03:27:35,420
we've made a change to the existing repository.

927
03:27:35,420 --> 03:27:38,300
And now we see that VS Code has registered

928
03:27:38,300 --> 03:27:39,220
that there has been a change.

929
03:27:39,220 --> 03:27:43,060
and it shows it here in this source control tab.

930
03:27:43,060 --> 03:27:45,620
So if you click on it, now it will list the files

931
03:27:45,620 --> 03:27:47,620
which a change has been registered.

932
03:27:47,620 --> 03:27:51,220
In this case, it's the guacamole Macdon file.

933
03:27:51,220 --> 03:27:53,900
And I can actually click on this file that has been created

934
03:27:53,900 --> 03:27:57,460
and it will show me the differences to the previous commit.

935
03:27:57,460 --> 03:28:00,060
So, or like the differences between the current state

936
03:28:00,060 --> 03:28:02,380
of your repository and the last commit.

937
03:28:02,380 --> 03:28:04,980
So in this case, it shows me that in this one line here,

938
03:28:04,980 --> 03:28:07,060
I have changed one character.

939
03:28:07,060 --> 03:28:11,100
I can also easily discard the changes

940
03:28:11,100 --> 03:28:12,980
if I wanted to do it that way,

941
03:28:12,980 --> 03:28:17,100
but I can also stage this file.

942
03:28:17,100 --> 03:28:20,100
This is something we haven't discussed today,

943
03:28:20,100 --> 03:28:22,540
but if I'm not misinformed,

944
03:28:22,540 --> 03:28:23,980
this will be covered tomorrow

945
03:28:23,980 --> 03:28:26,220
when we actually work with the command line,

946
03:28:26,220 --> 03:28:29,300
where we stage a commit and afterwards stage a file,

947
03:28:29,300 --> 03:28:31,580
and then we can commit it by writing our message.

948
03:28:31,580 --> 03:28:36,580
So for instance, I can now write increase cilantro.

949
03:28:37,060 --> 03:28:41,780
Let's see, of course, then I can click on commit.

950
03:28:43,660 --> 03:28:47,440
And now I've created a commit locally in VS Code.

951
03:28:47,440 --> 03:28:48,980
So this can be very useful for those of you

952
03:28:48,980 --> 03:28:52,300
who work with something like VS Code already,

953
03:28:52,300 --> 03:28:54,780
because Git is something which is typically

954
03:28:54,780 --> 03:28:58,180
already very well integrated with these tools.

955
03:29:01,980 --> 03:29:03,220
Another one, do you think this is enough

956
03:29:03,220 --> 03:29:05,740
or shall we spend some more time on VS Code?

957
03:29:07,860 --> 03:29:08,900
Oh, that's good.

958
03:29:11,420 --> 03:29:13,460
Yeah, we have screenshots.

959
03:29:13,460 --> 03:29:16,140
Also, we understand that not some participants

960
03:29:16,140 --> 03:29:17,380
have different editors,

961
03:29:17,380 --> 03:29:20,180
and our ambition is that we then, over time,

962
03:29:20,180 --> 03:29:24,460
add instructions also for other very popular editors

963
03:29:24,460 --> 03:29:25,820
and editing environments.

964
03:29:27,180 --> 03:29:32,180
But here, the message is that we can do most of the steps.

965
03:29:34,460 --> 03:29:36,300
Okay, maybe keep it open,

966
03:29:36,300 --> 03:29:38,620
because there is one more thing I want to say here

967
03:29:38,620 --> 03:29:43,620
is that we can do most of the things in VS code

968
03:29:44,020 --> 03:29:46,580
that we would also do otherwise on the command line

969
03:29:46,580 --> 03:29:51,580
or in GitHub, but we hopefully have already a little bit

970
03:29:51,860 --> 03:29:55,100
of a visual understanding of what these mean.

971
03:29:55,100 --> 03:29:59,820
So when we do a commit, it's the same thing we did before.

972
03:30:01,940 --> 03:30:04,420
Sometimes you want to have a terminal

973
03:30:06,300 --> 03:30:09,420
So if there is anything that you know how to do

974
03:30:09,420 --> 03:30:11,260
on the command line,

975
03:30:11,260 --> 03:30:13,520
but you don't know how to do it in VS Code,

976
03:30:14,900 --> 03:30:18,320
what you can do is you start a terminal inside VS Code.

977
03:30:19,760 --> 03:30:21,980
And I think so on the top bar, there is terminal.

978
03:30:21,980 --> 03:30:26,980
And if you start that, it will open a command line.

979
03:30:27,400 --> 03:30:31,160
And here you can then do git commands

980
03:30:32,300 --> 03:30:33,880
if you are familiar to the command line

981
03:30:33,880 --> 03:30:36,240
or if you want to follow the command line track.

982
03:30:36,300 --> 03:30:38,540
So that's always an alternative,

983
03:30:38,540 --> 03:30:43,540
if you feel limited by what the source control

984
03:30:44,380 --> 03:30:45,620
tab is offering you.

985
03:30:49,780 --> 03:30:50,780
Good.

986
03:30:50,780 --> 03:30:52,460
Should I take the screen from you?

987
03:30:53,420 --> 03:30:54,260
Okay.

988
03:30:54,260 --> 03:30:55,100
Oh, just a sec.

989
03:30:55,100 --> 03:30:57,060
I need to keep it for the moment.

990
03:30:57,060 --> 03:30:59,860
I need to navigate to the right thing.

991
03:30:59,860 --> 03:31:00,700
Moment.

992
03:31:00,700 --> 03:31:13,020
Yes, and here we are, and I have the screen share.

993
03:31:13,020 --> 03:31:16,660
I'll just arrange my windows.

994
03:31:16,660 --> 03:31:26,980
There was one more question that I wanted to clarify before moving on, which is

995
03:31:26,980 --> 03:31:31,900
we have been using the word fork. And I think somewhere in the instructions, depending on

996
03:31:31,900 --> 03:31:38,660
how you follow, we have also used the work cloning. And I wanted to tell really tell

997
03:31:38,660 --> 03:31:47,420
you what the difference is. And for the to clarify that I'm going to my I need to go

998
03:31:47,420 --> 03:31:56,100
to my work back to the fork. So the difference between fork and clone is that both are copies

999
03:31:56,100 --> 03:32:00,820
both are full copies with all the commits, all the branches, everything.

1000
03:32:02,260 --> 03:32:06,260
But the fork stays on GitHub.

1001
03:32:09,060 --> 03:32:14,660
It's here on GitHub, it's not on my computer, but I copied it to my namespace.

1002
03:32:15,780 --> 03:32:19,380
So instead of CodeRefinery, it says my user account. So that's a fork.

1003
03:32:19,380 --> 03:32:24,380
Blowning means making a copy from GitHub

1004
03:32:24,700 --> 03:32:28,420
or similar place onto my computer.

1005
03:32:28,420 --> 03:32:29,700
It's still a full copy.

1006
03:32:32,340 --> 03:32:34,020
The difference is that if,

1007
03:32:34,020 --> 03:32:36,500
when I make changes locally on my computer,

1008
03:32:36,500 --> 03:32:40,700
they don't automatically go here on GitHub.

1009
03:32:40,700 --> 03:32:42,660
I have to actively tell it to,

1010
03:32:42,660 --> 03:32:44,500
and we will show you how to do that.

1011
03:32:44,500 --> 03:32:46,100
We will practice that tomorrow.

1012
03:32:47,220 --> 03:32:49,360
So hopefully that clarified it a little bit.

1013
03:32:49,380 --> 03:32:56,740
But now let's, let's learn something new. And let's do, we will do another exercise

1014
03:32:56,740 --> 03:33:05,500
in in 10 to 15 minutes. But let me first explain what we want from you and where we are. So

1015
03:33:05,500 --> 03:33:13,740
I will navigate out of here just to make sure that we all know where we are. Before, before

1016
03:33:13,740 --> 03:33:19,780
the break, we have been committing changes, creating commits, creating branches. And now

1017
03:33:19,780 --> 03:33:30,300
I will navigate to merging changes and contributing to the project. And you can find this also

1018
03:33:30,300 --> 03:33:41,740
in the notes. So this is where I am now. And our goal for this episode, which will

1019
03:33:41,740 --> 03:33:46,740
which we will spend on for the remaining

1020
03:33:47,980 --> 03:33:50,040
a little bit over one hour today,

1021
03:33:51,540 --> 03:33:55,480
is how to merge changes from different branches.

1022
03:33:56,540 --> 03:33:58,620
We will see that on GitHub,

1023
03:33:58,620 --> 03:34:01,180
it's done through something called a pull request,

1024
03:34:03,940 --> 03:34:08,940
but the name pull request is confusing for newcomers.

1025
03:34:08,940 --> 03:34:19,020
And what I find really useful is whenever you hear pull request, think of a change proposal.

1026
03:34:19,020 --> 03:34:24,900
It's a proposal for a change of a branch.

1027
03:34:24,900 --> 03:34:33,380
We will create a pull request, and we will learn how to merge a pull request within your

1028
03:34:33,380 --> 03:34:38,540
own repository, within your own fork.

1029
03:34:38,540 --> 03:34:48,440
And then optionally, at the end, we can try to send a pull request, change proposal from

1030
03:34:48,440 --> 03:34:51,500
one repository to the other.

1031
03:34:51,500 --> 03:34:58,440
And guess what I will try to do, I will try to send a pull request from my own fork towards

1032
03:34:58,440 --> 03:35:02,780
the upstream, the central one, the one that I forked from.

1033
03:35:02,780 --> 03:35:11,740
And we will already get a taste of how it is to collaborate and contribute.

1034
03:35:11,740 --> 03:35:17,340
It will give us a really good basis for tomorrow and for Thursday.

1035
03:35:17,340 --> 03:35:24,420
While doing it, we may or might encounter something called a conflict.

1036
03:35:24,420 --> 03:35:31,780
A conflict in Git is when we modify the same part of the code on two different branches

1037
03:35:31,780 --> 03:35:32,920
in two different ways.

1038
03:35:35,600 --> 03:35:38,000
And we will, if we have time left at the end,

1039
03:35:38,000 --> 03:35:40,400
Gregor and me, we will produce a conflict.

1040
03:35:40,400 --> 03:35:41,960
So it's just that you know how it looks

1041
03:35:41,960 --> 03:35:43,360
and we will also try to resolve it

1042
03:35:43,360 --> 03:35:47,600
so that you can see that it's possible

1043
03:35:47,600 --> 03:35:49,240
to resolve it relatively easily.

1044
03:35:51,360 --> 03:35:52,500
So that's our plan.

1045
03:35:56,720 --> 03:35:59,240
So as a reminder, last in the last exercise,

1046
03:35:59,240 --> 03:36:03,340
we created two commits on a branch.

1047
03:36:03,340 --> 03:36:04,380
Let's verify that.

1048
03:36:04,380 --> 03:36:05,900
So I did that as well.

1049
03:36:05,900 --> 03:36:09,300
I was following along with the exercise

1050
03:36:10,280 --> 03:36:13,060
and let me show you what I did.

1051
03:36:13,060 --> 03:36:16,700
I'm navigating to, well, let me zoom in first

1052
03:36:16,700 --> 03:36:20,320
to insights and network.

1053
03:36:22,940 --> 03:36:24,940
And I want to share with you what I did.

1054
03:36:24,940 --> 03:36:41,540
Okay. Loading a thinking. Oh, okay. Okay. Lots of people did something similar as me.

1055
03:36:41,540 --> 03:36:50,360
What I did is I created a commit on the main branch and I wanted to modify the pumpkin

1056
03:36:50,360 --> 03:36:55,360
by recipe, but I also created a branch called new recipe

1057
03:36:57,000 --> 03:36:58,720
on which I created two commits.

1058
03:36:58,720 --> 03:37:01,400
I had an idea for a pineapple salad

1059
03:37:02,720 --> 03:37:05,720
and I had a modification, tonic water.

1060
03:37:05,720 --> 03:37:09,280
Not sure it's a good idea, but I just came up with it.

1061
03:37:09,280 --> 03:37:11,440
My goal now is to, I want to combine,

1062
03:37:11,440 --> 03:37:15,160
I want to merge this branch into this branch.

1063
03:37:15,160 --> 03:37:19,380
Notice how GitHub shows these branches as little labels.

1064
03:37:20,360 --> 03:37:23,840
Technically, they work really like little sticky notes,

1065
03:37:23,840 --> 03:37:25,240
which stick to our commit.

1066
03:37:27,600 --> 03:37:30,160
My goal is to combine these two, to merge these two.

1067
03:37:33,480 --> 03:37:37,020
Just reading up whether I forgot anything.

1068
03:37:37,880 --> 03:37:39,620
We will do it with a pull request.

1069
03:37:41,180 --> 03:37:43,980
Again, when I hear pull request, I think change proposal.

1070
03:37:45,080 --> 03:37:47,240
And again, we offer you three paths.

1071
03:37:47,240 --> 03:37:51,000
You can do that purely on GitHub.

1072
03:37:51,000 --> 03:37:54,800
You can also try to do that through VS Code or command line.

1073
03:37:56,920 --> 03:37:58,920
And I just want to get you started here on,

1074
03:37:58,920 --> 03:38:00,640
before you sending you into the exercise,

1075
03:38:00,640 --> 03:38:01,880
I want to get you started

1076
03:38:09,040 --> 03:38:11,920
on how to initiate this pull request.

1077
03:38:13,000 --> 03:38:15,240
This will actually allow me to also answer one question

1078
03:38:15,240 --> 03:38:16,440
that I wanted to answer.

1079
03:38:17,240 --> 03:38:29,640
So again, first thing you want to check, are you on your fork, yes I am.

1080
03:38:29,640 --> 03:38:39,320
Then you want to navigate to the branch that you want to send the change proposal from.

1081
03:38:39,320 --> 03:38:45,120
So in my case, I click on the main, this will be part of the exercise.

1082
03:38:45,120 --> 03:38:49,960
And you want to then navigate to the branch that you want to incorporate into main, that

1083
03:38:49,960 --> 03:38:51,400
you want to merge into main.

1084
03:38:51,400 --> 03:38:57,120
In my case, it's new recipe.

1085
03:38:57,120 --> 03:38:58,920
And then this thing changed here.

1086
03:38:58,920 --> 03:39:04,480
Now I know that I'm on, I'm on the new recipe branch.

1087
03:39:04,480 --> 03:39:08,640
Somebody in the document also asked, how do I find an overview of the branches?

1088
03:39:08,640 --> 03:39:14,040
I don't know where to, I don't know how to rename a branch.

1089
03:39:14,040 --> 03:39:22,280
this thing here. This symbol. And if I zoom out, it will tell me there are five branches.

1090
03:39:22,280 --> 03:39:28,280
And if I zoom in, it changes to a symbol. And if you click on this one, you can get

1091
03:39:28,280 --> 03:39:35,480
an overview of all the available branches. And here I could delete them or I could rename

1092
03:39:35,480 --> 03:39:44,680
them. So if I don't like the name new recipe, I could, I could hear rename the branch, but

1093
03:39:44,680 --> 03:39:55,440
I will not do that. So back to my branch, new recipe, and then to initiate this pull

1094
03:39:55,440 --> 03:40:06,160
request process, you can click on contribute, contribute, open pull request. And this will

1095
03:40:06,160 --> 03:40:13,320
be your first step in the exercise. So back to the exercise, let me tell you what the

1096
03:40:13,320 --> 03:40:20,040
goal is. And we will give you 20 minutes. Your goal is navigate to your branch, open

1097
03:40:20,040 --> 03:40:28,840
a pull request. Then in the pull request, it will ask you to give it a title and a description.

1098
03:40:28,840 --> 03:40:35,660
Please also use the walkthrough and the solution below because we added a checklist for you

1099
03:40:35,660 --> 03:40:42,700
of things that we we check when we create a pull request. And then after you have created

1100
03:40:42,700 --> 03:40:47,700
Also, before you create it, browse your network.

1101
03:40:49,740 --> 03:40:50,580
What is the network?

1102
03:40:50,580 --> 03:40:54,540
It's this thing, insights network.

1103
03:40:54,540 --> 03:40:56,400
So when you open a pull request,

1104
03:41:00,580 --> 03:41:01,420
waiting, waiting, waiting.

1105
03:41:01,420 --> 03:41:04,180
So after you open it, have a look at your network.

1106
03:41:04,180 --> 03:41:06,540
You will see that the change is not merged yet.

1107
03:41:06,540 --> 03:41:15,340
Only after you merge the pull request, have a look at the network again and then you will

1108
03:41:15,340 --> 03:41:19,660
see that there is a new merge commit.

1109
03:41:19,660 --> 03:41:25,420
Then we have an extra step, which is find out which branches are safe to delete and

1110
03:41:25,420 --> 03:41:27,420
delete them.

1111
03:41:27,420 --> 03:41:32,660
And you will also see that deleting branches doesn't necessarily delete commits.

1112
03:41:32,660 --> 03:41:39,220
And then an optional step is if you feel like it, try to open a new pull request, but then

1113
03:41:39,220 --> 03:41:48,660
this time towards the repository which you forked from.

1114
03:41:48,660 --> 03:41:51,140
And I will later demonstrate this.

1115
03:41:51,140 --> 03:41:52,180
We will do that with Gecko.

1116
03:41:52,180 --> 03:41:58,160
We will also try to actually create, we will try to both change the same recipe in two

1117
<<<<<<< HEAD
03:41:58,160 --> 03:42:11,280
different ways. And we will see what happens then. 20 minutes, we will be back. Is 20 minutes
||||||| b3e078a
04:04:21,340 --> 04:04:26,180
Thanks to our colleague, Matthias, who created those.
=======
04:04:21,340 --> 04:04:26,180
Thanks to our colleague, [name], who created those.
>>>>>>> refs/heads/synced/master

1118
03:42:11,280 --> 03:42:23,360
enough? 20 minutes will be enough. We'll be back 45 minutes past the hour. And here, 45

1119
03:42:23,360 --> 03:42:32,240
past the hour. Again, it will be really helpful if you tell us how it is going. We get a status

1120
<<<<<<< HEAD
03:42:32,240 --> 03:42:38,720
and an overview. Keep the questions coming. Good luck with the exercise and we will then
||||||| b3e078a
04:04:33,500 --> 04:04:36,100
and I want to show you how we, how Gecko and we,
=======
04:04:33,500 --> 04:04:36,100
and I want to show you how we, how [name] and we,
>>>>>>> refs/heads/synced/master

1121
03:42:38,720 --> 03:42:42,080
discuss afterwards. Good luck. See you then. Bye.

1122
03:42:53,360 --> 03:42:55,420
you

1123
03:43:23,360 --> 03:43:25,420
you

1124
03:43:53,360 --> 03:43:55,420
you

1125
03:44:23,360 --> 03:44:25,420
you

1126
03:44:53,360 --> 03:44:55,420
you

1127
03:45:23,360 --> 03:45:25,420
you

1128
03:45:53,360 --> 03:45:55,420
you

1129
03:46:23,360 --> 03:46:25,420
you

1130
03:46:53,360 --> 03:46:55,420
you

1131
03:47:23,360 --> 03:47:25,420
you

1132
03:47:53,360 --> 03:47:55,420
you

1133
03:48:23,360 --> 03:48:25,420
you

1134
03:48:53,360 --> 03:48:55,420
you

1135
03:49:23,360 --> 03:49:25,420
you

1136
03:49:53,360 --> 03:49:55,420
you

1137
03:50:23,360 --> 03:50:25,420
you

1138
03:50:53,360 --> 03:50:55,420
you

1139
03:51:23,360 --> 03:51:25,420
you

1140
03:51:53,360 --> 03:51:55,420
you

1141
03:52:23,360 --> 03:52:25,420
you

1142
03:52:53,360 --> 03:52:55,420
you

1143
03:53:23,360 --> 03:53:25,420
you

1144
03:53:53,360 --> 03:53:55,420
you

1145
03:54:23,360 --> 03:54:25,420
you

1146
03:54:53,360 --> 03:54:55,420
you

1147
03:55:23,360 --> 03:55:25,420
you

1148
03:55:53,360 --> 03:55:55,420
you

1149
03:56:23,360 --> 03:56:25,420
you

1150
03:56:53,360 --> 03:56:55,420
you

1151
03:57:23,360 --> 03:57:25,420
you

1152
03:57:53,360 --> 03:57:55,420
you

1153
03:58:23,360 --> 03:58:25,420
you

1154
03:58:53,360 --> 03:58:55,420
you

1155
03:59:23,360 --> 03:59:25,420
you

1156
03:59:53,360 --> 03:59:55,420
you

1157
04:00:23,360 --> 04:00:25,420
you

1158
04:00:53,360 --> 04:00:55,420
you

1159
04:01:23,360 --> 04:01:25,420
you

1160
04:01:53,360 --> 04:01:55,420
you

1161
04:02:23,360 --> 04:02:25,420
you

1162
04:02:53,360 --> 04:02:55,420
you

1163
04:03:23,360 --> 04:03:25,420
you

1164
04:03:53,360 --> 04:04:17,120
Welcome back from exercise. I actually cannot hear the jingle if there was one on my side

1165
04:04:17,120 --> 04:04:22,560
but maybe there was one and hopefully you all enjoy it. Thanks to our colleague Matthias

1166
04:04:22,560 --> 04:04:32,000
who created those. My plan is now that I want to go through the exercise, but show you the

1167
04:04:32,000 --> 04:04:38,680
key steps. And I want to show you how we how Gecko and we how how we look at pull requests

1168
04:04:38,680 --> 04:04:46,360
when we create them and how we look at them when we merge them. And I also want to go

1169
04:04:46,360 --> 04:04:52,280
through this step of deleting branches. And then we will take a very short break. So then

1170
04:04:52,280 --> 04:04:54,280
and only five minute break.

1171
04:04:54,280 --> 04:04:57,200
And then we will back for conflict resolution.

1172
04:04:58,960 --> 04:05:01,100
So let me go through the steps.

1173
04:05:01,100 --> 04:05:04,120
I'm now here, top left is my mouse.

1174
04:05:04,120 --> 04:05:05,640
I'm in my branch.

1175
04:05:05,640 --> 04:05:09,240
I will now initiate a pull request.

1176
04:05:12,840 --> 04:05:14,800
Let me get more space here.

1177
04:05:17,680 --> 04:05:20,560
And the first thing I always verify is from where to where.

1178
04:05:20,560 --> 04:05:25,560
So I want to go from this repository to this one.

1179
04:05:26,280 --> 04:05:28,240
No, I want to go to my own one.

1180
04:05:28,240 --> 04:05:31,840
So I will change this to my repository.

1181
04:05:33,560 --> 04:05:36,800
And then I verify from which branch to which branch,

1182
04:05:36,800 --> 04:05:38,240
from new recipe to main.

1183
04:05:38,240 --> 04:05:39,600
Yes, that's what I wanted.

1184
04:05:42,920 --> 04:05:44,720
I will change the title because a new recipe

1185
04:05:44,720 --> 04:05:45,880
is not very descriptive.

1186
04:05:45,880 --> 04:05:49,520
So we want to have a descriptive one line title for this.

1187
04:05:49,520 --> 04:05:53,600
Also, if I remember correctly, it was an idea

1188
04:05:53,600 --> 04:05:58,400
for a tasty pineapple salad.

1189
04:06:00,440 --> 04:06:04,240
Here, I can give more context, more context.

1190
04:06:05,840 --> 04:06:10,840
For instance, if we discussed this earlier in an issue,

1191
04:06:11,160 --> 04:06:12,320
I can refer to it.

1192
04:06:13,960 --> 04:06:16,480
So more context, why I did this, what I did.

1193
04:06:16,480 --> 04:06:23,800
And then what I personally do before clicking create pull request, I normally scroll down

1194
04:06:23,800 --> 04:06:28,760
and I have a look, I had two commits.

1195
04:06:28,760 --> 04:06:32,000
Are these the one that I intended to send?

1196
04:06:32,000 --> 04:06:33,000
Yes.

1197
04:06:33,000 --> 04:06:37,760
If I see some commits that I don't recognize, then I stop.

1198
04:06:37,760 --> 04:06:42,520
I also scroll down to the bottom and I see what is the actual change.

1199
04:06:42,520 --> 04:06:44,160
Is this the one that I wanted to send?

1200
04:06:44,160 --> 04:06:45,640
Yes, this is the one.

1201
04:06:47,640 --> 04:06:49,140
So this looks all pretty good.

1202
04:06:53,560 --> 04:06:55,240
Note that here, if I go on the little arrow,

1203
04:06:55,240 --> 04:06:58,200
I have a choice between create pull request

1204
04:06:58,200 --> 04:06:59,760
and create draft pull request.

1205
04:07:01,160 --> 04:07:02,320
This thing can be really useful,

1206
04:07:02,320 --> 04:07:04,420
but we will come back to that on Thursday.

1207
04:07:06,260 --> 04:07:08,800
I'm now ready to create a pull request.

1208
04:07:08,800 --> 04:07:10,040
Did I forget anything?

1209
04:07:11,120 --> 04:07:12,140
Hopefully not.

1210
04:07:12,140 --> 04:07:17,700
Let's create it.

1211
04:07:17,700 --> 04:07:23,580
When I create a pull request, there is a new number here in the tab pull requests, each

1212
04:07:23,580 --> 04:07:26,100
pull request has a number.

1213
04:07:26,100 --> 04:07:27,940
So I can refer to them.

1214
04:07:27,940 --> 04:07:32,500
This is the pull request number one.

1215
04:07:32,500 --> 04:07:39,740
And before I review it, and before I merge it, I will try to reload my network graph

1216
04:07:39,740 --> 04:07:42,080
and it might take again a few seconds.

1217
04:07:43,220 --> 04:07:45,020
But what I wanted to show you is that

1218
04:07:45,020 --> 04:07:48,940
just by opening a pull request, I didn't really,

1219
04:07:51,500 --> 04:07:52,780
oh, nothing merged yet.

1220
04:07:52,780 --> 04:07:55,060
The main branch didn't change yet.

1221
04:07:57,340 --> 04:07:58,660
This is still my branch.

1222
04:07:59,740 --> 04:08:03,040
The tasty pineapple recipe is still not on the main branch.

1223
04:08:04,780 --> 04:08:06,080
But now let's review it.

1224
04:08:06,080 --> 04:08:11,080
And when I merge a change proposal or request,

1225
04:08:13,600 --> 04:08:18,600
I look at the same things, the title, what is the context?

1226
04:08:22,340 --> 04:08:24,740
And notice that here we can even have a discussion.

1227
04:08:24,740 --> 04:08:26,740
You can comment on it.

1228
04:08:26,740 --> 04:08:28,020
You can say, this is a good idea.

1229
04:08:28,020 --> 04:08:28,980
This is a bad idea.

1230
04:08:28,980 --> 04:08:33,980
You can give ideas for changes, more about that.

1231
04:08:36,080 --> 04:08:41,760
on thursday i also look at what are the commits

1232
04:08:41,760 --> 04:08:46,640
and what has actually changed i often click here files changed

1233
04:08:48,800 --> 04:08:52,000
yep that looks pretty pretty okay i want to have that in my

1234
04:08:52,000 --> 04:08:54,560
main branch

1235
04:08:54,560 --> 04:09:08,440
Merge, merge, confirm.

1236
04:09:08,440 --> 04:09:09,520
And now it's merged.

1237
04:09:09,520 --> 04:09:20,840
So when I now look at the network and reload it, we will see a merge commit.

1238
04:09:20,840 --> 04:09:23,420
we will see a new commit on main,

1239
04:09:23,420 --> 04:09:25,320
which combines these two developments.

1240
04:09:28,360 --> 04:09:32,540
And while this is loading and refreshing, I can already,

1241
04:09:34,020 --> 04:09:38,260
if I now check on my main branch and I go to sell ads,

1242
04:09:41,100 --> 04:09:42,060
here, I can find it.

1243
04:09:42,060 --> 04:09:42,980
Here's the one.

1244
04:09:45,220 --> 04:09:46,580
Has this finished in the meantime?

1245
04:09:46,580 --> 04:09:47,420
It hasn't.

1246
04:09:47,420 --> 04:09:48,260
Yes, here it is.

1247
04:09:48,260 --> 04:09:49,140
Here's the merge commit.

1248
04:09:49,140 --> 04:09:53,880
So now I have merged these two changes.

1249
04:09:54,840 --> 04:09:56,320
And this is now a little bit hard to navigate

1250
04:09:56,320 --> 04:09:58,040
because we have now so many collaborators

1251
04:09:58,040 --> 04:10:00,000
that work on a very similar repository.

1252
04:10:01,220 --> 04:10:03,240
But this is really what I wanted to do.

1253
04:10:03,240 --> 04:10:04,640
So I'm happy with this.

1254
04:10:06,680 --> 04:10:08,600
But now I want to go one step further.

1255
04:10:08,600 --> 04:10:12,740
In the exercise, we asked you to, okay, scroll, scroll.

1256
04:10:13,920 --> 04:10:16,400
We asked you to delete a branch.

1257
04:10:16,400 --> 04:10:19,120
And what I will show you is that when I delete a branch,

1258
04:10:19,140 --> 04:10:23,300
I will only delete this sticky note.

1259
04:10:23,300 --> 04:10:25,100
I will not delete the commits.

1260
04:10:25,100 --> 04:10:32,000
The commits will still remain there because the commits are now part of another branch.

1261
04:10:32,000 --> 04:10:39,580
So what we wanted you to see that deleting branches doesn't necessarily delete commits.

1262
04:10:39,580 --> 04:10:47,040
And we also wanted to show you how can you safely remove branches.

1263
04:10:47,040 --> 04:10:51,400
One way is I can click on the button and then it's gone.

1264
04:10:51,400 --> 04:10:55,680
Because here Git knows that GitHub knows that this has been merged.

1265
04:10:55,680 --> 04:10:57,880
It is safe to delete the branch.

1266
04:10:57,880 --> 04:11:01,480
It is safe to delete the sticky note.

1267
04:11:01,480 --> 04:11:04,200
But what if I forget?

1268
04:11:04,200 --> 04:11:06,440
I forgot.

1269
04:11:06,440 --> 04:11:10,880
I navigate it back.

1270
04:11:10,880 --> 04:11:14,200
How can you find out which branches are safe to delete?

1271
04:11:14,200 --> 04:11:15,200
You can also leave them there.

1272
04:11:15,200 --> 04:11:17,520
I mean, they don't cost anything.

1273
04:11:17,520 --> 04:11:19,380
Well, no problem to have them there.

1274
04:11:20,660 --> 04:11:22,480
But after a while, maybe you will have,

1275
04:11:22,480 --> 04:11:23,540
I have now five branches.

1276
04:11:23,540 --> 04:11:26,520
After a while, you might have 50 branches

1277
04:11:26,520 --> 04:11:28,700
and you want to do some cleanup.

1278
04:11:28,700 --> 04:11:31,900
So what I sometimes do is I navigate here

1279
04:11:31,900 --> 04:11:33,780
to the branches, top left.

1280
04:11:39,800 --> 04:11:41,680
And this is a little bit tiny font,

1281
04:11:41,680 --> 04:11:45,800
but this symbol here tells me

1282
04:11:45,800 --> 04:11:47,600
that this branch has been merged.

1283
04:11:52,840 --> 04:11:54,840
This one has been merged, the new recipe.

1284
04:11:54,840 --> 04:11:57,800
It is absolutely safe to delete it here, Trashcan.

1285
04:12:01,760 --> 04:12:03,160
And now it's deleted.

1286
04:12:03,160 --> 04:12:07,060
And if I now reload this page,

1287
04:12:11,680 --> 04:12:14,080
I would have to wait a few seconds.

1288
04:12:14,080 --> 04:12:16,280
The commit will still be here,

1289
04:12:16,280 --> 04:12:18,820
but this sticky note would be gone.

1290
04:12:18,820 --> 04:12:20,960
That's all we did with deleting branches.

1291
04:12:26,900 --> 04:12:27,740
Super.

1292
04:12:31,840 --> 04:12:36,280
And my suggestion is that we will take a five minute break

1293
04:12:36,280 --> 04:12:39,360
and then Gregor and me will return to step number seven

1294
04:12:39,360 --> 04:12:44,360
and we will show you a pull request across repositories.

1295
04:12:49,420 --> 04:12:53,020
And at the same time, we will try to create a conflict,

1296
04:12:53,020 --> 04:12:54,740
but it will be a conflict

1297
04:12:54,740 --> 04:12:57,940
between two different code versions,

1298
04:12:57,940 --> 04:12:59,340
so it will be very friendly,

1299
04:13:00,700 --> 04:13:04,340
and the humans will help the programs

1300
04:13:04,340 --> 04:13:05,820
to resolve the conflict.

1301
04:13:05,820 --> 04:13:16,220
Sounds good. Just catching up here with any questions. Yeah, so let's take a break until

1302
04:13:16,220 --> 04:13:25,820
the full hour. So until I need to make that visible. Here, break until the full hour.

1303
04:13:25,820 --> 04:13:35,780
And then we show you some conflict resolution in Git directly on GitHub.

1304
04:13:35,780 --> 04:13:37,180
See you in five minutes.

1305
04:13:37,180 --> 04:13:37,900
Bye.

1306
04:13:55,820 --> 04:13:57,880
you

1307
04:14:25,820 --> 04:14:27,880
you

1308
04:14:55,820 --> 04:14:57,880
you

1309
04:15:25,820 --> 04:15:27,880
you

1310
04:15:55,820 --> 04:15:57,880
you

1311
04:16:25,820 --> 04:16:27,880
you

1312
04:16:55,820 --> 04:16:57,880
you

1313
04:17:25,820 --> 04:17:27,880
you

1314
04:17:55,820 --> 04:17:57,880
you

1315
04:18:25,820 --> 04:18:27,880
you

1316
04:18:55,820 --> 04:19:19,900
And welcome back for the last half an hour of today.

1317
04:19:19,900 --> 04:19:30,500
Here we will continue on the idea of creating these change proposals pull requests on GitHub.

1318
04:19:30,500 --> 04:19:33,580
But now we want to take it a step further.

1319
04:19:33,580 --> 04:19:40,860
Because what I will try to do is I will try to create a pull request between my repository

1320
04:19:40,860 --> 04:19:45,380
and towards the one that I forked from.

1321
04:19:45,380 --> 04:19:48,660
At the same time, we will, with Gaggle,

1322
04:19:48,660 --> 04:19:53,180
we will try to change the same recipe

1323
04:19:55,120 --> 04:19:57,760
in two different ways, and we will see what happens

1324
04:19:57,760 --> 04:19:59,060
and how do we deal with it.

1325
04:19:59,060 --> 04:20:00,740
Because that can happen in real life

1326
04:20:00,740 --> 04:20:02,940
that you work with somebody

1327
04:20:02,940 --> 04:20:06,740
and you modify the same portion of the file

1328
04:20:06,740 --> 04:20:07,840
in two different ways.

1329
04:20:09,380 --> 04:20:12,140
Let's see how Git deals with this.

1330
04:20:12,140 --> 04:20:14,780
Also note that when I'm now on my fork,

1331
04:20:14,780 --> 04:20:19,100
it informs me that this branch, which is the main branch,

1332
04:20:20,100 --> 04:20:25,100
seems to be four commits ahead of the one that I forked from.

1333
04:20:29,740 --> 04:20:34,180
That's interesting because that also shows me

1334
04:20:34,180 --> 04:20:38,860
that the fork and the so-called upstream,

1335
04:20:38,860 --> 04:20:43,860
they don't automatically synchronize somehow magically.

1336
04:20:44,780 --> 04:20:51,620
I have to, we can synchronize it, but we have to do it actively.

1337
04:20:51,620 --> 04:20:57,340
So until I do it, they are really separate repositories with their separate histories.

1338
04:20:57,340 --> 04:20:58,340
Why four commits?

1339
04:20:58,340 --> 04:21:01,180
What are the four commits?

1340
04:21:01,180 --> 04:21:07,300
I did two commits on the new recipe branch.

1341
04:21:07,300 --> 04:21:09,580
I did a different commit on the main branch.

1342
04:21:09,580 --> 04:21:10,580
So three.

1343
04:21:10,580 --> 04:21:11,580
Where is the fourth one?

1344
04:21:11,580 --> 04:21:14,020
The fourth one was the merge commit.

1345
04:21:14,020 --> 04:21:17,820
It was the one where I combined new recipe with main.

1346
04:21:17,820 --> 04:21:20,980
So my branch is four commits ahead.

1347
04:21:20,980 --> 04:21:27,760
But now I will try to create a new change, and let's see what we do.

1348
04:21:27,760 --> 04:21:36,500
I will create a new branch, and I will call it another recipe.

1349
04:21:36,500 --> 04:21:38,300
It's not a great name.

1350
04:21:38,300 --> 04:21:40,060
It's also good if the branches are,

1351
04:21:42,340 --> 04:21:44,340
if the branch name is descriptive.

1352
04:21:44,340 --> 04:21:46,240
Let me take a descriptive branch name.

1353
04:21:47,500 --> 04:21:50,380
I personally like to call my branches with my name

1354
04:21:51,300 --> 04:21:53,500
because then I can find them again

1355
04:21:53,500 --> 04:21:55,320
and what I'm doing on the branch.

1356
04:21:55,320 --> 04:21:57,480
So in this case, I will do,

1357
04:22:00,380 --> 04:22:04,200
I will make a change to modify guacamole.

1358
04:22:06,940 --> 04:22:08,120
So now everybody, please watch.

1359
04:22:08,120 --> 04:22:10,760
So now no more exercise, you don't have to,

1360
04:22:10,760 --> 04:22:13,120
you don't have to do the same thing.

1361
04:22:13,120 --> 04:22:16,360
Now, please watch and let's see if I,

1362
04:22:18,840 --> 04:22:20,280
if I make some mistakes

1363
04:22:20,280 --> 04:22:21,760
and please continue asking the questions.

1364
04:22:21,760 --> 04:22:23,600
So I'm seeing the questions coming in.

1365
04:22:24,840 --> 04:22:26,120
I create this branch.

1366
04:22:30,320 --> 04:22:32,160
What do I need to do now?

1367
04:22:32,160 --> 04:22:33,600
Oh yeah, here, create branch.

1368
04:22:34,600 --> 04:22:35,440
Yes.

1369
04:22:35,440 --> 04:22:39,840
And here it is, so I'm on the new branch.

1370
04:22:39,840 --> 04:22:40,840
And guess what?

1371
04:22:40,840 --> 04:22:49,800
I will now modify the guacamole, which happens to be here, sides, guacamole.

1372
04:22:49,800 --> 04:22:55,880
And I can modify it directly here, the pen button on top right, edit.

1373
04:22:55,880 --> 04:22:59,140
What should we do with it?

1374
04:22:59,140 --> 04:23:02,360
So I personally am not a big fan of cilantro.

1375
04:23:02,360 --> 04:23:13,900
What I will do is I will reduce the cilantro amount to 0.5 tablespoons.

1376
04:23:13,900 --> 04:23:20,580
Something I like to do when I do this on GitHub is I switch on the preview so that I can see

1377
04:23:20,580 --> 04:23:23,660
what did I actually change.

1378
04:23:23,660 --> 04:23:39,580
showed it here I removed one I added 0.5 that looks good and now I want to commit change

1379
04:23:39,580 --> 04:23:43,620
on the branch

1380
04:23:43,620 --> 04:23:48,780
this is not a good commit message because it's it tells me what file I change but it

1381
04:23:48,780 --> 04:23:52,160
it doesn't really summarize what I did.

1382
04:23:52,160 --> 04:23:54,020
A much better commit message would be

1383
04:23:55,160 --> 04:23:56,960
reduce the cilantro amount.

1384
04:23:58,780 --> 04:24:00,000
And why did I change it?

1385
04:24:00,000 --> 04:24:02,200
Well, because I'm not a fan.

1386
04:24:07,800 --> 04:24:09,520
Does this look okay?

1387
04:24:09,520 --> 04:24:10,800
Yes.

1388
04:24:10,800 --> 04:24:13,000
Do the Guacamole branch commit changes.

1389
04:24:13,000 --> 04:24:27,800
If I now go back to my repository on top, there is this yellow field that also some

1390
04:24:27,800 --> 04:24:28,800
people were wondering about.

1391
04:24:28,800 --> 04:24:29,800
What is that?

1392
04:24:29,800 --> 04:24:33,640
This is because GitHub now recognized that I have a new branch.

1393
04:24:33,640 --> 04:24:36,640
I modified it recently.

1394
04:24:36,640 --> 04:24:38,480
I maybe want to create a pull request.

1395
04:24:38,480 --> 04:24:39,480
Yes.

1396
04:24:39,480 --> 04:24:40,480
Thank you.

1397
04:24:40,480 --> 04:24:41,480
I want to.

1398
04:24:41,480 --> 04:24:42,480
So this can be helpful sometimes.

1399
04:24:42,480 --> 04:24:44,640
If you don't want to create a pull request, just ignore it.

1400
04:24:44,640 --> 04:24:46,300
But I really want to.

1401
04:24:47,920 --> 04:24:48,820
And this time,

1402
04:24:50,760 --> 04:24:52,620
I want to create the pull request,

1403
04:24:52,620 --> 04:24:55,920
not inside the same repository.

1404
04:24:55,920 --> 04:24:58,700
I really want to send it to Code Refinery recipe book.

1405
04:24:59,640 --> 04:25:00,480
So this looks good.

1406
04:25:00,480 --> 04:25:02,580
From my branch, from my repository,

1407
04:25:03,680 --> 04:25:06,920
towards the main branch, Code Refinery recipe book.

1408
04:25:09,800 --> 04:25:11,620
Let's summarize it in a title.

1409
04:25:12,480 --> 04:25:16,160
reduce cilantro amount

1410
04:25:19,440 --> 04:25:24,960
more description if needed again i scroll down what is the change

1411
04:25:28,560 --> 04:25:32,560
here is the change now how come i see all these other things

1412
04:25:37,680 --> 04:25:40,480
which i didn't modify now this is because

1413
04:25:42,480 --> 04:25:46,880
my main branch was four commits ahead

1414
04:25:46,880 --> 04:25:49,080
and I created this new,

1415
04:25:49,080 --> 04:25:51,560
I created this, what was it called?

1416
04:25:52,600 --> 04:25:54,640
The other one modified guacamole from main,

1417
04:25:54,640 --> 04:25:56,120
which was four commits ahead.

1418
04:25:56,120 --> 04:26:01,120
So what I see here is not only the cilantro change,

1419
04:26:01,800 --> 04:26:03,720
but also all my other local changes.

1420
04:26:05,080 --> 04:26:07,080
This is fine, but maybe this is a bit misleading.

1421
04:26:07,080 --> 04:26:09,480
So it's not only the cilantro amount,

1422
04:26:09,480 --> 04:26:14,480
it's also plus new salad recipe.

1423
04:26:20,280 --> 04:26:22,760
So here I bake together a couple of unrelated changes

1424
04:26:22,760 --> 04:26:25,920
into the same pull request.

1425
04:26:25,920 --> 04:26:28,880
Not the best practice, but happens.

1426
04:26:33,960 --> 04:26:38,560
And now I will open the pull request.

1427
04:26:39,480 --> 04:26:48,040
Oh, there are already 18 pull requests, wonderful.

1428
04:26:48,040 --> 04:26:49,480
We will review them later.

1429
04:26:49,480 --> 04:26:53,600
We will maybe not have time now, but thanks to everybody else who sent pull requests.

1430
04:26:53,600 --> 04:26:58,960
This is really cool because we can now build together a recipe book.

1431
04:26:58,960 --> 04:27:02,320
But I suggest that now we switch the screen to Gregor and Gregor makes a pull request,

1432
04:27:02,320 --> 04:27:07,720
which will also modify the guacamole recipe, but in a different way.

1433
04:27:07,720 --> 04:27:09,320
and let's see what happens then.

1434
04:27:23,720 --> 04:27:24,920
And Gregor, you're muted.

1435
04:27:27,320 --> 04:27:29,480
Thanks for telling me.

1436
04:27:29,480 --> 04:27:34,000
So I'm now on my fork of the recipe book recorded repository

1437
04:27:35,600 --> 04:27:37,360
and I will now change the same recipe

1438
04:27:37,360 --> 04:27:39,320
that Radovan has changed before.

1439
04:27:40,440 --> 04:27:43,040
In fact, in the previous exercise,

1440
04:27:43,040 --> 04:27:44,160
I changed the amount already,

1441
04:27:44,160 --> 04:27:48,240
but I will now increase it to two tablespoons of cilantro.

1442
04:27:48,240 --> 04:27:49,640
Oh, go for three.

1443
04:27:49,640 --> 04:27:50,840
I'll go for three, okay.

1444
04:27:53,400 --> 04:27:55,500
So I will now make a commit.

1445
04:27:55,500 --> 04:28:00,500
So I will now say, increase amount of cilantro.

1446
04:28:02,880 --> 04:28:05,640
Again, I could provide some more extended description,

1447
04:28:05,640 --> 04:28:07,360
is, I don't know, I really like

1448
04:28:13,880 --> 04:28:14,840
cilantro, for instance,

1449
04:28:14,840 --> 04:28:17,220
and of course provide some more explanations.

1450
04:28:17,220 --> 04:28:19,040
But for now, that should be enough.

1451
04:28:19,040 --> 04:28:22,040
I will now commit the changes.

1452
04:28:22,040 --> 04:28:23,760
So I have created now a new commit.

1453
04:28:23,760 --> 04:28:25,360
So if I go back to my repository,

1454
04:28:28,840 --> 04:28:31,040
I will see now again, if I click on commits,

1455
04:28:35,640 --> 04:28:38,120
Oh, sorry, that's the wrong branch, my bad.

1456
04:28:38,120 --> 04:28:41,860
So I go now to the change cilantro branch.

1457
04:28:43,000 --> 04:28:45,540
And I take a look at the commits, it should appear now.

1458
04:28:46,920 --> 04:28:47,840
And it does.

1459
04:28:47,840 --> 04:28:50,580
So increase amount of cilantro, that's fine.

1460
04:28:50,580 --> 04:28:52,940
And now I compare pull requests.

1461
04:28:55,840 --> 04:28:57,400
Create a pull request.

1462
04:28:57,400 --> 04:29:00,480
So I go and choose the repository I want to

1463
04:29:01,540 --> 04:29:02,960
merge my changes to.

1464
04:29:02,960 --> 04:29:06,340
So this would then be co-definery recipe book recorded.

1465
04:29:06,340 --> 04:29:07,180
That's fine.

1466
04:29:07,180 --> 04:29:08,020
I enter the main branch

1467
04:29:08,020 --> 04:29:11,260
and I do it from my local branch here,

1468
04:29:11,260 --> 04:29:13,660
which is in my namespace

1469
04:29:13,660 --> 04:29:18,660
and I use the change cilantro branch.

1470
04:29:18,700 --> 04:29:20,700
So I can now say, again,

1471
04:29:20,700 --> 04:29:22,700
I should also provide a title which is more descriptive.

1472
04:29:22,700 --> 04:29:27,140
So increase cilantro in,

1473
04:29:27,140 --> 04:29:32,140
Oh, remind me of the way, it's okay.

1474
04:29:36,940 --> 04:29:38,060
Guacamole recipe.

1475
04:29:39,300 --> 04:29:41,380
Then I quickly check the changes.

1476
04:29:41,380 --> 04:29:43,700
In this case, I have two commits.

1477
04:29:43,700 --> 04:29:45,620
One in the first, which was in the previous exercise,

1478
04:29:45,620 --> 04:29:47,400
where I reduced it, now I increased it.

1479
04:29:47,400 --> 04:29:49,380
And here, down here again, I see the changes

1480
04:29:49,380 --> 04:29:51,140
actually in the files directly.

1481
04:29:51,140 --> 04:29:52,740
So this is what I want to merge.

1482
04:29:52,740 --> 04:29:55,260
And I can see here that I increased the amount

1483
04:29:55,260 --> 04:30:02,580
Cilantro by free. So I will now create the pull request and then I will give the

1484
04:30:02,580 --> 04:30:05,820
screen back to another one.

1485
04:30:06,980 --> 04:30:12,460
All righty, I will take the screen and let's see how it looks on my side.

1486
04:30:13,140 --> 04:30:16,580
Just a sec.

1487
04:30:18,220 --> 04:30:21,500
Here I have it.

1488
04:30:25,260 --> 04:30:30,260
And I'm now looking at the, that's not my fork,

1489
04:30:31,340 --> 04:30:33,720
that's the central repository.

1490
04:30:34,700 --> 04:30:37,340
And I clicked on the pull requests map.

1491
04:30:37,340 --> 04:30:39,300
There are 21 open, 22 now.

1492
04:30:40,580 --> 04:30:41,780
Thanks to all of you,

1493
04:30:41,780 --> 04:30:45,260
we will look through them and merge them.

1494
04:30:45,260 --> 04:30:47,140
Maybe some of you tried to merge these

1495
04:30:47,140 --> 04:30:49,580
and now you realize that you cannot.

1496
04:30:49,580 --> 04:30:50,760
And this is a bit by design,

1497
04:30:50,760 --> 04:30:53,560
but now because now only the code refinery team

1498
04:30:53,560 --> 04:30:57,640
has the permissions to merge and modify this repository.

1499
04:30:58,480 --> 04:31:01,680
But don't worry, we will on Thursday

1500
04:31:01,680 --> 04:31:04,440
when we really practice collaboration,

1501
04:31:04,440 --> 04:31:06,360
we will create exercise repositories

1502
04:31:06,360 --> 04:31:09,320
where you also have permissions to review

1503
04:31:09,320 --> 04:31:11,160
and merge and modify those.

1504
04:31:12,120 --> 04:31:16,280
So then you will also practice being the person

1505
04:31:16,280 --> 04:31:17,880
who is reviewing these changes.

1506
04:31:20,600 --> 04:31:23,360
So now I want to focus on two changes.

1507
04:31:23,360 --> 04:31:27,220
One is the one that I created,

1508
04:31:27,220 --> 04:31:30,900
and the other one is the one that Gregor created.

1509
04:31:30,900 --> 04:31:34,020
And now I will do something which is not super nice.

1510
04:31:34,020 --> 04:31:35,500
I shouldn't really review my own changes,

1511
04:31:35,500 --> 04:31:36,780
but now for the sake of time,

1512
04:31:36,780 --> 04:31:39,700
I don't want to switch too much back and forth.

1513
04:31:39,700 --> 04:31:43,080
I will review my own change.

1514
04:31:45,360 --> 04:31:46,860
And of course it's excellent,

1515
04:31:46,860 --> 04:31:49,780
but I will still double check here.

1516
04:31:49,780 --> 04:31:51,980
Is this what I really wanted?

1517
04:31:51,980 --> 04:31:53,740
what's happening here, lots of changes,

1518
04:31:53,740 --> 04:31:57,220
but that looks pretty okay.

1519
04:31:57,220 --> 04:32:02,220
Overall, I will merge it into main branch.

1520
04:32:08,940 --> 04:32:11,660
And now it is, is it safe to delete?

1521
04:32:11,660 --> 04:32:13,660
Yes, it's safe to delete.

1522
04:32:13,660 --> 04:32:18,340
Now it is on the main branch in the central repository.

1523
04:32:19,500 --> 04:32:20,340
And that worked.

1524
04:32:20,340 --> 04:32:28,260
But let's see what happens when I now try to merge Gregor's change.

1525
04:32:28,260 --> 04:32:35,720
This one, the pull request number 39.

1526
04:32:35,720 --> 04:32:39,440
Here we go.

1527
04:32:39,440 --> 04:32:43,020
Something is different here and it's this one.

1528
04:32:43,020 --> 04:32:49,960
It doesn't let me merge, I can't really click here because there are conflicts.

1529
04:32:49,960 --> 04:32:51,080
And why are there conflicts?

1530
04:32:51,080 --> 04:32:55,640
Because on two different branches, we have changed the same portion in two different

1531
04:32:55,640 --> 04:32:56,640
ways.

1532
04:32:56,640 --> 04:33:01,240
The Git now doesn't know which one do we want to keep, like, do we want to keep the one

1533
04:33:01,240 --> 04:33:03,280
that is now on main?

1534
04:33:03,280 --> 04:33:08,720
Or do I want to keep the one that the change that comes in from this other branch, and

1535
04:33:08,720 --> 04:33:12,240
we have to help get deciding.

1536
04:33:12,240 --> 04:33:17,120
It's really good that it stops here, because it doesn't, it will not just accidentally

1537
04:33:17,120 --> 04:33:29,900
let Gago override my changes. So it stops here. It, it needs some human advice. So let's try

1538
04:33:29,900 --> 04:33:36,280
it together. And you can, you can do it in many different ways, but we will try it here

1539
04:33:36,280 --> 04:33:42,980
directly on GitHub and Gago will help me. So I click first on resolve conflicts just

1540
04:33:42,980 --> 04:33:53,740
just to see what is the conflict.

1541
04:33:53,740 --> 04:33:58,780
And it doesn't now show me all the, if you remember, I have changed a couple of files.

1542
04:33:58,780 --> 04:34:02,460
It was, I changed guacamole, but there was also some pineapple salad and there was some

1543
04:34:02,460 --> 04:34:05,140
other change.

1544
04:34:05,140 --> 04:34:13,000
But we only conflict in this one file, and we only conflict in this one portion.

1545
04:34:13,000 --> 04:34:22,900
These that I see here, these symbols are so-called conflict markers, they tell me where

1546
04:34:22,900 --> 04:34:25,280
is the conflict.

1547
04:34:25,280 --> 04:34:33,460
And the conflict is between main and between the main branch, and the change cylinder branch.

1548
04:34:33,460 --> 04:34:35,980
On the main branch, I reduced it to 0.5.

1549
04:34:35,980 --> 04:34:42,460
On the change cilantro branch, it was changed from 1 to 3.

1550
04:34:42,460 --> 04:34:46,340
And we need to decide now.

1551
04:34:46,340 --> 04:34:55,940
And I will now not take my own version, but I will take this version.

1552
04:34:55,940 --> 04:34:59,620
And the way to resolve a conflict is, and whether you are on GitHub or whether you are

1553
04:34:59,620 --> 04:35:03,980
and your editor, that's to decide which version.

1554
04:35:03,980 --> 04:35:06,900
And then don't forget to remove these markers also.

1555
04:35:06,900 --> 04:35:07,840
They should not stay there.

1556
04:35:07,840 --> 04:35:12,840
So I will, I decide to keep three, remove these markers.

1557
04:35:18,240 --> 04:35:22,040
And once we are happy, mark it as resolved.

1558
04:35:22,040 --> 04:35:36,240
And now what we don't see because I'm zoomed in is that on the top right there is a button

1559
04:35:36,240 --> 04:35:37,240
commit merge.

1560
04:35:37,240 --> 04:35:44,880
I also this resolution needs to be committed to be a new commit that decides between the

1561
04:35:44,880 --> 04:35:47,760
two versions.

1562
04:35:47,760 --> 04:36:03,420
the merge. So these were, Gregor did in fact two commits, one was this one, one was this.

1563
04:36:03,420 --> 04:36:08,580
Where does this come from? This was my resolution commit. The conflict resolution created a

1564
04:36:08,580 --> 04:36:17,460
new commit because it merges between Gregor's branch and the main branch.

1565
04:36:17,460 --> 04:36:19,740
Now, before I merge it, I want to review

1566
04:36:19,740 --> 04:36:21,820
what did we get at the end.

1567
04:36:21,820 --> 04:36:22,940
Files changed.

1568
04:36:27,660 --> 04:36:32,500
At the end, it's changed from 0.5 to three.

1569
04:36:33,860 --> 04:36:34,700
Are we happy?

1570
04:36:34,700 --> 04:36:35,940
We are happy.

1571
04:36:35,940 --> 04:36:36,780
Let's merge.

1572
04:36:39,300 --> 04:36:42,380
This was a relatively easy conflict.

1573
04:36:42,380 --> 04:36:49,020
Sometimes, the conflict will require that you actually talk to the other person and

1574
04:36:49,020 --> 04:36:55,960
discuss with them on, maybe you schedule a video call, but at least now you know technically

1575
04:36:55,960 --> 04:37:04,920
on how to tell Git which version you like better.

1576
04:37:04,920 --> 04:37:11,620
Back to the lesson, I will now scroll down to the summary.

1577
04:37:11,620 --> 04:37:12,460
What did we learn?

1578
04:37:12,460 --> 04:37:13,460
And what did we learn in this lesson?

1579
04:37:13,460 --> 04:37:14,940
What did we learn today?

1580
04:37:16,020 --> 04:37:18,660
We learned how to browse a project,

1581
04:37:18,660 --> 04:37:20,940
how to create commits and branches.

1582
04:37:20,940 --> 04:37:23,580
And in this episode, we learned how to merge them,

1583
04:37:23,580 --> 04:37:25,420
how to merge two branches together.

1584
04:37:25,420 --> 04:37:27,420
This is the basis of collaboration.

1585
04:37:27,420 --> 04:37:29,740
We will use this a lot on Thursday.

1586
04:37:31,620 --> 04:37:35,140
And it's really useful also for your own work.

1587
04:37:35,140 --> 04:37:40,140
If you want to put something unfinished

1588
04:37:40,140 --> 04:37:43,180
finished or something that you aren't sure about

1589
04:37:43,180 --> 04:37:45,220
on a side branch and not on main.

1590
04:37:46,420 --> 04:37:49,620
But when you are new to Git, it's also fine really

1591
04:37:49,620 --> 04:37:54,540
to start just with one branch, create commits.

1592
04:37:54,540 --> 04:37:58,340
Better to many commits than to few commits.

1593
04:37:58,340 --> 04:37:59,940
They don't have to be beautiful.

1594
04:38:02,580 --> 04:38:04,380
And same with pull requests.

1595
04:38:04,380 --> 04:38:07,940
If I may quickly mention this one question

1596
04:38:07,940 --> 04:38:10,640
which came up in the documents,

1597
04:38:10,640 --> 04:38:13,000
what to do if I have like a pull request

1598
04:38:13,000 --> 04:38:14,800
and I only want to merge half of it.

1599
04:38:15,760 --> 04:38:17,200
I think the best strategy

1600
04:38:17,200 --> 04:38:19,200
is to create many small pull requests

1601
04:38:19,200 --> 04:38:20,320
if you're able to separate it

1602
04:38:20,320 --> 04:38:22,320
so that this situation doesn't arise.

1603
04:38:22,320 --> 04:38:23,700
So in the ideal case,

1604
04:38:23,700 --> 04:38:27,760
you have one pull request for one encapsulated feature

1605
04:38:27,760 --> 04:38:32,220
or one change instead of one huge one.

1606
04:38:33,800 --> 04:38:34,640
Exactly.

1607
04:38:34,640 --> 04:38:37,320
So at the beginning, start using these features.

1608
04:38:37,320 --> 04:38:39,920
then later what is a good practice

1609
04:38:39,920 --> 04:38:42,640
is to not put unrelated things into a commit

1610
04:38:43,560 --> 04:38:46,400
because it is hard to separate unrelated things.

1611
04:38:46,400 --> 04:38:49,640
Also don't put too much into a pull request.

1612
04:38:49,640 --> 04:38:51,480
Not unrelated things into a pull request

1613
04:38:51,480 --> 04:38:53,360
is something I've done here.

1614
04:38:53,360 --> 04:38:58,360
So what if the guacamole recipe change was good

1615
04:38:58,760 --> 04:39:00,960
but my pineapple salad wasn't good?

1616
04:39:00,960 --> 04:39:03,160
So then suddenly it becomes a little bit difficult

1617
04:39:03,160 --> 04:39:04,440
to separate the one from the other.

1618
04:39:04,440 --> 04:39:07,680
So what would it be nicer is to create

1619
04:39:07,680 --> 04:39:12,680
two separate pull requests, which create nice little units.

1620
04:39:14,960 --> 04:39:17,040
A small pull request is easier to review

1621
04:39:17,040 --> 04:39:18,160
than a gigantic one.

1622
04:39:19,080 --> 04:39:21,580
Nobody wants to look through 20,000 lines of code,

1623
04:39:23,360 --> 04:39:26,240
but at the beginning, it's good to use them

1624
04:39:26,240 --> 04:39:27,760
and make it nicer later.

1625
04:39:27,760 --> 04:39:31,680
So don't let the beautiful commits

1626
04:39:31,680 --> 04:39:33,640
and the beautiful pull requests be the enemy

1627
04:39:33,640 --> 04:39:34,800
of just good enough.

1628
04:39:39,280 --> 04:39:42,040
Looking at other questions, we have nine minutes left.

1629
04:39:42,040 --> 04:39:43,120
We want to use it now.

1630
04:39:43,120 --> 04:39:44,320
We can do a little bit more discussion,

1631
04:39:44,320 --> 04:39:46,920
but one thing we should not forget is to,

1632
04:39:46,920 --> 04:39:48,900
we would like to hear feedback from you.

1633
04:39:48,900 --> 04:39:51,800
Maybe somebody can paste our feedback form

1634
04:39:56,280 --> 04:39:57,680
into these documents.

1635
04:39:58,840 --> 04:40:00,120
So what we would like to hear from you

1636
04:40:00,120 --> 04:40:02,140
is what went well today

1637
04:40:02,140 --> 04:40:05,020
then what should we improve today?

1638
04:40:05,020 --> 04:40:08,500
So what should we remove, change, do differently?

1639
04:40:08,500 --> 04:40:09,620
This is very important for us

1640
04:40:09,620 --> 04:40:12,500
because we look at the feedback, we use it.

1641
04:40:12,500 --> 04:40:14,140
If there is something we can improve already

1642
04:40:14,140 --> 04:40:15,500
until tomorrow, we will do.

1643
04:40:22,660 --> 04:40:24,540
And I hear that there is cut visible on the screen

1644
04:40:24,540 --> 04:40:27,140
on the stream and even audible, but I don't hear that.

1645
04:40:27,140 --> 04:40:30,660
So that's too bad for us instructors, Gregor,

1646
04:40:30,660 --> 04:40:33,320
but apparently there are some cut sightings on stream.

1647
04:40:37,240 --> 04:40:39,760
So please, now that I share it, please give us feedback.

1648
04:40:39,760 --> 04:40:40,820
Was it, how did it go?

1649
04:40:40,820 --> 04:40:42,300
Was it too fast, too slow?

1650
04:40:44,440 --> 04:40:47,760
Tell us one good thing about today.

1651
04:40:47,760 --> 04:40:49,120
This feedback is anonymous.

1652
04:40:50,680 --> 04:40:52,520
What was good about today?

1653
04:40:52,520 --> 04:40:55,200
Tell us one thing that we should improve for next time.

1654
04:40:55,200 --> 04:40:57,720
And next time is maybe already tomorrow.

1655
04:40:57,720 --> 04:40:59,160
Any other feedback will come.

1656
04:41:00,660 --> 04:41:05,420
And while the feedback is coming in, I want to look at,

1657
04:41:05,420 --> 04:41:07,080
is there any other question?

1658
04:41:09,140 --> 04:41:12,260
Maybe the one about how exactly are conflicts happening?

1659
04:41:12,260 --> 04:41:16,700
For example, what if we change lines?

1660
04:41:16,700 --> 04:41:18,460
What if the change lines are moved?

1661
04:41:19,620 --> 04:41:21,020
Could be considered different lines

1662
04:41:21,020 --> 04:41:23,020
and therefore different entries,

1663
04:41:23,020 --> 04:41:25,840
even if they are changing the same thing.

1664
04:41:25,840 --> 04:41:26,900
That's an excellent question.

1665
04:41:26,900 --> 04:41:29,020
And Git is really smart about this.

1666
04:41:29,020 --> 04:41:30,780
it doesn't look at blind numbers.

1667
04:41:31,660 --> 04:41:36,080
It uses some really smart algorithms to decide

1668
04:41:36,080 --> 04:41:39,540
which parts are the same thing,

1669
04:41:39,540 --> 04:41:42,300
even as the code evolves,

1670
04:41:42,300 --> 04:41:46,660
even across file renames.

1671
04:41:48,340 --> 04:41:49,480
So it is really smart.

1672
04:41:51,900 --> 04:41:54,780
It is often not a problem.

1673
04:41:54,780 --> 04:41:57,700
You will probably not see it when working just on your own.

1674
04:41:57,700 --> 04:41:59,860
You might see it when collaborating.

1675
04:41:59,860 --> 04:42:03,320
When it happens, it's not a big deal.

1676
04:42:04,620 --> 04:42:06,820
You now know how to resolve it technically.

1677
04:42:07,940 --> 04:42:10,660
We will also on Thursday, when we do collaboration,

1678
04:42:10,660 --> 04:42:12,980
we will discuss on what are good strategies

1679
04:42:12,980 --> 04:42:15,900
so that we can avoid conflicts from even happening.

1680
04:42:18,300 --> 04:42:20,820
And in one sentence, the strategy would be

1681
04:42:20,820 --> 04:42:24,460
keep branches small, keep commits small,

1682
04:42:24,460 --> 04:42:28,160
don't do too many things at the same time,

1683
04:42:28,160 --> 04:42:31,260
then the likelihood that there will be conflicts is smaller.

1684
04:42:37,580 --> 04:42:40,240
We are doing amazing with time, five minutes left, yes.

1685
04:42:40,240 --> 04:42:44,920
Did you comment on how we do very similar things tomorrow,

1686
04:42:44,920 --> 04:42:49,240
but with VS code and command line and locally?

1687
04:42:49,240 --> 04:42:50,720
That's a great prompt here.

1688
04:42:50,720 --> 04:42:53,960
There was a question comment about that.

1689
04:42:54,460 --> 04:42:55,300
That's a great.

1690
04:42:55,300 --> 04:42:57,680
So let's, with everything we did today,

1691
04:42:58,700 --> 04:43:01,080
how will that connect to tomorrow?

1692
04:43:04,500 --> 04:43:07,000
Tomorrow we will learn how to clone a repository

1693
04:43:07,000 --> 04:43:08,140
and work locally.

1694
04:43:08,140 --> 04:43:09,740
Some of you have done it already.

1695
04:43:13,100 --> 04:43:15,020
Tomorrow we will take this recipe,

1696
04:43:15,020 --> 04:43:16,660
make a copy onto our computer

1697
04:43:16,660 --> 04:43:21,660
and learn committing, branching, merging locally.

1698
04:43:21,660 --> 04:43:30,820
Locally, we will, this is possible either in VS code or command line.

1699
04:43:30,820 --> 04:43:34,540
But even if you don't, if the command line doesn't work for you, you don't want to install

1700
04:43:34,540 --> 04:43:37,620
VS code, please still come tomorrow.

1701
04:43:37,620 --> 04:43:41,380
Because the other episode tomorrow will not.

1702
04:43:41,380 --> 04:43:44,900
You can do them only on GitHub if you want to.

1703
04:43:44,900 --> 04:43:52,180
So the second episode will be we will do some of the repository browsing and history inspection

1704
04:43:52,180 --> 04:43:56,300
but a little bit more in depth than today.

1705
04:43:56,300 --> 04:43:59,060
We will study a repository that we don't know.

1706
04:43:59,060 --> 04:44:03,540
It's written by somebody else but we will try to figure a few things out about it.

1707
04:44:03,540 --> 04:44:06,740
This is a very typical situation.

1708
04:44:06,740 --> 04:44:13,060
And then tomorrow the finale will be to turn your own project and it doesn't have to be

1709
04:44:13,060 --> 04:44:15,420
a real project where you don't have to share your project

1710
04:44:15,420 --> 04:44:16,340
that you have on a computer,

1711
04:44:16,340 --> 04:44:20,380
but we will create your own example project,

1712
04:44:20,380 --> 04:44:24,460
but learn how to turn it, make it a Git repository

1713
04:44:24,460 --> 04:44:28,780
and how to share it on GitHub or GitLab.

1714
04:44:28,780 --> 04:44:30,980
And what would be the next steps

1715
04:44:30,980 --> 04:44:34,620
if you want to make your project citable.

1716
04:44:36,260 --> 04:44:37,940
So these are the goal for tomorrow.

1717
04:44:37,940 --> 04:44:40,820
We will then tomorrow also talk a bit more about the balance.

1718
04:44:40,820 --> 04:44:50,820
what is a good balance when you start using it, of where to start, how to progress,

1719
04:44:50,820 --> 04:44:55,300
and what are typical things, typical problems that you want to avoid?

1720
04:44:56,180 --> 04:45:00,820
Of course, you're already welcome to browse these, and then tomorrow come with lots of questions.

1721
04:45:00,820 --> 04:45:12,820
questions. So, if someone has tried the VS code track today. Are there is tomorrow something

1722
04:45:12,820 --> 04:45:24,220
different than today. Do you learn new things. Yes, there will be. So, if you have done this

1723
04:45:24,220 --> 04:45:28,900
already today then the first episode, there will be some repetition but I think it doesn't

1724
04:45:28,900 --> 04:45:33,520
harm, to get it a little bit more into our muscle memory, there will be something new

1725
04:45:33,520 --> 04:45:40,700
and that is, we will take a closer look at what is the difference between a local branch

1726
04:45:40,700 --> 04:45:46,900
and a remote branch. And we got a few questions about it today, we didn't really talk about

1727
04:45:46,900 --> 04:45:54,220
it by design, but tomorrow we will hopefully give an understanding that you see the difference

1728
04:45:54,220 --> 04:45:58,120
between what is a local branch and remote branch. This is something that confused me

1729
04:45:58,120 --> 04:46:04,400
a lot when I started using it. So that will be different already in episode one.

1730
04:46:04,400 --> 04:46:13,020
Yes. Okay. And if someone starts from tomorrow and hasn't been here today, I guess that works

1731
04:46:13,020 --> 04:46:18,400
fine. Also, that's fine. No problem. Invite your friends and so on.

1732
04:46:18,400 --> 04:46:23,000
Exactly. So even if, or even if you were here today and everything failed, and I don't know

1733
04:46:23,000 --> 04:46:29,000
you don't find the repositories again, please come tomorrow. You don't need to have the things

1734
04:46:29,000 --> 04:46:37,080
from today for the tomorrow's exercises. We invite your friends. It's really fine and welcome to

1735
04:46:37,800 --> 04:46:39,800
join just for a day or just for an episode.

1736
04:46:42,840 --> 04:46:47,240
And thanks a lot for the feedback. One thing that was really good and one thing to improve.

1737
04:46:47,240 --> 04:46:55,240
Yeah, and we should thank Radovan for this latest lesson redesigned.

1738
04:46:55,240 --> 04:46:56,240
And Richard.

1739
04:46:56,240 --> 04:47:01,240
Well, yeah, but I was gone on the weekend when Radovan was working on it.

1740
04:47:01,240 --> 04:47:14,240
But anyway, it was a great effort to rewrite it this new way that introduces it with GitHub as the main flow, main path, and the other things there.

1741
04:47:14,240 --> 04:47:15,400
there.

1742
04:47:15,400 --> 04:47:19,120
So we're really looking forward to see

1743
04:47:19,120 --> 04:47:21,600
how this goes for future days.

1744
04:47:21,600 --> 04:47:24,000
And you can all help us contributing.

1745
04:47:24,000 --> 04:47:26,800
We know that there are some rough edges.

1746
04:47:26,800 --> 04:47:29,160
If you go into the Git history of the lesson,

1747
04:47:29,160 --> 04:47:32,040
you will see that there has been some weekend work

1748
04:47:32,040 --> 04:47:35,560
and late changes.

1749
04:47:35,560 --> 04:47:38,040
So this will evolve as we go.

1750
04:47:38,040 --> 04:47:39,440
But now, I mean, in this workshop,

1751
04:47:39,440 --> 04:47:43,000
we learn how to contribute to other people's projects

1752
04:47:43,000 --> 04:47:50,000
and your contributions and issues and ideas are really what makes this go.

1753
04:47:50,000 --> 04:48:01,160
Yeah, so I guess there's no new questions. So, you can expect videos to be processed

1754
04:48:01,160 --> 04:48:11,240
by later this evening.

1755
04:48:11,240 --> 04:48:17,040
If you want to be more involved, consider joining the Code Refinery chat and asking

1756
04:48:17,040 --> 04:48:18,200
what you can do.

1757
04:48:18,200 --> 04:48:22,000
We've got different stuff that people can look at.

1758
04:48:22,000 --> 04:48:27,800
Anyway, yeah, anything else or?

1759
04:48:27,800 --> 04:48:31,440
Yeah, we need more cats tomorrow.

1760
04:48:31,440 --> 04:48:34,240
So that's a clear takeaway here from the feedback.

1761
04:48:34,240 --> 04:48:35,240
But I think I'm happy.

1762
04:48:35,240 --> 04:48:38,240
I don't know, Gego, did we forget something?

1763
04:48:38,240 --> 04:48:46,920
No, I think we went through most of the important things that we were planning to go for anyway.

1764
04:48:46,920 --> 04:48:50,640
We can go through the documents today in the afternoon and see whether we missed anything

1765
04:48:50,640 --> 04:48:56,520
and maybe, if there is time, we can discuss it tomorrow.

1766
04:48:56,520 --> 04:48:57,520
Thanks so much, Gregor.

1767
04:48:57,520 --> 04:48:59,840
I'm looking forward to teach with you again then on Thursday.

1768
04:48:59,840 --> 04:49:03,080
Tomorrow we will be with Björn.

1769
04:49:03,080 --> 04:49:05,960
Really looking forward to it.

1770
04:49:05,960 --> 04:49:06,960
Thanks everybody.

1771
04:49:06,960 --> 04:49:16,800
to all the people answering questions, working in local rooms. Thanks to Samantha for the

1772
04:49:16,800 --> 04:49:21,320
intro. There are lots of people who make this happen. Have a nice afternoon. See you all

1773
04:49:21,320 --> 04:49:22,320
tomorrow.

1774
04:49:22,320 --> 04:49:25,800
OK, thanks so much.

1775
04:49:25,800 --> 04:49:26,800
Bye.

1776
04:49:26,800 --> 04:49:27,300
Bye.

1777
04:49:27,300 --> 04:49:28,060
Bye-bye.

1778
04:51:27,480 --> 04:51:36,220
This is the Clean Pot and I am going to show you the differences in the Sea Watts for botanical olives.

1779
04:51:36,220 --> 04:51:38,280
you

1780
04:52:06,220 --> 04:52:08,280
you

1781
04:52:36,220 --> 04:52:38,280
you

1782
04:53:06,220 --> 04:53:08,280
you

1783
04:53:36,220 --> 04:53:38,280
you

1784
04:54:06,220 --> 04:54:08,280
you

1785
04:54:36,220 --> 04:54:38,280
you

1786
04:55:06,220 --> 04:55:08,280
you

1787
04:55:36,220 --> 04:55:38,280
you

1788
04:56:06,220 --> 04:56:08,220
You

1789
04:56:36,220 --> 04:56:38,280
you

